<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="45">
  <Forms>
    <IconList Class="TCEForm" Encoding="Ascii85">=Yjk7R9)9[K6H13z_bKfDIy(bf@[FF3[0Ws-5]R1bVzrDh%]teptLkdBOxhBhkuNx-t#:=Jm.MEeCPZA+NfM[[UsjVt@0THJJ#}IH1z:hP1Of=(?]oGA2;MMp){tL=3JuxaAYNj1srJu0aYGiZD_EZGDSqvbZ_s,K_s.5Hiugw86sgxIXIg]oWFH_VPTtDYk0um5Ibdvy$hz9wX)InwVkym1n^$!2HXP+K_=o#X._A@-u#jVIl]=S;][T2rTKxJz.7:BYC?n8M,av)7Z)=^G{Ibm5C3(,tRK)642;e}0CjLiK3tjrU[WrMhjU3:ft*oUa5QYmM.Zzy)).n)8nT,0KdQbpMMDEarJx_NE!Ow4AMZsx#Q6U72xJFA#gcY#akhpy10O-$esol_hJ(rp(?3DuSi3^ae}hE%0*kq?J#I;!WSl]3a7-m;C2fc@=3+ZPyj/V?-2tHAV5thShd?yrm0@{VWRmt@D,gx^YjcSDw[$H*WDj=CfTE$OxY/LTiT_/s,b:W;5X?Q10S/StBmb?bN5MbzC.2z@_L{qznmqeOlZc$)6-k8nQ.}]YXg{Tn!$JeuexCw5$o5B90MSqFIfB49dgJ/Di%3EI$I;5d5rLRe5LXCP!Tx4aH:1?.2U*]*:06HmT.Ml[XlAb8]aph@eIFhX?eis-/otuC6%o*iL1rr7217+nj.j+L3/Aaa[PHoSU?)v,g!DJ?zsdO/IN!1V9XK}a_3f9:A1i-[P5Nehi1S}o=R*3HR?.y6-%(?z]2{;}H[#DLe]0/I0YegMZE0[J)-aLI4+JpMS3RJBY.Risq7A@W#-c0+fx([BpJoDdv$BRlfGo-(M.4$p3/$d@2g4!ebeOClD9iz92eO3#VJ@-$P2=QRfyxf%knimv[8;DT#GLJKS]O,r%W.AHlMM$.736#*@!FjqF?HRKYlsd205HGl]NjoFIk:/!y#J,@znj4S6(8j[?r$c0M*/C5qo2xVNBRfFqJnI^b?.c_M*+g(]tjEPj0x*hcf8?zf8QG[,ysE1Zv(vI+x#5k+cJ]?TU.?b1b[R4VZT?PZ=:7-@k0qpdjwLjw^Z9*s*z+NLFN1jYW.6kL2IDt00%+Zfp;ZC8r^Sa=FX8_KrddwyAP!Jg=xaV_Evgst@u*hfB;{:eh(zyg],me,4]GB^RJl9OTULdEL01almpZp?b7(5e{q9E0y6(r1O6^C.C[ce?h1$#h],,11Ox(ZZZ4n}$lUyURQ3S@r9tqUNjrOdE7#:(JKTIUz#o5le_XaW=dbs(WC^CU^+L}Om_:XATGJX1h5P]G;:*1ozk]PV6SO;pUqNI4:3jsg7Q):r7k[h}*.EfT0f8^MH53YjI^=8yif;Yq_9sAI/2fIJTs^5)(i=.daIiF.LH01m=+%]RQn0(.niw}x;1gHvayI^}2;H*(tUodjW}5*#K!YrAZ4XDKkalqN07AbZ^_)[@W@#k@cQv8@P!l5Xui[!WAAR5VK7Z.ZN(nmj.r.,f!@+,!,kDWmRjtABn;fiO1A;DvSug,qGELQ,0Q:3TA3?-54$ii6(LBrCYcSSL-BZ.@ayXcjm@VHPM=qdj^pQYkbKOQq^T8{x-gVyGFdXIeU.qGa+S8BH.WjSSO)C,Sq[QLcP#Nicp%!:Z3/S%oD,2)YOaOp=5CCxY[2#_[0Jz*%06v*l0K)62:HU:*@5)(f-U1Y4BsJY/%JgiZhH?m:gZ/l]TXQul;*n-ci$bm][^+e+iUvoLOp0.pnp+KilI$p(bYs@,my0R^Qp6{Vn2*0qF%wATWl]vIzDN=(/a5(DOQj={S;$*/aZ)qbINoh.IvKooSwCsZ??(V+(GN]vXQr8NAr0078_*[x#}V7ibB]xdhCaZ)43#Ku#nd8C-CBZ{nBVzK/Y1RPhxrM@71CDb+-]kcN{5;R/(%}gua.MvyJ%!{f_-PUKtc)O4{sy^Vo^px!J$uqsRL3{((:%z={aRRQih?9SU,ocA}hYPnp+T]?l9pR-ql7jnJw4=ZY_n.HgW(!#cEwGbYb$thu6:E5g3cso,o9Y0{!hx/QYHh?4gL41)::.vS6u+R[/[?3RC+:,}IGmZ[Zu0$RiHWbip7++Ow)ISCC2-0@krS0_[5Ws38LbhDh)ROkRFk!2R%f:33hAd=LpdqQdFF$F.Nl+:ML^,}?B6/)P[Jtyt/nHvq_QIdp/CTNB$q.3/n}4h8@KQBFd(eQ@EIpgmdFcbnF0H{w_n!!9!=Zo,4$FIFA_2NTvf-PMsfP=1Z:qZJo$G-@Lg/twK!eC;_Fz_dLCl@{9oM6dx0)P1g8A+Z31Eva2Q#o5w,UHxJl[g+Abc,X14];@!aMB_DI95hvxjs3_[UTpbd$XC**XQnP?W=moPMLia.%lA,}@B%(:/)x]p=*G2[Tfi-s9n!Lme#DfW5NN/@YPxvqATp=,]$2Uzzcd?l)23J@2Rd]*UZ/tOyrf,tE)fnD3qmg0lSNY9;yPEWr#/3d2jT#i4d@L,Xvabin^.wvE?aNrpy3GeFxEC}KHm4C1^HfK7{7ElGQ,e6*ZImG]czPPTkNQh]^%uW!xPg11xmJ0fdG62%X5Ljv_D+}cqe]YZMOmQ;2ZrQ[i3]SgYNV2I1^XNu1ngaWT@#iKbI7##S}570iw%T:oIr%29b5_rvT!nK}^F$SE2-IZ:KMQ:z#!;7IOZEN./lHi7?:vDnyJ-st?S*NF7gm75vFz]$5^6ozu5.k!?@V@r0uhB^dVn2C_K2E6;kc@hhA[-5VRMuFd-guTvQCF%x56y?[t*XrgQE!iP1vcP1[3=zS$QCt}0?.hE@V/PcjPt_^X$Qx-jCS+sR(-pBCV-ssU[TZ/kk+78eHqco.IK6G!^SPo:?3o*wOr$7T[eD0]4g9.H(yPYHd.W9;[g4@^)($B#Nuh3:cKiE74p{!irl}]s}JpF33(vtJCZc/s3zu8q5b!l@W9zscJWib1y_3Xt[GE_/xq3Hfn=T66Ddc*X97Dh@liHHEjb^ElA;UFs1W%?Hbzn#+H$3FBBuH.[$0vr#A,8Y/(_GA:q:d}%rsnlsdOJk+tlbNK.1l#%P,lLO@*Z}4aOP_YUC+pW3LI(AlG@MZ5f}yf2dz{)YEecGFu^9KYwdAN%cz24!D,iPOUfNx7CY5SYdx7u5]HguR0DQ7,B/.=NyG5uK)1#CU4^e=Og=)GEo*,4-K3:S$y4wk3CVSx6ZJ{2rg@WBZpf:Y1;]V1sQzrwj9c%m9qp1lyDn);v5lJSEP*%eIR_4.CbqZY_GXFS;mWGi!lP$LA%vQ];bHX6c(BG_Wt0h#x?Z_7[Emcx:xe6oL5k;=,Q11?!;S2TDdJPCzDLz.[Ba}4_#!r4;q*1S$-MbF,m2Q0EO%jFM5aT6wvYCpTI,36gboJ67c7{Q5EtKA4w[zrge%)A)f7}9UaCubDM=OR%iOdNgAa=fUcU?cvp.7BQ7em:12^dvFMh91[qo{mkwT0C)m$lYn=QpUglJ_]=oG@bj7R0mVO!MZlA8a^er*O5z$EJtqtG4y=#UgUDlIdHRljiTArA{s5G}xJ)xFcSzKLF[g?Qd5OUK72O3F[7Nj{2%GJVwegr8vuxm9rJyZEYr[axe.#eXBcMdo+_9a++}xlSq%=Ia7oz$J79y,CF()i8oveb=zZ*K:K;,.56iSIL*[7LK!u,Bwh*xgAi2rky^{61pNW*v}oIo]uIp*yjt*2tdx,kGf2Y^oKsgl(/vC_1C%Cl,{a}*0@{RbVvu+9]rq3SFO[u@[C[v($Z{U6AuPR/HKWiNG{7g4/s{DTA;s4%95)}s;T,xcQYaQdu]pr9Sj,p+wModZfB{HFN?=Q3UqVPt-rFaT@@a0NLzm3c_5AV^;3FT);=SVrMvBX^-_!ybPTqk92:@sA2cL_tlD*YqIwt,C:+RKtxX,Q*P(@[@+380-Edu4KXPS^;[Cs}8U#,RT)U}rN3P8HeUanByv=Y0JF9r:?:YWA.qvmrxucmzd.+g$seC+M+Z%bKAA^$_bXJngtbNE97lEFT,]O7)6YdZ(Hd]SyjMs.CCO+T_%1VU?b?,K-iq5@l3GiET4o?gM+0M7zz6xP;V./tzE(uLhQp08/5my$h_oLPvwtF2SnVl+uc*#UG%wtNIO-$0x=fUK]gv$1n@+uk?.0[o^xD_+L*g$Ri9+5z-jeO7BlYfl2G9cV;e4f2:@hyz6WNCEWv*{#aryj1z_;M_^m,wD80VS,BTdKJ.b]T;B_=w.nws93yZBgApt^7_#J[=)!@+EU5e*d)9neuOCa2#ZhF!a@FV9M9aMpgzZ])@9J_#payeeWn/DV-}]Tii2$+BH!n2et1KWBGh.iiorsSzf=tpg7#tyn64zv7Q8J)N/bvZ9wRk4)9T(eU-)]%51.N=decdU+O!q!sJ.BS.kc?aT+h8d:#(+[A[WIxIdLd!y$NHqnm(iYOXRz,h*WXD@AboG@h43vz;cSF3oKv70s9$gCVo^N?.8YKKtcAA%nK;gKx_cKhi@L)H%S!.ih:%1LWS{BL^kIq=D9Rk]kzlUnf?],B$73@h6Al^7NtN{5Yz/%]z6Kvxr#*j]A=+noPWL$_F5K(X}ch;V*[(RWs1rAJ.jW.uDAOw#l#{_b_C.#)#UVJPi1RqX.oD#2e/;w%E1w,AT14abat==hC%:U[nCAJH^G{sQn7@-2%fgo*P7_WGyp**P:=-%ua_:#3jjUFCzN.-9Ezz.OhS,+uhkVejwzoWx{3#YZz(lTsvoXpD6}uap_Hlsb8lzoV*EkkdfNKspvMrNKLH[g%vz2O.GTN0i0}9]l!_:U,h%]668S{BApTlkhb77z0AL?/!](DDQv4F3!U2E=a2*4iB/xxG8q{!DtOEeX02b+9+Rc=y*d9U,n!Ut.UUI-ojVg0YKs+2d[3*OW2bACdw!bKdp#Y_e/35l9rgCl-qXV8H0Fqhd7!f6!0H#[2;Kuq_9e{Jd33?K%wigKgdbPZAi2lte0M_({Xgmp1fPb/SM=U}4gb0wPAsRpeDj^XvdEdHNY}mPPFOL9d;q^6(dib7=xIST,))Pb;ahYzp16nBsB4fk1z+wbEOG.%Rl3zzs8pH,wD9:XPuZ6@.+Vk5.*-2Ycdtct/T-*wD)2LQ1Ubuc8frt#ie;Ai:WAgFi1d=M9!b[J^,hPO2j5fe).mn9^79(d@bJ,7N,)YP6f,izdwO54t7A6,f4wG4S@PQD(v9Ekf4vXQw$2Yatv!43@rxc0g@0wTdD/[b;;kIYB@+(?N9^ZDZhU:bSzpF@Lk!Ai$Lk@O#($;[RRq2(]JQ}zvWa!:_EE8[{?qVUFyuyfc!vT}%QE7Wri(oPIZS(nlKn%y#eeVj8?IB.:pu}y,.9K)ZdYk_Najj:j61Ncm14)%,0Kn?Fa;Jr^GNtaDMWjqt0Q+ZxH0+ZbvNqhbcIww^WQZVC83{C0HW7R(*K(jmnAzlsk]$V4!c*jKFOev-2vU}ttJ]@maMl,I4Fk3u$xuznGdjp$Kfyqj;[sO6)FunVm[/({52BMLM/UaM/oRR$@MIS7#A?[!dY$tSi:{L0jN{.)IGu@[Ju^RzkDl!X?]hc8y[VyN4_t]9G:{IR)NIK78P:Tz8-erV8TlvX+p5)E){=:l/]j-R,.D+de8M8Z^v$lN77@1R!-x:B*2F)W%sr(wkGcZdQ37CU-Mg,NRBaicJ#/FIaDSq0bmPbP9niq(XgOUaUFjmGZH8+XMsyvFpvOENEc9[V4x7o7?T_,-Ot;.y[dyx,E+%YB29q%hE_E!]JR_Pg+wsgvbWG8[3RnuZ@0V?sc@Y_Q?A0kEl$f]o=cUC;qQCMl1181PMdL-Q#9qAZT(+J)eiOQ@gptFjo*:H3C.$:vh?79vE0vs8qBc.RF?_0eDx9gWV3+}p%B;MnOvLY!!ZeUdD(3dInL9q5Vr@-CV#U1*Z@W1jqLED,PI[./fwsB68T7;s8_Mj5P;.MBD{@nE7eyg=9R,u=QUS[nQgW}6ok=D+WXtDx(mFXM+@k-1Nn,j,CI{}JC-@3.muPCiw8Y0fO0YCbweU*fwS5X6XjQ4M6l08$mW}%wYc(-Mz8F,?Q.$+_QZvbIF{Vsn2jjeY68s=RiF}dmxUQSx869aiFXXeX*P%D))iVs9b7eDwS7,Nwt_%8(uH0Tq8q%.5i!zHCi{W=80R-Ic%EkSA)]kx;bb}m9UYtmr.,(NeHsu!OzU6mkJZD.F%yyi2NO!ho[FNp)CDJ,4kA(?nPh2n;1sl}GgBxdEhCYdng10/2F@:9H.cm^2$Q^^z$vq/bv@TLgLVNcPKe{Kv1)Zh!yx$*U-mracT_ct[c(Uh;(#Ez_%PMz7A)y3_c^jvzMZld+%%aTUmRTA9JmiC_2+{KucQ(sp?6Bop,d#Z,ibdl^@)ef+zn9{f+.Luv=Z_uMX_??lmg)2Cm)POpWz+g$h6^%GB,evy[n^.zC!Ul(+A}/E([2=hEK]@.,}U{;o6v!)Qt6})rwXU]*fSbfmUp=P,AR/-6GySVXFJlcpW*fQ,^WBa+,$+DcMLjaI/]9:qVB(%NIh^Me(5;{=$YlHb$q;+x5VFB,+RDUsbfiHnGH*n6d*@j7}Myh/eEgLVOJPdXrJlXm,,BtxAA=::uvKJQ_gEEX{htxe$h8Rr5DOvsZ=*]Iz^(,zwDprE/5$Fq!+=Zb^s}pa}r!F;lt4)*2LLXF:tHNvFn{fGFWWx@D-3^6NQ]*ZX$[wiy;xuW]=vBw9qezwlMfk[$K=JU1nU_KkvJWI(EF?I3WG{2+nhk9pNKFa^y(P6[PCyEpjq*KAHf@Gn6J(Zfr3UDQpZJJzD2Dhc;bUsxvU)2TP8W5t4W4:[LA8:Xd(/m1rgiBA+PQFW}z,6r3q-[Sd3@F3Lee;uIeilF80_h{qbAOSnF%RcpYV.3pgtWvhA?md%l$qlzOM=$6rPI:fny+,A8y.O+3U_N4@p0QZnn,0RLYa3V(Gou^i@Q)dA?S73/i(:kJ3*fCM^IQYfK4;:8FYny_88Ezta0)#NjLcz{olU_8]3/652a,9lkEVNgqCOUYW8muDQlJhJ[t,K9OQ6zRPT_41eXzsp]@tsg(l=N]{d;AU}w;?GgVjCC@m9:Fi:F5hrou*bO#izxm/+MUYCsyB^yi;/or)$vYb^x+C$C{,cs/?DMC#wu,u*_prXt2@qZngRgRa^af=xNf72IL0r[43W}]eS=x7T2H77[b6Ky[:)7s?A])nyPo#]?BfsD%)WL5UxSy#;Hc#-e}S[z5m^*(#LcL.,5+MuDaHNjmL,BNcEui]T5ef19kWlisRq++{wRr-vA}7C75gN+)8k^X#25}C76@smKD7=efgk%ZCU4$$,-8ChuzG}ykgzEoh_vTye/2)6TQ_7#bz7H?!::=IOSBIpM9h/u}VFfXM5TlMGjOCyc/9g0150E@w+Zn9%KvV9)$)y8TDyjm6z7FOf%0,w9dJC9pVO2liZ*+i^E{-bK70VwprHa$o}Cq.9L{=8C7HJn)th[oSVv/j3{;sFSKLXy*7HK1N1^hYwIfvJ9WWlH1fiZA5.AuW;R-j,-e.4+;O80Ken=h6nJ}BsBUBrc7Es[SV.D)J3]-+[qhFDxYebMGuJLlG]o3kBO+7Q,L(6drS7Zm9=uHcrAHu2CnGDJRrK?OYGB,-p=P6O]Xh1CvE(aPCrX#ewnl13(6d)b8RBH^U8OpcledTS;rqDguN{Y8pP0:u*jcd1eIY96;v++!Ut!;_1v%.4)Ght8_DwEge]Ige?7$)s95#76$z[!3)Y*8aO.u.lJa=.{sqyI4@;}NO4RcrNgOO+Hd(OnT%,*8fbG%P{*z[7fHoL]B);BwgPCdLmT#S(6;-evuAxrP(]sKzM9xyzMN}fiz!l7)FFdvLtDtuK*H1y6[];V$mtaN=hYWd;fknZKwKGs=IQ0ohi.zQ?X)(7r=9*:#.+MlCSp9=O[2WNfu;h}HKdYWmISuZ87RS!qb!99h.Dkoy:-q*AhCyx(:nBHgd^rC1RG17nRUG@vIMck63:/)B/gY9i@znDxt4NZ3@y1zAr94HN3!c.]YObV4*Zg}v(^McQ{5YZSI%EH*%geQ-T%-x0r#C2kb#79IXj5)b.syv;t-4m#SxsIQF9v/gwjwAp(KjSwrn$sHpdhYjiuShSqL=l%[)ejMNcXzhmPvDM1mLb}$SpHE^mv}2Oa*E=7w!/7xpHgMSg+fLI6CPH=wlCCmJ6G7[GjhX*QD/LI;Gwd/j(m0aZ?9)J,8Y=ipev%}(mHvhPa{{v7+o(5^7xAzKkZbAd2ghOTYo-ipbB,,*Y34yh:v_FL?sgH-z=Zm=2DT3^sGy1/2vj[:j@z]Z{7nug0brrLP14l%l-K]D(tkuJ{C%_Vq;,Rk57CW[nWW0;;a#6mr]H5ZzFW}WUb7kHJk!3K51./6LK,kjx.Iaz0i}]WdSHP-tpk1@[ujlx#-CyBW{H^A;t=#RRkk0V-lB_DrR6($,6+aOwyzYRbOcPLKaCA3W5EGgCA/_iFxhy6p9sFuAS{/T_W{HQFFLcodbe5Z+r@YRotnnYn/)#qfPgaFkySQ5P?LZABUw%lEWLa:e.+hyOr6PvLL$8LjJI5nmD;a;NTJLaQ?xU:hHfAo5qS[O^Xdzb1u(*M{v8H6_((y!{q7E^ATZ8U{:ox7SfDJy-o3K=vQ9:SVMH[UX^2A(9mFAGj+2RB)aQi#p}Dp6cr9+q=Zjk%QP$CnF)Kx0SzqGt/t]l#UP52wS6.l/koW5/}B%nO-P{?*?Pthl7m:A%Uw/LHMyxru5qo6:0.wx0j.W#/9WxO!U7BCOxyBjPa?Wpv,vzUo,G#YvR$0NkZB{zhG1)*1bneR^Ggjd,YaQ!xjDLtlUVtl=QYS@i]TP7:mip%i)j(BOKWxw8wLkv-I?;HxGj91,uTvp@1(l%KrAZfeXC=1?d_vR;?{ey+fL]O.)B-^@mMN2IF2gFC9+}]YA?5Iact7KP$([p2sHB2#t]wD3#=Xkw+[QFR((0)74[jL$3a._gW]*Yo6zNOWj}Q-S]DTQYv9x1B2@B^C}(HJxFipA%B.sIOw4]sROYH%yKdifC*:_Wkr[k#PEvCodJ_;bs9WoDzDbjf7vyAoQfXem[}c8Y9X^T(,Gq4l@9ocgEM]/9Q0Tr4xdvc5Pkld;ebuJT^X%P2+GR8$)mFNO/hX;pdB3Kjp;,1CmBSZz[-1A][}jZV59%.@cj=Nr:{vA;H@WHXJ=63s.=QM6L3R*nA(0*3lt2U3pmU1QDO.+imzh02R2jRre_cpA@uSk_=ZBYf-PtBkF}4K.45cRj)[l_z0!1lx7hanJg:PC%l{w{+!aIv6%e8K+sjR$O9BQn?FDD9_h96@.kmu(k73ZL^3(%ganmBp2za9;S71kjtp/YSV:)qapZR6BDsxo;:nzX6qRTT07hP_-xOsk5i#ax(e3rrPPrbW7Op/n_R[yiVE%qML3$b88L#tt*kCJ8$!e.RbFZmr,l.,Sb,-feZ;OHI..mS0i{u:L.xS)_fl*N4s;IjG0_a$am[mu--n**I2YPB{U]T%@O6peUmjkM,;:(DISJ*@?H%Ddz4(/e?CC,pRUiVg;fYpK^gSQi5e-$FO/P^RuVa5:otk7/Cs4*rgpnpH/ew6VHMl8kX)m:}FR8,OfKmXi=Obgq;JBk]QQ0?;?9hKD_}V)xT90XX??Q;9Spqyz+ENST_u1@C/:vd1BM-Q44,^z,-2NqqjN?LsLU(=SHYu*Lr5d$tBVqoPfwq+I1ep=ZH_=]2xdVvJz?vt.?_E-#6Z%7!WsqLi/![NYqyy*kjr!3[Mook1r#VlB[Apjyo2VH-sPM9?3s]/}XO!=i6RR+1hT4gq@04E-eyf#-GPXA[HL@.Bax=AiaZXdn![U5UkM=:[[jgBJ-/8#VkEn+Mqc9atcI,Dhbm.FBuWisM9YQ=vgSuQ?ZbK$r8%F7Y*(p!$=wWXDM:5O^!fEjc!_/AjU*]i4lr}:8Cx)e3.kusIF?mp-N4wW}WgLkyJ-R-.PcuZx2{vcPkR@DvT(}W4n.lV9yeh1qKLpWr?XS3%}R3j+w6kexz)?mOGsubw71$eU[?!wx,u*A^6U9uFcfFff3*o#7,9in=e*mDSsgu!+^RU$1Klre3V@Mb0*Jrm?/z#aMqWW8^!U};Y6KEuU9,QEsu9,m)nz)?9-42JZXDkG1Qj7b}q0j!x@1/sTCz0rPGcao$^7;beRNivRGTIk3Y2;4V.Ai.rw9PY44-QC)%GEW^*S;joH5HFy;C+lAegUTfL5*vG%}!RNlhQbK4?x0W;;sW9pS8%.jup;i+5{M1JJ)]wp;mS)=Mfw-QG;+eNIKipaY#:yAORPia1#%ZJ9W#c]FZzS?u1.wowAvah_=V)n6@[S^?^F0654J{xQaNPq57Zj;b]mi+q}eVBB92pPs)hISUtt_L])2{5oaCN7ldsJNw4c5.4Q8CbzbOipW7#MfN}4I{40Sqmml-)WQltTF5yB_LMk8QZAi2KxG,)ui3zyb#C6SxrW#kbHxN=@}3}Pac(fsrBByM7WH$H;Rk8C;a3=wH7dtYo?}Y,H,EH[OxEAv!wSj;SVbpZ^WQxB{Fq;6:Oj{,s_jFEGxy;;t7IVes.vWTr2bv0rlytSFgR5x]?2=95EDNE:Os]cfEQqMzR[DQa1zGhC,Laa.$oJH,6}Lu^wi8@0m6;TVeBtHKTSlx,V=oQp9FjC]f(lYh+9Py},1tM/OBBr;f!/($Bq:rddagHmC.HAXzYrvA(WL!,d+(hn7]!DcGoZR7g(?B,awt3?[wbCp,}6;l7WoLQfcAknQ3-^gsq$$!U5Tcr@Lg2oVJxe3In3?q{N/D7Z3Ago8HJi=KiJ[,p2gbfkwE.Nb]xv9GKY2{6Yj+/,b60fc.J1LTt9^]%OGZuD8q^?Czf.W1=Hflul/cuM#MMLFHEa09u=ncmMHp:3IyPAG%M(W9IK9A(i6TRi9}9utb+Z#9P@XX6PZZsDcVy/=2lr{v8#G/cLD=7V6=!{p=-[PXV}uj1:1.j5U/zP7GsUSSTe+O}6mYqNK2VN?yA#v8jD[Rsfzgq#!g6i9H1d$SvKxSV?MiU[uTp4_KT!XuOD5mGZ0j.!fCIW!ivg$eJxAZkmtylADn768/)oC6h3/$C{AzV3HwBdVkHH@Ruj(((EJ6RQxV_Hxbn].EEylT!5]P@tc$G::#]2BP#I7;HrNV.}}[j%o5.]fv1^ze3/AK!368^j;Imd_1E8hyQz$AfoA=$$/GMJJTq=)pj+-zt!3v1c$)c_2_7a69R)%vx%_*c=!=;_1ZFjg4[SX1O7YMdH:fQ^}bHzpV%4y2}0=TzE%Int?,M;hy79b:j.#tn}U:M+8JW5hxRu(1em(/6yU_,t/B%9oT9KUK]1w=A,;L-AuH){eQT*ZB,2!Bsz.TlAUBu[9K=f4RMmwqKws}SBt)ZVuklpi8D*u#jLm3*x)+v:$)SI0wG8q5Sk.7B83fArwB:od:GrWR.cT@=%TuTkC,$@JD_#Y[i5VC3Qxu}JlE9}]mkM(edl@k;7jv+d)G=2Z$6.ZZK6Z9Hfw}.WuX0%N*HQHzX+.QNlUC{Vl$Djay=ghrgh{C]XXW#7CAdc;GRDxz:qfBeu=jb.qBXGNfIhEb=r8wHo)S7hq,We4ET{cz^OQF;fBO9s,8ox{IOaBrXWcy@N*-1$FM{BRxe5i%u-$=}#r@FLLzo,{Q@Uf-aAT58Cf;e!O%iSr1$5KqAw}f@/H:a@)^VQOxZ9lMVGuD[/M*Uq/}Dtf6Q-G^ggdG5Ol]F%hQ!{YZu02^gNVS#w*mwdj3A{m=B^(RD.9C*]yvit86/kP7G#A/ynN][ZuEc;A-/1RxewqaL:6w]T]M8sR#-nyh$/ZOV}]2TcqcNa^FIcK08Ph4V*mh;#:Bc567QUpUMZ@yMdWyLuj)/dU3lxgYI#k4#66bVMWR@j+I19oGAU?b6Oj;r=!{G}tpmHOOpQzTB,=hbC7smpwY[=iN2ljebLC]()n_Sgpb^frLuEP]@}10$H*Qt_n8u8uk,u_nE,=NEM:F:Sa$DY3!Bi@+?xY(oZi84PjTWKjtvf4sVAA=g[Hhcz;=4SOq1w?$h0O9TLC#I7vo3tmL-)(}M5!fJ)do;}Z8Lq++5}6+nEQH{1i[m.P}TTr8dW)P7=_!mp.TxocD:P;Qw[[Mm{ySrRs)_w2nII1m31T8Gav%/%cm2kg5=BBLff^lR;r08MQ]9w4t]!}xF?zc#VSf5NHf%NqKKxNLantx.p,oLYx-pL@sZ?Vj)u4QiTrB;FUqvjfp*^y;6NM1*kLGOo-BrMyu8vBb^*%S?$]^_W)Egik:bXLfWInh$cZrLHjal9aatgEd{48NWfbyw6I#N_cg[lf8qEaAY6J:]fMtZbmkQzJw,k/7=u{jZ]*A/bS6aGI6+S{*+.N)M*OqN!FgJCux]Y)[pa*5dQ0M81:821q1bduGx??QR3BPo:!QVkZ2.!kx.67X#KbtGrEk.9pz7dw4J*0MnQ0Ow9?.FG?x/m+([e7vfeB8eK]k@*YgL]=KW}ZhDTJg]qvnprNOC]I^gPV0VmC#}Ejvp}$JRPH)+EiSODd0]FO0_kw9Ld4wI.MPiQHHaZQClpU?mv@y*dUEU#Cq_3Ne4p(^#MGTyjl]V$rI)aC9_NERSVbRP!F}HNyM]p@wV{IZ2^!+n1EQ5ecJ;PF^hl74Y3v{p89T7/Thl%/F?aKn)#GjUdn,oMlN.0^etMeSfjkP!/aGuRj?sRUuoq@:U4s8$I!vbr(9)FovGuGwneOUq/zl5[_^]rj.!p-#5#Iu[1qc3z:QBklW1WiCsKD)EgUT-@myBlp=Q:BtLV!l-WgHoCQOWf@3tvWt,cP#0Aq7Z2QNh;IIxd},J?DPJk5e*lr3VKG6R98u.P/b(NRA-E{B}ka$yWE-%?(eXyCc6C#A}lND4kWn-ENEcqaBFmb{y5@c;4bSjqG)/(HeX]WQqM[pYs+dZTQha)#FS8-_I$m1lwALRR9V#(eg]Eet9[t!b?$]@6MUYRR_c0?]jz%OneyABoP_x2?(sx8B8[RU2iGHl7tq66(H*s?,6j+KX]xN*{vTq7N#0=tOvJTTb][=+M/rTrQBGHAPv8ekQrY0=52,R2VV.(_RJiJYfrV+Lz%Ol1sNh5TeWtIu;e[$ACsb)@1}gX*0j]Fcj)=0p{3n5vLFNsxH[HM;iP/#1(),%A-GZD/#U+7gIf}Hro8CI%({,6!I9t+KzvDiMX#%%Dg*8jz@q$SEr:$+#+m$Oc9N-CpQ(s:ll0{NR@)NzS,jN)MM,8UPR_RG?Gh?7f!2VHSe4Ku(r:4U!WXSNuKQU1SR+p?hBQYewxj{wlVE:=45[AmyeC=jMHbn5Dpwxkcqf_j:3hFj,-!6ZZ-EL[sTpmT@aSg*y$X]a=7H9jCI}*FesBd3oEouWc}$NW%_U]MU^^4-3nT(qOTJP#,Um]2$xI6fNLqi+(;w#N]}0Svj/j4S}S;Y=54(3HD@JXzLh.sO0XUz3?6Lb-@Z(^4ouqqa8]+y=Muypielu]#x4GG$+^?*GZzNaJ@JALg}sNeyph$][9g7ot]VCarF[.-Ah?EVXgx1X553c-0P0@{=i3}xq@/[uk/UcF]G[K3uca#q=$#_sQ}e_ODc/Y}$?-%cJ%nIf(5xpn33G{L@oMso%Ah6J,@=Dw9E/Zo+)5w=HLInrTo#:^I?{oa$4#$J?=^@G^@*Vkh{-@BD)2ykk4VIa@}0!G#yhhl9QX5?:a3]HF0m:DG:07;c0kGXTq+Rd/C!/]bE.[$i()XQ+s@-O$dZy8b(qhK1S%yv+CS;Wn4.Fj#E;vKZM+vdXzyZ8:_ciDJ8D=6Lj3CA*0xi?ud1%T@qzZo/_#Brk+qYi@pQZZ;{{i3tDSh#qT/[aoe#U1I/r]2Kjhd^apy@gsEn?Xk9uqCaWdS$5.:cML5@v*+N?OxWT(3@co?HMhDRWT8uP@OFluojf#D-^szUoRQp(Pz,od_e^Ry0$TG:StotIhM=nJqJa?z*Zgvy!NCp/Y]s-J1l./jwh=iMQmTD0.!6nv/Rob=kMzY-jIIBx3(hx%r(pIr$?uFwP{glRqWZAme2H6tkgWOWFb*1-d4y/!_Dc9QS?:q]G_:zK;/2Wd^T!n$iyg6iaSLa)nTGRyNZb75vTmP%8:vx/9*VOXEGT]wT-MwA.54h^l#Bee{*:awLQS}9?38QgOPJ_csiZ9$tkdrC-y4lgZd8dR87GCoK%-c@sZ_Hv95v.k7LwY7zKd0m))#47fVPv1oX+TcSG1]ewm8hSI]y+v5Px+=-pw5KIa%g/hdI=c0LER!-EE@LI+Y(oo.TNI:^7qwI=aj5_RTp5+M;@x:LWwO.fgrkf0KrsDrg1qaSmCx^FYBCqzR{QGpeX.A%mR0Cqh4d-{brtR%)hlDu]ikZs[k3bBAz$_QE12Jr!m,,+i;gqN#}(6Pf09xDB=.yC87I./.7],ar00NtAd}zVi3H[ONhH4_?I:2$.DJBp^Qq1Y^}dMI={F)52dkq$UH[2$%.EKacSZ@q4+Cw2q6-XeZQ,3}:;m7qu:a$Y_J@kbG2I][q#.n}[t)oiI9q$)%nAfW!v%wXjPhe*[@VQ_fWQ6yLH2)muiig?HOTlsfd/2WK^ow:zHEH_6SDFC9oevMWRtdnfNj5;F[UvJ_8[X.KalUQH#7b%0RP??hVL(JkbTF1]6mXtzrz3r4+J(gCj?]J$=?-l/MZd,9Vmap5-?Ho.pdseU%/rp/qV-P,IQd{/]^p_F]/B:;Jan*1AYnpW[?o3vbTi%@@r3a4fu@}y@,uCrx3q8gNAnVQv;ec]1=.E=S}K6^qF@izeiv6]1OP=!XNw}!e3j+e{cY9^HKuz?BcO)^,-zJQz=4=8%kmPrz)Zv_948!_KCsw-#:9.y#LQD/,trrOmzs?0{O;oS:.}5@RLele@Cp:(x3yI5IYA}$ae-d3}1r)VE6sh-#?ajng81=Y=1#83tNorueW.X$@ON^^uc{TUo7l?v9SNe!u{Tv])G@Vf3dLt#lrp/3.X_J7B.r^4.FU)bK3{]ahD!Huf4/iiUycvcLqhPXxC$(Zi%p/Vxy#eR$_OELZG$:2Ae;ZFY7,SM^s@Mfz}XZri[_9D@3+fu^yE}?mSb_5EC+K3=(3gKcgilpFM1eYKVdj(X;}eHmqz[R.I(h.A[UucFz^R;VK]dw!KY_eKF%Us)h/-lA:@w@6?bFd62)n=4s=!)wT:nHRbY0=iQdW[JUq;N.4myRsLz.Gb#mr(YUw3cx65Pec_*0q#@ENTA[VI53@.Rr_R3cXbTrT)C-k+o,]#1i4d-D9QmZ7])5oeVY!QNEvtujOj70)KVU-y==/$E@Srmp3V%Z*diTS:^PDZnZbeH:hz,-v*(@$hR-zneGBd6vWK^hfohFkI]4#CDv+SAuISCSk=oK)_Z;%IIcR/UvZ6H./J47s*U=QR]oiY/zvRa3*L@Zxwb0xalba4URG$MEjL,k9e6PJeuwBC,;X8jn2?dAq3qpE*B5-PUd/?ZLQzHi!UDC!_1VO({Yud3zDSsm.uu/.I]%@M$oJ*cx6*9b9G?eH,f,m@VEqJWrB[=WJXhg_yOxX#%*-[Qrab(pJMwc-fc0dwZWkB7A5?t(PnoeP_OAH@]MBfZO:!WAEJzG)kCQ*?TfGCfV50rT?yCO@1%t8jg=s[/zrCUh8=#[JQ=i-s,)W09^SCQT;Cf%C?CQvwZNP#/}T4,LPM/f+r{oH5To!4dh_y!ZLCj}k^y^;ttxA,CzD).f8gL_k0o!iAFs82#nw*Kn7R;HE)sezR6JH0Mn+1Z$Ky4-P!c9ix-A!-x7Hf@+)^Ne*x}7aI)M.-@5))q79/$.!_%n/56enc^*/7.UUc8[?cCrGgavfYFwZ.sus8D)v2Ci={]!JSN[A?s9?rI;+N=WcS@!iRC7asWXz[HtST3w!,zbf*NcoJ%:UCIQ#ower-pq1hn8yEXQ^s+!$9a@a$OPCSFQo2m=d(1H-_Fv046Gi5%?:Kz+XM!=98:MUcE7xwEAI8zl;sK6gJJGTBmdo3Mt4dmVSA1ykEkkl/Aq@ztQEPPhctA=l0,%uj3h);uc!WvnQq%LFR-R$]G$wBWH;%g:om*,J(c-wY3r)IzNXb0Ir@Jop(rX;Z=XSX{lAN#=Odm1M4)LmeqtwYX6h+[Klw7Qcr[jhN=l2Zt)2Hk{lb6,mG_-y4YaSc2A)NtKjtxRIBv$C9Ur4C%v^Hl(XMHMX{u3fY$ulKNBZ?eAcYx^FpWpl:(7VJ[1frivV/IFd@(o8NmoxPn-ltwfQhlo+n4[0,V,LIFSRAfA5s^1STx,^29K=N;6Bc#4Q$(JPdxRAf=UVikd}z)P!C$!UE4k-7PH8-if7,Y4Rfm5aDi:Z2N]dz7bo+pHg8(kN@QSDQxJBs5dogY8og4XjkyQoG4T7JBYJQGLu2t($t3Ua:K]xi9/DU)iCZvUWzEkW#?pK!NxEEC:J.w@0c.K=L_S@c#7Gq+3kgFKqdD@j8Wc8ue@ld{.xzY_DZdqZDAqSI1=:(ZI%o26eBXSLen0C2hys,ppET8-eWks]{XoDr[R*88*)Zq])*Nsj;jRVhPU/$BsQppLG:XKBSYwb,-kVS162w0qBZ#8XRzXln)=kMDOTtDHE;Q2*zCx]2abNebS(S;k-1E?ZqGlm$e_ybRljDLF2c+E]FB^=:050HpMfuXCC1cSflOB6tTY9.cf{[TTl09m3oM+!lrbNKZ;H7zsILIGMqxQAU?%Ak4%Y2pYIMYZ,.R-G8YSmO-z_*)#3vt!9A0ejehK(J[u%W@X0%]]iHA7qFY;}[mX+wnj}B$,$C@{Zp-?ND/OB_7dRQm-16DggWl;1P#,c0EmtoPj+}8SMe*;!nOQuU+/igZa*5rn7MfjHftR9OE4mN3aXUk.bAI9pQR3ZuX0JNUqIq;u(Vv?svySfBP3i$Gd%Dp?qSOWN;%m?;%dF2[aVb{,g;6pjt*6drtR{T}X_g,;-ceGjrdFy@6cT-wIq,T*!KH8--jz$tr^8n0,*^tSOqL6Ke]DUq^8:]!EUijAr%+@/T,XOjJWTVI-u0*-o.y8Je8+!NmlvfK(U/%T-/Bw,PBmNNiTiz*eWH=^Ll#PkFebsAJ}w!^R?L1vJD5HS$wYZ,%msc%S2^MLvF[M{X)f:#vCx;1oh?l_-;-cr!zZzYH78?{FiJ*2En1TsjB@-U,M+M]LcN]{2JrqNm0J$656C@os$VJ1A^@@!Ue5]eCyg{7y?b9n.ZvIJ$)u1)NJz-i7(3UT6;prqFI,a]]g2tBLUU@BGZ5lN;y[)n^W=tnS+4{FDjOxedxjf(TfUE5Wv(;ODU-r.WkTof2*SYuG6KVMEE3b_ZY{m]Mr=E5G/akz;.w4_C=$E81!su!y/Oi@)4(I#5}=%;uf.qVa+JQbCEb06ECGEsZHp;7FgT}6CScD*Xnp1h06oxuXu%]IxxBkKkrO*Inwhyb@QOQ%W14ljuI*/v6e0i4YI?y5fdhe1x;!Bp7v%O,:(e!1v8,}aYsIY;Sx4rp9)-E1As1:V?g4f%;mH$(:+%o/Lz$P49mLOB7mONW$19q/ukX%h6.=#.IV:orY[K,EdPO!:@0br=9}yDE:HQmyCZ6X$6N{+=8v.r@+lOJK7#$a*p#d-o6mbc{KYYj{:COowojcY.jVInUfG6HRa59GmgE?X-ZOZUX)eXXk.MyV7xhsS::AXvXW2Zk$hVoKSd.vkef?f49ruGe4]#nk9I{gCJx_6egOFdr]3g?TZjNhG=-=$aGvT_wh*wdw;**FsJo.qBgU%3o?RIvs%(})OXuGW/d$,5G%u6F#@6T=c_$$.s*]E!l.#6i,sbnorawb;?Ps2PP[Bk:sbFqH9)EkE}.eJQndOg{CFcG0/dBOw?/OoblEre{UQgylFVdIE@%Ca%xZ7j?k*uaj7X:kBsL!ae}5F^BlfvGv**2AC5RgZUK2T-N4#STOKW,jW]3K1ok::*?}BuA6:=6U@nM({2rEY(%G{-DA6nR90g-wrGYllFVx#lfPHLyZeB96XC_idD}U=P9{28-IiVSK,bUU@*FWp+3R#@,}%-7zlgf}p4o=#^N6ypL!F[*D=:SLca9D%s:Lk$L?JK68yj7apdjLk#!m+w=Yx#dddO+]9Pq=!!;Thsg;2QQsRKEiLdo$1uJ2STGI!#*[z)+GX8Gv{Jh4z+w=8OY=C5i}ULNc?zh#:$D(].a^xY)26oh7=4s!SP_9aI*n^hp@uT$2miTvhe;F$QJP]aoG:vD!=JXyWaGvrWx(SgeABH5SD5InW9AoS#s5wDVq/K^fB[}pKq;!aYQdJoup4R,/}vix#;mu{,@7DFza]%X;T;9(PLRs_yf]uyh,VBb2JrGe1Hq={JKMdRodE$8RJRBCOq8HLF0xjOuwlWp0Y4R-,-diuiY(BrykwmTgd)y?$PiX-wYZ$wm.QxCjtnsHwrV8-]l34A$]CeEIGL5:=4f(Ht2wKIhC7Pkjw=4%3a.aM64Q]OP.%kHg^]ZKA=jOw#+rg0XIc$laJJ6nDA^gmm8sfLV%v?]k:n*qR(d[kK]Kjp!{S,H).UnS(iY/i)c1ql.IfV_f[iJlPuC.!Nm:i0Y42)r@(O+{n:b0?-MZ]txsU7T.)5qQv$BW1_d,s!JsFD^-RhUHD33/.qc$G!D[:^eW9b+!X)C9TP_P*o0%@p@ZQfj+AwWaggcEe+2l+n%o1sWe2{yc3G70*Ymgdt4Bj8=V3-H+q+V?_cPHQgWVl;X-00pv4mt%$Kuw+nzH+OG.}tVdJHHX]wl#$0^ldYIZf)(:zA[jPf16!H+H4PDU)xmFhy{1o;u#E)3;G)-G?F$Kz)7k1B^U9k5TY9TK%lH8Z?Od8=dOng=f_(e(G=wCZuuVuj1PsD+6I:]7!)xf46kLYt(WYazNvmN^mV6xJK2F_Zak@y#Smt#*_ty$E(lXKFW5-U:dke{3h^/jdK$Oy3N63o^rG+3CFB#EkGM1ow*Af[5QQ+Px1=1/r-]sbBWwD.i+Yg?0U4s$:Evof823e+</IconList>
  </Forms>
  <Files>
    <FearlessRev_Footer.png Encoding="Ascii85">#gye(6pquyX:#-1Mx.9;q.[efk+:kryGvMVcacR)N:jH#;0FRl8tIaj=ne6eJ/mV!d_up^c^6j+nR6}X6B:5:du/;QJ{o^P8XA$Bs/Iv$8hX*xy*-W7f68r$y8W,UIVxx:prO=aNMI-K^WsJ2s,joddpP)8+m#4]6zn}0LCk7yHjW?Ykd1wi+C0sdzb%pPH4Rj+9-pv7oAn^)2-M8M=Y(=_AC4XTMf[k!;j-+uJAU%G[mAI??vF+)3(NBM-.Q/cl$^r!XM[@#Yjz+p].KwUz#mG-xIDh#LC3Hok:WtC7Vn-g@g{UIhR9P#xZo%Z:*{@[F/J7ce@J{upB,#{Ej[FkFQ%6QzKG+jg$JLffXvXwx8NlV@:.l0!Ny/2[3LDH4qQLsC-h,@q2@8:w?(YfVZ#sir-ZRX=6AI!k-zBhMT+2eou8^1([8sLVJdhVW)+QP8mWkw#diBf=OXVD/?Vuf1t,qX?JrW:q!ES}1V.2PLfAsb]Wazjd*ve@Va)L4+e/z;EwPY1.:{;QjB)PKQH:O.jM*C!i)]z.jg7,-jLdPOgmKca1]Jpyapo#6w4Wum10!w]^G%5mvJVT}MG^=(pEgMoH{dc76f35V6k3lP-l]m3z?9Kk3jWVqJziD.,vlHan:1=JH^HiK+s.Ah.69vBJ(O6m+wNk3_HsehY3P3si{cmg*[=y01x+rL!x0UQK2J=q!60z*Fek{uaensn6X3@y#mhI+uf9}@#xgU%f2aK28oeaa1V1gwuaIK#.+L1[]{19sKPh;cQPo)]j=C%?ol,3z$D?wA?DPjWTwD3?hi=)_8qYk;?3I}hp3y@pFyX;4UA8.Vby7:cxU]=GX)j?9hps:_s_Jk?hTR0@I6cc#tgvmdyfx!Y]By2p7d_cuc,N}8BM*p3AQ=Eoqp@JM9t@u9v4}JT]FZhhd=)Owe84%RbUhbW)]im,I;aRZga,[wlUXUaUuFXhgh=W_H/u%{R5.F[9?j)i,*_$u=A{9M7X?loJA.eccQ$7^hGr]w5=wnM7w.aIUA?lD?9)#xre]Di;awU-m.rS%lUadb^}c{YIr{@?I$FhNe@IxdJ4,@UEJVZLw#.[3s53CQj5;t1/mS7_s#rozo+)8p1:w=y@KXXC-i),R/k=i8CK}U]d]adE!FIp:NB37/bI}4@IvY=K.GxcBwxK4$yq=T0Yc6k,n_*.2$ygU22rk]jox=l_X-YRn,ES{oS#Yj,SUg*LrQeFZ#:J(Z3$^mLQ1d(zNJT9^Z/5:is*,#n9gI1U%11@{l7^]zain4B@WEL}/G/Nvy2Z0ClY^+H=S$j.=).:hmfhtQ*34nO.lMR.deC:W4[RNkjX.QHzF.%5aVd_b;N?YjZ]E6%cXyQnNO;]GY7vC@Jnq7D#-2Xlu/7.H4j@K?q@JS8;bd?OwuK@G,i)ob^h2w6eWc%Xo:+u)r%4@G9}v.os8K(;JnKr4s8D$-677e84:S{O0$g^*(L,}GTE@zR)===@DqPGQFSLyNI)?36K(R(];P]Yc8aMQ!RCG:W0v$-cK()W[Wz]_#@96wMa[q]MQ#G}!KxS:A:%c,T]Gd*5*1!U)s^V3A4ro0v[V}41.*k!6S{WLtwk-:c!$ExLVs3*8z.rV{M7{cR[kNm%$O%kw/L}]0,SJhZ,[j$;KT5SMZPU}9S:akOsF$VEwmeQLhu=V70iPKG9,4B338^vLlh.9H[_vbswcgk$r)4)CgV*9G2yIu*t#i@f(,)heF+P8%n)WkdDZj3(N.4J:zh[OM/!O1kSX*],6TAV6PrUHA?ZYa6H0o#o11O7MwnzgY^_0lb2MshAU1QDs1eZlU3ZcTuo^tj3)UQ@,O?h(]6BhQ$C3/J6]BdAHhQ:M3j^0VqSxRgM?1z,FbjKYVFr=g4?=D^2l-2K2[34?35i1dl3IZz0y{kl8mdiQFJ-,]79fz4]ee3oWkJAs3#,!v)ne(x?.{*86cJ!kZGBr3NH%#)0HEr7ehUU^9QE[.[m^Dv]/LE1l%a}@#eF?w::ZMWZ1HU;(S34eII0:jPLAK*$zVQ.1Xlsh^o@nn3^YQDd4kM]i4:AV6uGR3!d^nDOFwsTM!xfDt?xvkb6_X@z;V7%g1Lhd#lFJ^.tvL2IN=Iu)fYQO)Q=vo@hbLt122]eACe2r2wD4uYuqYVoZHwU!UsQLZGpL#BXbrnv,{=LSLPAoeWz;)p:+dH^*i88CctEx4zhvc1UCYriAIvmdkP^fO=ZMa6Yy=x3Q}/Q}wV;rI:=$#U7fS/OsCWBT-VlTRjr{trYD%gASgA,F6tU}yOcEYOJ5k}$ad(QeIFT7e(wzs,4WcEt;=K;8t-k;Sx!n3.],jkikL/rc*VU[@G%XQtVT_/-]=;,Tve.5UY=64GknHFe!qlP0Rzi^=%FoU-#6E$J$r*6*kSR@J?]o86(6Zy?5=O#3YaH_7+d#E+FkVjdV8fP+0WC,j$52g-cn)guVrLkTl__c-)=8NmU)^z0x4{v{DG*Aqpeg9^m:4G*svkK#$h3H;eb$34QCb@NJNEvYKRVVK)8qmT^Awfm#ZWGhyB)JXkz_fKDHN$NHCNvIG$;w:SHdF;g8;bb1{0v/*-1]QWq8M205z_IUHduZ8CuIEea^B$M3M05ApFN@xC#,jSP/7}Cu#D:c%u9SZtEC;cb]C*snQ{f2}y-s:f5k,J8gTVZc*ST,IPw6ah06ZT-Ve$h)wDo7:_vX(g!wzkTZhdKu[6E#ChSGey.+Y^0*:zUwbwM]:SZ7eafe/iY}wdiJ@[9OBhmZjj$F:o8V!SO/8.sGgvkQaLWxl;5i5-fhTnKN5p4%4a_1V2Q9P72^@k3SpQ_E-17(K7FwB#Tsh5$P}9$f2m#M$T#(+3v:((Mf_iOToznKAh0=/hQqT:Z0-ie;#MN_?y%,atg:dM($^-mj[@Z8}0#_NYD^}x3t5Sx*m-!y?G!m}ik,d6H$twDH-zhtuf[h1KUp].:]588$b(^K7UF:^keaYG%_C^2;%W!5$i{DlknSUhlIhxDH%#WJvt=n_)vG[sD3Kc.Ef%2?=U!BW#SO(7Fcmyy;@CK:jH6Wnu6As/OxDRojno}?Qh$O1*x1hItQp!CZ/o)I0U}5njAOBa,u}.@U0UHEhuzr0.M1_aU[-0Gf.z3/-j?h4QQ!i5wv],CzDm)Rp7)7@zrS[qyJ6b,Xto,@:l/$8tSl4b(4.5j;^-s3fKp80,w-KI5$btv/(VZ-bVa31*i;oAu8=arik60x9Tc+c@HaJ[vgUuVt9M0#2Q+qi^W^$d0bj^dtN(s$)awDG8y9H2dTQ:T57Xz)KsR[/[(A=aIE^q4h:?VmThq!D^*4UmuoHKE1x[!LQdWx2(IqV.3g??kK0PNy)bW{u1RqY[_Cti?XW*3%TMvu6l]+$2KI^MiF]bm^aV2FVP#0Y4)z9JgkI{Q7Z=n28vN3?#EjGBM=Tx02w4dZG:_6A1H@=m6gnI:*cuIz381}r8*(o?)+nvPV6rhLV!u:.uRi5hF=uQGX5ygfCP%@RPQrzkrr]KE?JMp$uG!:)XRPSU.PkBZ-{W-Re.o?wk=]_Vh8h+KZ:!LhF4v=EhR*}]#{2w$^8V)J#hd16];9;wGeLvDl5u$hV{I?jez1$30Ra^hIz^#5=[Q*Gj)E,Wsgz}ioU#-;[-xg;np$/rf_W;h%(RV?;JQqkQn7OAM,GYEjW1xWoE8mV4{6JV$bilZu5[IBB%06W^o721k0mNh0.?(FB}l09)x(d}dv5CcNBXYgG!4Ca::KcByO.JZCISLdppd)d4SkMD6$nNS6eAbB(Xlip6;w*L3-Iuo-vg{h)%_J^8zp7ZW95M4Fdg:xw1lJd8pBJ7Yv]hh:us)kq$HieyPuzB:zrETtaTK%o(wX$X=aWjIATl]F,^rt1zdaPl=Ku7iwVuGru)LN+WMy2]tJR(1(!KAdp/mfL5^EE!CKYomR-#A:P:eX;,3RuJ,1WzhZqXunOi9o^XQtrJh^+[cY2[slAg:,q0e1bufEoHS^Uz-[SQYOh!WzCNEwx:$3@=x@/#wkY]Ot=+v_6zd/!]rbc-EE-EmJJNq]0oBGUlTv#XE_pD:}6Ga^zx)]=$P^4%WrI-t?WM2UbA$)gtfBzPK]m+:g$#g[yjqdYVys.DJe!EA:{PL.#z6PQjh9KJLE}?+=5!7V@q4MMxjRpb+IwNT7@5EfZRn7L7*=)U9]QqpS[?W,**P}!*$!U5B9,S!rna=K)LY2GV%pAHqQ=p[Tu6720[WTUq?*;x/!rWJKa7BSjt7FT(O_zvl1k_pO8z9UeVe0A.1XS1*^QVOy0zqLw+U(LfSTrQ^wc51zlphe4k-%oBSfQF0ciTSC4X*$KaPL7,rS_S(:y=)NZ)gLEulIRSn-anO1@7@WG3S5p]k-u?;j*V(SQRE$q)SB/$bT#Wh%B[S+rVc{ZLoKy+mRzo#v,cN:Hp8B-(8N-3h3%sD(jkwLzJF3su9$k{u1=6G*m?4;3(BQys/d:3UK6XVIjoN{kY4;Y1bWkkXX5lzI/3H,eii)9b,TS-_46Wl8BtOl(Ae^fg1k,?Fs=tp}BLHwxe?go4@SJAS%eLHR8xgrFd*BaLtR_)7@x,%K(j81XcGl;kbA7NhOzzNe{lIfK$[!M4-+GZa:ycb4i!a3c?9VceMSd+@Yd24z{A$0ewIBsQ4L(!Vw0aSQ/.W,(6,nH)mz*4Mw6-RxJX?7M6T9=yA],cn9kINlOj}C+FvU[bWPU.h4]i;gdrDe92iRSFC]..Ump5wchn+B,%+Cg3V:faMRUbt/.Z49^6:68TQAcMROJy!kJjFfH0ASZ32]Xr2,=2+e^n*%$Mx7sx5O:ju%7a+2D;*#00$WFt$(-tlkoZ.?n6^*=mplA5Kc8o%h)?)4yX[{^kK8S^#9Ky]{A[e-$Qc{#AKW.RHq-(gLn[x[g7pMb%=9S.:6Y8.Vq^wLJGExP8u_/*:u/kyH[vpS/F49o:PFmGSBA;Bn6(Mb$=DTQuJzi?I=m+U1wbSKvCE35!B4_?H.r$@ppEgA[ho2BI[p2u^Uq/Q-$%8GRcJAGENS(+G=9;[.DV+}^[[s_lp3B$Ypv}$z=Be)OUK,TWZ2E^E%K^!MCt:#P;6qXQuUe-yGIP:^j!UbT._^[UQQycbr%CoHO7mS6G5]7tCz{i@s{@qXg=TC8Equa6-vdqUbKC^7PLA6zdAi:yDs-qxTW}-lnT1h$1:iDKy/b}w$*]y}tQ[$D@z!kLKA;@oXu@V5U$FQ*;o)o.l(?FQRwLX(5]6Y0mUEw9Jr-Ow/g;F^#i01}$SQHwe_-NILpl8USnu(Ow}F=qb]8)LgI-NYQQG6/oihvkCOujqlTNz=wTDCHa}#uCuHZ-!E{N]tF,VM%e[i,0noCJpLs;MZMYI)Li[z-rG;}R,5]CI%X!6_*xLXdFD3HR%VPSH?qRjxai{]U%HdzX0@IR*qxgK00:d8SE#k6hu[PsMi)@?4aN0Rimub-kOvY4@Qq{h!.R]..E)s%)*0Hv4SSqzcE9o34i/FKJcif1FsL!tH=.1R[qAlHvi2RC)!3W#G$xV:dJ,yR}z;O,)Cbx}T$RwRD_+XN;8Qg-{NQ*z*oK0^+SuG];R+EhEvE6m;BveYu3foh4(wZR*d:u=1$)J7U$Z1j#JmGH8w$zlMQK?qE}RB(3yQ#6;)?.YmFr{T3Go@A19J1-ke5X,StZ@T!tN(MJqr=$Q5I[4)e(C!p8u)lD*sNKP=cg;w1P:_x[!_,)onZYu}=$.)p].eNDj[A,}X7){258Io!ViY[z4X1lkoE9E$@9}xyZGt2Z$5YwSRk6AW;5VfwSk,ay-9ixWb5[Q$#Kl9AD}bn6z3ZOhUwK,ZKU56#03BJ3*1}XlY!p^WhPN.hhD}qU#Qa$o),Ni4WGTQ]=tYaq=e.5:nEetm1s1QK93^C@K@NikKGS*FqN213=:qq4A.!SqgI?+XEt;;uChz9jB%jrF9_aXeCua9kzJ}y=I:uU_4Y:JtsPJ:MZWf#)p0EJb[tbbNDRJArT*{x2H=y.=PKdgC$]t!pD,svew%v/_lq-jHrUzA[I]_DyS:A=u[2Jl6Y]/z$xu8ViA/H9XH6v+P*$Yg[f}2Gxz_+=biT7olR{WH7[g9vVNHH[c49Fnv]QRAjHoC-K7[G-+TV[x]C8aW*f0ofr%qI1h=7m}]hFk=tc)hEeG@yr?]/w[*j9qs!,{5[m+Cva84YD,#eCug%l]-eflE*vM7c,8FK7f!^Y0cxX[%qF:Jl_sDm_AAU2e]-(dM-HZ^Vac?pSJ(Vte#H5/cM?+i48^fsCt^0C)TPUWk!:ALb[UFX.#6xrF}sHVrC^n8dJHEoZmnE.u#B_l]=ke[-UM}lA:e)A24T@(80)364*w5KX-*E%9C9N@RxH*G437rg{Pt#3d)mjR%Kt:G(?ysOmg-5Mxs.#%eTD4PDj$(b=@70-4_(ZgXe022hu-b+L+3KeeLc:O^WWaQ(A(,X[6y)E-gJXm;J.#Y)OwJz7UQGm**%[Z_p;CQeq5oUwrzD9@XVoe[BGBL_pVZndZ%3LKY)_-xWG3-6aMHep{f$Y=W1tsni/*^{Q{#t5c1$+)edO=deP8A*K=x)_QA,?CoH$N[#b=RpL%r/h7=*Qa!!iN[2J]3oOnEcCc{rOxkti.*T1(rly$d!+NgSM1vlYQXli5YRMczI5g8G)xJj$%/fcET-,N*DnI8?;dq_RMDh-=gToa:0fU{DQKqL]hkvMzDB@c^;}N/DX2V83+)oIb7@/Gr^6TE}tU%z^RPl)^h6zc0(le9V,smp0yQ#nr/Ef-S$(CniLW32pev;{Qq^.XBl$dVSmp/fa,c;mjQqB#6,7YFtSI#mjcsHkT?]!]$-#pnc:7xys1BO2DKxE@CE})$%RH;WuI}osQ54bn#(A3SEoCH5TOK8/;cj.rHfpkr.!-byf,kK}Iys+k+vi:9Lh^5t,nX@loFzv1mHe-)k!,xdJRUC2F6p9g,*Jc!-SD[}e2)za-,UsjL1o=_+4B%o:9}#R=4_.Uu)t})VLXgQCad1l:Bvh?A$a$=wh]Yq?ddnQ*Rct2VKIKE(L8A^xM6Prqy/Fr=yOetg84Jz++_-MXUcP#vLd^XK)yx[ZSvkccL7wGeN]+hn)YsA(PBZF8T@kO{B?gZi=,2Uc!9kthi%uvphNhOzP3QUhs*qv0DDPIYA^w{4u;4,_]h8)tf#-d)^Wx;tV7mYNmj1T#,g?#*pwEiSxC9qbs7qXlNh_a;s@a$6Qpzr!(fkwKgVfBEJRV-OZ$+IRDIMvSqp:tJX.B;MW?UBzluH@hN${(ng[@,237+5A7Ebcis#xD^M]6-+[OGiT)RO6b?Ya?:M-r;ze9Cu+;)SD[:1tM_b6v+k8yP4]W@JzFq.W_Z^K.CD%)y(w+^bwU^rMMG:M.VNvXdLRR=vFG71SXf$@4+uP+6}sL_WS?R;,wVk]-@;UXb4{1d$]ytX(N?LF+_dJ[Ga6!dgetTut:n60Yv2jh0?hrKTGh2{UUWfO1^/#,#B?d!8kai!b4YrH3WA,Jj^e-+A(m+(bNY(9VX0%h9u5(%hd=z:fCoL5rU!ndHVrMRCv;[I{%l0!krz59JCmVz9=n1+%%oBXB-@gTUb0=Vb8KOYQcd,cdpz8H=.6O7TYLJ:$W0ORZb_zpB,/T7qzb^NaK9gA$%uumrufjkEg7]4u4#wGH9)7F%I#UJbFRIS1FHk$_!7A4^1VzU-(@!(TxpY_6RBVFVM/.FE{qO0S_XMz#l+S=n$pcRPN3^S$q@0xH5Rc7}WXJ(XPwns0j@I)_e=UVmv?$A[BJCi/WSI8JP)53F^c71#=sV;^J0Y%gFzG-Z.88t)-WSEjjq6)setu8@s?^WIOp?2*kEi8vhM;@=4:bNNDUHvhYth8U?!oM!f7va35T?:Kw%Sj=3sRjDc61u5:VRgL2eM;YK4w,V,*CHMt}73SEAHoVhLALcT8ym;dHfunSdn3K4#-Dfvfr?A?u1(3h5?OHGKdXt./N}0@Pjiz{DU0HduS3HtiynOeY2JJf,oqfe1%uVSIrrO5Urc#oOu$ILan)BsPQJ;jjR5T8dPSY:W4{2Ys.brV+rMO(j4AsZR!wBV+zX:Q6Pq;z$JgK]3K@)_._ER[k7wB/[8X?ITe,W?f@J2HO4IkJL1_QLmXG?P4/aWz)%Kw#x9DHEtetoLk6.J0Dw4/onN.P2]l]bB[#Nc1VB*v)q9IWKPF@mYspQ1aQ;:KVn[#0fb;eQ:bZ%0JdWPNi7Fw_M#xP@9Lq^#^?s/*TxGX0Q{LasDMT!l?{]6A+.?4uC/.nF?0mHbU/TpxtQ^Dr*EzMx@=?.;nB%,v7OsM@x0Dl=H#ikCMXoNxWT4z0Oo[55*W#L-ce5Sd,dA$/WMzeuBW0^s9=Ak@cp*Aa+o@vd,Pf_dT[lYK}Hmk}+hB}0f=[HcNb)go!8#8Yo.(_TP0[+,-o/dBTSs=2vgv=@_0.UvsO-Kc{bJ!:ehocEsE]_0JoeS%pUZ{]Di^s(*7zToFNnwh,+)xF3oY#eMi[$4bK,r79i:v,^*07y.7qXUUQOE._6)3,gW(WFhMS1PIxCkoe[cX}KUENp5WN@?$iS%}QSR5x$damvTH9D[k]*g]{06v$2DHSMlMAFGtPTi:1W=}pw2#4ReA:K($!q;+,!Hg:_*:38_R+y}?woJ7*UafUa74jPZE3LcDZSTxjRnULnA2cbx!v(m;{mr,sQLNG4R1vxdiR5YzcB(9/}t(%k1aTxLiJUyM1%5z_lsk+LP5QJGh9/.zXT_)dcJ*8l5M01)trvnLHhe5-vV4Nqd+^?.@mOBV*n/DrVki3ALP84cmmG-^Z+Y.yuLB?bfqF-]Nz$@E7+[HC+.tbJ6KI}}e(8F]/;reUvLrj$lyCXl{#hY_F1;f=frB$uXw^G_p=Th_%VtA9@SJFx^JAzToE-,hAWA)iI3^GNKf2f,dLpK)Wq@!(e.bv3,cMiEEV$J23tbD$)FsgXsA,1oM,c}=wx!ewFR@ZL+ff0PtbdU?%N$_i_[pdh*DZMbts(pkbE26=DvVn/rci%{A;Qd#ZiQ;o[I@*vL;.[}gt@RZPqPDT%Djv:,LU^/!w6q$Ff!.5.AOQvxcMhhn;xMto0z%Yv-N.b(KNrPOM-!.d$uARS3r%-*-WkfT6I#rn]fAOFV+sdg#T3iE]?ei(;3;!4$HXVSfrclaK@1!@6M+42Y!b26fY,;_MxAXHG!?x!x3377k/2u%$vfdgv5!@!xyE%y^ZW/vHf_9F^f^%AOZ07-RvyX{==wO8CXRPigT%tb2x}5XTPsib075z#*1SZ3OSRA;ufBeL/$ie-kOWv*Q_Z3We3XdY+hHR%dG{N1vkN**l.s##X2{fcS6HxRnLo31YFTEyqfKdspeiJ(ZKv7yjoOk?*$$Gvp)rtyo4$qO/)jd=P2!*4GCnDQYlCx%LH)Nxlb=X2Y]x#Dj,V}i?0I[m9jtI/5h}!*07UOdi/Sl*ES^^=[W*pHaOLY7d1K,NlIR8n*$qCS:9,udjr^t;wMAjMGLjcTa};8CMXjF)r;B.Vl{2SoOGcZ:J!zG.2,x$6L?*r}ur^A*Td5vrBXkk-M::(p54ZV@t2:TZER51X7DOLXYcW$:(k*zCPY(m}La1.nAd]j$5vz{tWjh.4uEJeb*LD:x$;HFt?/CqHrGXnHn9b(iV(,,%EdtJ,.YIaUc,rezdt?SEvs^G9/%m:/XiBN?KMu+4KyjBQ,9mjE*pF]REsUwHX4OK1RLF(0?sh0@M,M+GQK{]szZ%o#NP;TK#N2IaceTC5IDiQB+JDU9VkICz=[{/d+/iub[OulGY?;*+@{){h#?gwQNULUhfsB@$:lRIYOt!=Exruu153tPqH$vJY0:z.OUl$%OkCxhMIzQ(i4:$2EG*})ZC8p)fASYfXxni+0@*rohG7x!RS:_DMlGi(:9/2b,PJm}fNOUyIcG?Y2ai(MK_4;uWR/2gGj^YA</FearlessRev_Footer.png>
  </Files>
  <CheatEntries>
    <CheatEntry>
      <ID>14893</ID>
      <Description>"Assassin's Creed Syndicate v1.51 (Uplay &amp; Steam)"</Description>
      <LastState Value="" RealAddress="00000000"/>
      <Color>000080</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>1418</ID>
          <Description>"(FastTravel &amp; Cutscenes cause values to 'reload'... !)"</Description>
          <LastState Value="" RealAddress="00000000"/>
          <Color>FF0080</Color>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>1424</ID>
          <Description>"(it can take a few seconds to collect the values...)"</Description>
          <LastState Value="" RealAddress="00000000"/>
          <Color>FF0000</Color>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>13831</ID>
          <Description>"(Enabling the Anti-debug script can take 5-15s...)"</Description>
          <LastState Value="" RealAddress="00000000"/>
          <Color>0000FF</Color>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>1993</ID>
      <Description>"Enable Cheats... (after save has fully loaded)"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <LastState/>
      <Color>808000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript Async="1">{ Game   : ACU.exe
  Version:
  Date   : 2020-05-15
  Author : Paul44

  Initializes ptr variables for main scripts...!
}

[ENABLE]
{$lua}
local f = nil

-- collecting main ptrs...
local bKillAD = nil
if getAddressSafe("bKillAntiDebug") then bKillAD = readBytes(getAddress("bKillAntiDebug"),1) end
-- print(tostring(bKillAD))

if not getAddressSafe("bKillAntiDebug") or bKillAD == nil or bKillAD ~= 9 then
    unregisterSymbol("bKillAntiDebug")
    if not getAddressSafe("bKillAntiDebug") then registerSymbol("bKillAntiDebug", allocateMemory(1)) end
    unregisterSymbol("GameProtect")
    if not getAddressSafe("GameProtect") then registerSymbol("GameProtect", allocateMemory(8)) end
    unregisterSymbol("pGameProtect1")
    if not getAddressSafe("pGameProtect1") then registerSymbol("pGameProtect1", allocateMemory(8)) end
    unregisterSymbol("pGameProtect2")
    if not getAddressSafe("pGameProtect2") then registerSymbol("pGameProtect2", allocateMemory(8)) end
end

  local bKillAntiDebug = readBytes(getAddress("bKillAntiDebug"),1)
  local offsCheck = 0xB0
  if bKillAntiDebug == 0 then
       -- google: cheat engine Async exec Form invalid window handle
     synchronize(function()
         -- painting form...
         f = IconList
         f.Width = 600
         f.Height = 500
         f.Show()
         f.Caption = 'ACS - Removing Antidebug Thread...'
         local lBox = f.ListBox
         lBox.Clear()
         local lbTitle = f.IconTitle
         lbTitle.Caption = 'One moment please... processing...'
         local lbInfo = f.IconInfo
         lbInfo.Caption = ''
         local lbHead = f.IconHead
         lbHead.Caption = ' '
         local lbMsg = f.IconMessage
         lbMsg.Caption = "See Readme on how to manage \n and use this info..."
         --lbMsg.Visible = true
         local cbGod = f.GodMode
         f.GodMode.Caption  = 'God Mode:'
         -- hide info...
         f.pCoord.Visible = false
         f.Structure.Visible = false
         f.RecycleBin.Visible = false
     end)

     -- ACS v1.5.1
     -- Standard Edition...
     getStaticAddr("E9 1F 81 3F 05",0,"pGameProtect1",1)
     -- Gold Edition...
     getStaticAddr("E9 58 E1 82 05",0,"pGameProtect2",1)

     local addrGameProtect = getAddress("[pGameProtect1]")
     if (addrGameProtect == 0) then
        addrGameProtect = getAddress("[pGameProtect2]")
        offsCheck = 0xA8
     end
     writeQword(getAddress("GameProtect"),addrGameProtect)

     -- antiDebug routine...
     -- kill anti-debug thread...
     -- see [Show Cheat Table Lua Script] for details...
     KillAntiDebug(f)

     local nLines = f.ListBox.Items.Count-1
     f.ListBox.ItemIndex = nLines
  end

  -- Enable cheats...
  local al = getAddressList()
  local mr = al.getMemoryRecordByID(13867)
  mr.Active = true


{$asm}
// needed in: kill anti-debug thread procedure...
// see main script...
// aobscanmodule(GameProcess,$process,4D 5A 90 00 03)
// registersymbol(GameProcess)
//aobscanmodule(GameProtect,$process,E9 58 E1 82 05)
//registersymbol(GameProtect)

// kill antiDebug...
//globalalloc(GameProtect,8,$process)
//globalalloc(pGameProtect1,8,$process)
//globalalloc(pGameProtect2,8,$process)
// ensures script is run only once...
//globalalloc(bKillAntiDebug,1,$process)

globalalloc(pProgression,8)

// create memCave for jump_far's...
fullAccess($process+500,$200)

// see [Maintenance scripts ~ 'special' scripts] (x3)..
globalalloc(bInverseXY,1)

bInverseXY:
db 0


[DISABLE]

{$lua}
-- in case of crashing during freeroam...
if ( tmerFly ~= nil ) then tmerFly.destroy() end


{$asm}
{
// ORIGINAL CODE - INJECTION POINT: "ACS.exe"+22F2CB0

"ACS.exe"+22F2C9F: E8 BC 2B 00 00                 -  call ACS.exe+22F5860
"ACS.exe"+22F2CA4: 48 83 C4 58                    -  add rsp,58
"ACS.exe"+22F2CA8: C3                             -  ret
"ACS.exe"+22F2CA9: CC                             -  int 3
"ACS.exe"+22F2CAA: CC                             -  int 3
"ACS.exe"+22F2CAB: CC                             -  int 3
"ACS.exe"+22F2CAC: CC                             -  int 3
"ACS.exe"+22F2CAD: CC                             -  int 3
"ACS.exe"+22F2CAE: CC                             -  int 3
"ACS.exe"+22F2CAF: CC                             -  int 3
// ---------- INJECTING HERE ----------
"ACS.exe"+22F2CB0: E9 58 E1 82 05                 -  jmp ACS.exe+7B20E0D
// ---------- DONE INJECTING  ----------
"ACS.exe"+22F2CB5: FF 35 CE DE 3A 05              -  push [ACS.exe+76A0B89]
"ACS.exe"+22F2CBB: 66 0F BE EA                    -  movsx bp,dl
"ACS.exe"+22F2CBF: 0F 91 C7                       -  setno bh
"ACS.exe"+22F2CC2: 4C 8D AE DE EB 33 FF           -  lea r13,[rsi-00CC1422]
"ACS.exe"+22F2CC9: 48 B8 00 00 00 00 00 00 00 00  -  mov rax,0000000000000000
"ACS.exe"+22F2CD3: 48 8D 34 95 39 C5 90 AB        -  lea rsi,[rdx*4-546F3AC7]
"ACS.exe"+22F2CDB: 49 89 C5                       -  mov r13,rax
"ACS.exe"+22F2CDE: 0F 91 C3                       -  setno bl
"ACS.exe"+22F2CE1: 48 87 F5                       -  xchg rbp,rsi
"ACS.exe"+22F2CE4: 41 0F CC                       -  bswap r12d
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>13867</ID>
          <Description>"Enable Cheats..."</Description>
          <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
          <LastState/>
          <Color>808000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : ACU.exe
  Version: 
  Date   : 2020-05-24
  Author : Paul44

  Collects ptrs main script...
}

[ENABLE]

// antiDebug routine...
// kill anti-debug thread...
// see [Show Cheat Table Lua Script] for details...
// LuaCall(KillAntiDebug())


// struct: VFT +30 .. +18
// collect ptrs: occasianally Health values misses...
// CameraManager... gets to ACUPlayerCameraComponent...  gets to Entity... gets to BhvAssassin...
//  +48 .. +0:ACUPlayerCameraComponent ..+18: Entity Player !
//                                            +70: World .. +1F8 .. +0: BhvAssassin
//                                                                      +C8 .. +60 .. +90: CSrvPlayerHealth
// aobscanmodule(INJECT,ACU.exe,44 0F 29 AC 24 C0 02 00 00 48)
aobscanmodule(CameraMgr,$process,4C 8D 4C 24 70 4C 8D 85 10)
registersymbol(CameraMgr)
alloc(newmem,$200)

// needed for 'Enable cheats...' script
globalalloc(pCameraMgr,8)
globalalloc(pEntity,8)
globalalloc(pBhvAssassin,8)
globalalloc(pHealth,8)
globalalloc(pInventory,8)
globalalloc(pInventCheck,8)
globalalloc(bGodmode,1)
globalalloc(bInvisible,1)
globalalloc(pEcoSet,8)

// used in teleporting routines ~ mr_id...
globalalloc(nFallId,4)
globalalloc(nGodId,4)
globalalloc(bUseGodmode,1)

bGodmode:
db 0
bInvisible:
db 0
bKillAntiDebug:
db 9

nFallId:
dd #92850                           // # = (int)
nGodId:
dd #106

//pUIMapCheck1:
//dq 0x0
//dq 0x142B3C400

//pInventCheck:
//dq 0x0
//dq 0x142B6A180

// Map waypoint...
// check used in Map Waypoint..., Teleport to Waypoint... &amp; Build Icon List...
// probably will not work on certain PC configs (RAM dependency?)...  ~ to follow up...!
globalalloc(pUIMinimapMgr,8)
globalalloc(pUIMapCheck1,8)

// some stuff...
globalalloc(pLevelUp,8)
globalalloc(pFloat,4)

// Speed multiplier...
globalalloc(pSpeedSystem,8)

// Error stats...
globalalloc(nCrash1,4)
globalalloc(nCrash2,4)
globalalloc(nCrash3,4)
globalalloc(nCrash4,4)

nCrash1:
dd 0
nCrash2:
dd 0
nCrash3:
dd 0
nCrash4:
dd 0

// 'Player Coordinates' script
// x64 pointers are 8-bytes long
globalalloc(pStructCrdBase,8)
globalalloc(pStructCrdOffset,8)

// gathers offsets for resp. inventory items (div by 8 ?)
globalalloc(tInventory,200)

// Time of day...
globalalloc(pTimeOfDay,8)

// Accomplishments...
globalalloc(pAccomplishm,8)
globalalloc(pAccomplVFT,8)

// Gearlist...
globalalloc(bGearChoice,1)

bGearChoice:
db 1

// carriage 1-hit kill...
globalalloc(nCarHealthMax,4)
globalalloc(bCarHitKill,1)

bCarHitKill:
db 0

// set enemy health to 10 ~ 1-shot kill...
nCarHealthMax:
dd (int)10

// see [Maintenance scripts ~ 'special' scripts] (x3)..
globalalloc(bInverseXY,1)
// coordinates YZ switch position...
bInverseXY:
db 0



label(code)
label(code2)
label(code3)
label(code4)
label(return)

newmem:
{$try}
  push rax
  push rbx
  push rcx
  push r15
  mov rax,CameraMgr
  sub rax,0x4
  xor rbx,rbx
  mov ebx,[eax]
  add rax,ebx
  add rax,0x4
  mov rax,[rax]
  mov r15,pCameraMgr
  mov [r15],rax
  // Entity...
  mov rbx,[rax+0x48]
  mov rbx,[rbx+0x0]
  mov rbx,[rbx+0x018]
  mov r15,pEntity
  mov [r15],rbx
  // BhvAssassin...
  mov rbx,[rbx+0x70]
  mov rbx,[rbx+0x1F8]
  mov rbx,[rbx+0x0]
  mov r15,pBhvAssassin
  mov [r15],rbx
  test rbx,rbx
  je short @f
  // dis-enable invisibility...
  mov r15,bInvisible
  mov al,[r15]
  mov byte ptr [rbx+D8],al
  // Health...
  // JackTheRipper sits +98
  // +90: CSrvBehaviorInteraction...
  mov rbx,[rbx+0xC8]
  mov rax,[rbx+0x60]
  mov rbx,[rax+0x90]
  cmp word ptr [rbx+0x12],0x02
  jg short @f
  mov rbx,[rax+0x98]
@@:
  mov r15,pHealth
  mov [r15],rbx
  test rbx,rbx
  je code3
  // dis-enable godmode + maxing health...
  mov r15,bGodmode
  mov al,[r15]
  mov byte ptr [rbx+DE],al
  //mov byte ptr [rbx+206],al
  cmp al,1
  jne code3
  // resetting FallDamage...
  mov rcx,[rbx+C0]
  mov rax,0x0
code2:
  mov rbx,[rcx+rax]
  mov [rbx+10],0
  add rax,0x8
  cmp al,0x18
  jle code2
code3:
  // Inventory...
  mov r15,pBhvAssassin
  mov rbx,[r15]
  mov rbx,[rbx+0xC8]
  mov rbx,[rbx+0xA8]
  mov rbx,[rbx+0x00]
  //mov rbx,[rbx+0x28]
  mov r15,pInventory
  mov [r15],rbx
  // check needed for 'replay missions' not crashing...
  mov rbx,[rbx]
  mov r15,pInventCheck
  mov rax,[r15]
  test rax,rax
  jne code4
  mov [r15],rbx
  jmp code4
{$except}
  mov r15,nCrash1
  inc [r15]
code4:
  pop r15
  pop rcx
  pop rbx
  pop rax
code:
  lea r9,[rsp+70]
  lea r8,[rbp+00000310]
  lea rdx,[rbp+00000100]
  jmp return

CameraMgr:
  jmp far newmem
  db 90 90 90 90 90
return:


[DISABLE]

CameraMgr:
  db 4C 8D 4C 24 70 4C 8D 85 10 03 00 00 48 8D 95 00 01 00 00

unregistersymbol(CameraMgr)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "ACS.exe"+1A66A3E

"ACS.exe"+1A669FF: E8 6C E5 00 00                 -  call ACS.exe+1A74F70
"ACS.exe"+1A66A04: 4C 8B 0D 6D BF 8B 05           -  mov r9,[ACS.exe+7322978]
"ACS.exe"+1A66A0B: 48 8D 85 20 03 00 00           -  lea rax,[rbp+00000320]
"ACS.exe"+1A66A12: 4C 8D 45 90                    -  lea r8,[rbp-70]
"ACS.exe"+1A66A16: 41 8D 57 15                    -  lea edx,[r15+15]
"ACS.exe"+1A66A1A: 48 8D 8D 10 03 00 00           -  lea rcx,[rbp+00000310]
"ACS.exe"+1A66A21: 48 89 85 10 03 00 00           -  mov [rbp+00000310],rax
"ACS.exe"+1A66A28: C7 85 18 03 00 00 20 80 00 00  -  mov [rbp+00000318],00008020
"ACS.exe"+1A66A32: E8 39 E5 00 00                 -  call ACS.exe+1A74F70
"ACS.exe"+1A66A37: 48 8B 0D 8A DC 6E 05           -  mov rcx,[ACS.exe+71546C8]
// ---------- INJECTING HERE ----------
ACS_Gold.exe+1A66A3E: 4C 8D 4C 24 70                 - lea r9,[rsp+70]
ACS_Gold.exe+1A66A43: 4C 8D 85 10 03 00 00           - lea r8,[rbp+00000310]
ACS_Gold.exe+1A66A4A: 48 8D 95 00 01 00 00           - lea rdx,[rbp+00000100]
// ---------- DONE INJECTING  ----------
"ACS.exe"+1A66A51: 4C 89 7C 24 70                 -  mov [rsp+70],r15
"ACS.exe"+1A66A56: E8 E5 E0 EF FF                 -  call ACS.exe+1964B40
"ACS.exe"+1A66A5B: 48 8B 8D 00 01 00 00           -  mov rcx,[rbp+00000100]
"ACS.exe"+1A66A62: 48 8B 01                       -  mov rax,[rcx]
"ACS.exe"+1A66A65: 49 89 86 C0 09 00 00           -  mov [r14+000009C0],rax
"ACS.exe"+1A66A6C: 48 8B 51 08                    -  mov rdx,[rcx+08]
"ACS.exe"+1A66A70: F0 FF 42 0C                    - lock  inc [rdx+0C]
"ACS.exe"+1A66A74: 49 87 96 C8 09 00 00           -  xchg [r14+000009C8],rdx
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>14268</ID>
              <Description>"Player Status..."</Description>
              <Options moHideChildren="1" moManualExpandCollapse="1" moDeactivateChildrenAsWell="1"/>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : ACS.exe
  Version: 
  Date   : 2020-06-11
  Author : Paul44

  Collects base struct Health...
}

[ENABLE]
{$lua}



{$asm}


[DISABLE]

</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>11718</ID>
                  <Description>"Health"</Description>
                  <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>2 Bytes</VariableType>
                  <Address>pHealth</Address>
                  <Offsets>
                    <Offset>E0</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>11771</ID>
                      <Description>"Maximum Health"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <Color>808080</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pHealth</Address>
                      <Offsets>
                        <Offset>E4</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14014</ID>
                      <Description>"Health 2"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <Color>808080</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pHealth</Address>
                      <Offsets>
                        <Offset>1FC</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14015</ID>
                      <Description>"Maximum Health 2"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <Color>808080</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pHealth</Address>
                      <Offsets>
                        <Offset>200</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>106</ID>
                  <Description>"God Mode"</Description>
                  <Options moHideChildren="1"/>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : ACS.exe
  Version: 
  Date   : 2018-04-30
  Author : Paul44

  Dis/enable Godmode
}

[ENABLE]
// +204: (default = CC) ~ 1 = desync...
{$lua}
    local addrHealth = getAddress("[pHealth]")
    -- enable godmode flag
    writeBytes(addrHealth+0xDE,1)

{$asm}

bGodmode:
db 1

[DISABLE]
{$lua}
    local addrHealth = getAddress("[pHealth]")
    writeBytes(addrHealth+0xDE,0)

{$asm}

bGodmode:
db 0

</AssemblerScript>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Toggle Activation</Action>
                      <Keys>
                        <Key>17</Key>
                        <Key>71</Key>
                      </Keys>
                      <ID>0</ID>
                      <ActivateSound TTS="EN">Godmode Enabled</ActivateSound>
                      <DeactivateSound TTS="EN">Godmode Disabled</DeactivateSound>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
                <CheatEntry>
                  <ID>297</ID>
                  <Description>"Invisible"</Description>
                  <Options moHideChildren="1"/>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : ACU.exe
  Version:
  Date   : 2018-04-30
  Author : Paul44

  Dis/enable Invisibility
}

[ENABLE]

{$lua}
    local addrInvisib = getAddress("[pBhvAssassin]")
    writeBytes(addrInvisib+0xD8,1)

{$asm}

bInvisible:
db 1

[DISABLE]
{$lua}
    local addrInvisib = getAddress("[pBhvAssassin]")
    writeBytes(addrInvisib+0xD8,0)

{$asm}

bInvisible:
db 0

</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>11433</ID>
                      <Description>"(when already in conflict, move out of sight...)"</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>FF0000</Color>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>89577</ID>
                  <Description>"No Reload"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : ACS_Gold.exe
  Version: 
  Date   : 2023-05-25
  Author : Paul44

  No reload (pistol only ?)
  Note: to force reload, press R while aiming (holding right_mouse)
}

[ENABLE]
// -28: FF C9
aobscanmodule(NoReload,$process,44 8D 40 FF 8B D3)
registersymbol(NoReload)

NoReload-1C:
  nop 2

[DISABLE]

NoReload-1C:
  db FF C9

unregistersymbol(NoReload)

{
// ORIGINAL CODE - INJECTION POINT: ACS_Gold.exe+9773BE

// "injection" here...
ACS_Gold.exe+9773A2: FF C9           - dec ecx
//
ACS_Gold.exe+9773A4: 89 48 18        - mov [rax+18],ecx
ACS_Gold.exe+9773A7: 8B CE           - mov ecx,esi
ACS_Gold.exe+9773A9: E8 92 5D F6 FF  - call ACS_Gold.exe+8DD140
ACS_Gold.exe+9773AE: 48 8B CF        - mov rcx,rdi
ACS_Gold.exe+9773B1: 8B D0           - mov edx,eax
ACS_Gold.exe+9773B3: 8B D8           - mov ebx,eax
ACS_Gold.exe+9773B5: E8 06 C3 00 00  - call ACS_Gold.exe+9836C0
ACS_Gold.exe+9773BA: 85 C0           - test eax,eax
ACS_Gold.exe+9773BC: 74 0E           - je ACS_Gold.exe+9773CC
// ---------- INJECTING HERE ----------
ACS_Gold.exe+9773BE: 44 8D 40 FF     - lea r8d,[rax-01]
// ---------- DONE INJECTING  ----------
ACS_Gold.exe+9773C2: 8B D3           - mov edx,ebx
ACS_Gold.exe+9773C4: 48 8B CF        - mov rcx,rdi
ACS_Gold.exe+9773C7: E8 74 E7 01 00  - call ACS_Gold.exe+995B40
ACS_Gold.exe+9773CC: 48 8B 74 24 30  - mov rsi,[rsp+30]
ACS_Gold.exe+9773D1: 48 8B 7C 24 38  - mov rdi,[rsp+38]
ACS_Gold.exe+9773D6: 48 83 C4 20     - add rsp,20
ACS_Gold.exe+9773DA: 5B              - pop rbx
ACS_Gold.exe+9773DB: C3              - ret 
ACS_Gold.exe+9773DC: CC              - int 3 
ACS_Gold.exe+9773DD: CC              - int 3 
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>89564</ID>
                  <Description>"Lock Consumables"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : ACS_Gold.exe
  Version: 
  Date   : 2023-05-25
  Author : Paul44

  Lock consumables...
}

[ENABLE]
// +2B: pistol ammo...
aobscanmodule(LockConsume,$process,33 C0 3B F8 0F 47 F8 89 7B 28 48 8B 5C 24 30)
registersymbol(LockConsume)
alloc(newmem,$100)

// smokebombs, and such...
aobscanmodule(LockConsume2,$process,2B CF 41 B9 01 00 00 00 44 8B C3 89 48 28)
registersymbol(LockConsume2)
alloc(newmem2,$100)

// routine 1...
label(code)
label(return)

newmem:
code:
  cmova edi,eax
  //mov [rbx+28],edi
  mov rbx,[rsp+30]
  add rsp,20
  jmp return

LockConsume+2B:
  jmp far newmem
  nop
return:

// routine 2...
label(code2)
label(return2)

newmem2:
code2:
  //sub ecx,edi
  mov r9d,00000001
  mov r8d,ebx
  mov [rax+28],ecx
  jmp return2

LockConsume2:
  jmp far newmem2
return2:


[DISABLE]

LockConsume+2B:
  db 0F 47 F8 89 7B 28 48 8B 5C 24 30 48 83 C4 20

unregistersymbol(LockConsume)
dealloc(newmem)

LockConsume2:
  db 2B CF 41 B9 01 00 00 00 44 8B C3 89 48 28

unregistersymbol(LockConsume2)
dealloc(newmem2)

{ routine 1...
// ORIGINAL CODE - INJECTION POINT: ACS_Gold.exe+B7E3BA

ACS_Gold.exe+B7E39B: 0F 1F 44 00 00  - nop dword ptr [rax+rax+00]
ACS_Gold.exe+B7E3A0: 4C 8B 08        - mov r9,[rax]
ACS_Gold.exe+B7E3A3: 4D 85 C9        - test r9,r9
ACS_Gold.exe+B7E3A6: 74 09           - je ACS_Gold.exe+B7E3B1
ACS_Gold.exe+B7E3A8: 8B 4B 08        - mov ecx,[rbx+08]
ACS_Gold.exe+B7E3AB: 41 39 49 18     - cmp [r9+18],ecx
ACS_Gold.exe+B7E3AF: 74 1E           - je ACS_Gold.exe+B7E3CF
ACS_Gold.exe+B7E3B1: 48 83 C0 08     - add rax,08
ACS_Gold.exe+B7E3B5: 49 3B C2        - cmp rax,r10
ACS_Gold.exe+B7E3B8: 75 E6           - jne ACS_Gold.exe+B7E3A0
// ---------- INJECTING HERE ----------
ACS_Gold.exe+B7E3BA: 33 C0           - xor eax,eax
// ---------- DONE INJECTING  ----------
ACS_Gold.exe+B7E3BC: 3B F8           - cmp edi,eax
ACS_Gold.exe+B7E3BE: 0F 47 F8        - cmova edi,eax
ACS_Gold.exe+B7E3C1: 89 7B 28        - mov [rbx+28],edi
ACS_Gold.exe+B7E3C4: 48 8B 5C 24 30  - mov rbx,[rsp+30]
ACS_Gold.exe+B7E3C9: 48 83 C4 20     - add rsp,20
ACS_Gold.exe+B7E3CD: 5F              - pop rdi
ACS_Gold.exe+B7E3CE: C3              - ret 
ACS_Gold.exe+B7E3CF: 4D 85 C9        - test r9,r9
ACS_Gold.exe+B7E3D2: 74 E6           - je ACS_Gold.exe+B7E3BA
ACS_Gold.exe+B7E3D4: 44 8B 43 38     - mov r8d,[rbx+38]
}
{ routine 2...
// ORIGINAL CODE - INJECTION POINT: ACS_Gold.exe+B7B424

ACS_Gold.exe+B7B408: 49 83 C2 08        - add r10,08
ACS_Gold.exe+B7B40C: 4C 3B D2           - cmp r10,rdx
ACS_Gold.exe+B7B40F: 75 EF              - jne ACS_Gold.exe+B7B400
ACS_Gold.exe+B7B411: 33 C9              - xor ecx,ecx
ACS_Gold.exe+B7B413: E8 B8 ED F2 FF     - call ACS_Gold.exe+AAA1D0
ACS_Gold.exe+B7B418: 48 85 C0           - test rax,rax
ACS_Gold.exe+B7B41B: 74 36              - je ACS_Gold.exe+B7B453
ACS_Gold.exe+B7B41D: 8B 48 28           - mov ecx,[rax+28]
ACS_Gold.exe+B7B420: 3B CF              - cmp ecx,edi
ACS_Gold.exe+B7B422: 72 2F              - jb ACS_Gold.exe+B7B453
// ---------- INJECTING HERE ----------
ACS_Gold.exe+B7B424: 2B CF              - sub ecx,edi
// ---------- DONE INJECTING  ----------
ACS_Gold.exe+B7B426: 41 B9 01 00 00 00  - mov r9d,00000001
ACS_Gold.exe+B7B42C: 44 8B C3           - mov r8d,ebx
ACS_Gold.exe+B7B42F: 89 48 28           - mov [rax+28],ecx
ACS_Gold.exe+B7B432: 0F B6 44 24 70     - movzx eax,byte ptr [rsp+70]
ACS_Gold.exe+B7B437: 8B D7              - mov edx,edi
ACS_Gold.exe+B7B439: 88 44 24 30        - mov [rsp+30],al
ACS_Gold.exe+B7B43D: 48 8B CE           - mov rcx,rsi
ACS_Gold.exe+B7B440: 40 88 6C 24 28     - mov [rsp+28],bpl
ACS_Gold.exe+B7B445: C6 44 24 20 01     - mov byte ptr [rsp+20],01
ACS_Gold.exe+B7B44A: E8 E1 21 00 00     - call ACS_Gold.exe+B7D630
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>92850</ID>
                  <Description>"Ignore Fall Damage"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : ACS_Gold.exe
  Version: 
  Date   : 2023-10-11
  Author :  Paul44

  Ignore Fall Damage...
}

[ENABLE]

aobscanmodule(FallDamage,$process,48 81 EC 90 00 00 00 0F 29 70 E8 45 0F B6 F0)
registersymbol(FallDamage)
alloc(newmem,$100)

label(code)
label(return)

newmem:
  push r15
  mov r15,pHealth
  cmp [r15],rcx
  jne short @f
  movss xmm1,xmm10
  movss xmm6,xmm10
@@:
  pop r15
code:
  sub rsp,00000090
  movaps [rax-18],xmm6
  movzx r14d,r8l
  jmp return

FallDamage:
  jmp far newmem
  nop
return:


[DISABLE]

FallDamage:
  db 48 81 EC 90 00 00 00 0F 29 70 E8 45 0F B6 F0

unregistersymbol(FallDamage)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ACS_Gold.exe+E72E25

ACS_Gold.exe+E72E0C: CC                    - int 3 
ACS_Gold.exe+E72E0D: CC                    - int 3 
ACS_Gold.exe+E72E0E: CC                    - int 3 
ACS_Gold.exe+E72E0F: CC                    - int 3 
ACS_Gold.exe+E72E10: 48 8B C4              - mov rax,rsp
ACS_Gold.exe+E72E13: 48 89 58 08           - mov [rax+08],rbx
ACS_Gold.exe+E72E17: 48 89 68 10           - mov [rax+10],rbp
ACS_Gold.exe+E72E1B: 48 89 70 18           - mov [rax+18],rsi
ACS_Gold.exe+E72E1F: 48 89 78 20           - mov [rax+20],rdi
ACS_Gold.exe+E72E23: 41 56                 - push r14
// ---------- INJECTING HERE ----------
ACS_Gold.exe+E72E25: 48 81 EC 90 00 00 00  - sub rsp,00000090
// ---------- DONE INJECTING  ----------
ACS_Gold.exe+E72E2C: 0F 29 70 E8           - movaps [rax-18],xmm6
ACS_Gold.exe+E72E30: 45 0F B6 F0           - movzx r14d,r8l
ACS_Gold.exe+E72E34: 48 8B E9              - mov rbp,rcx
ACS_Gold.exe+E72E37: 0F 29 78 D8           - movaps [rax-28],xmm7
ACS_Gold.exe+E72E3B: 0F 28 F1              - movaps xmm6,xmm1
ACS_Gold.exe+E72E3E: E8 0D 62 A8 00        - call ACS_Gold.exe+18F9050
ACS_Gold.exe+E72E43: 0F B7 95 CA 00 00 00  - movzx edx,word ptr [rbp+000000CA]
ACS_Gold.exe+E72E4A: 48 8B 9D C0 00 00 00  - mov rbx,[rbp+000000C0]
ACS_Gold.exe+E72E51: 48 8D 4C 24 50        - lea rcx,[rsp+50]
ACS_Gold.exe+E72E56: C1 E2 03              - shl edx,03
}
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>87987</ID>
              <Description>"Inventory..."</Description>
              <Options moHideChildren="1" moManualExpandCollapse="1" moDeactivateChildrenAsWell="1"/>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : ACS.exe
  Version:
  Date   : 2020-05-22
  Author : Paul44

  Allows you to edit inventory items...

   1 = Money                   14 = Bullets                 56 = Leather
   5 = Smoke Bombs             43 = Throwing Knives         57 = Iron
   8 = Voltaic Bombs           44 = Hallucinogenic Darts    58 = Chemicals
   9 = Fear Bombs              45 = Medicine                60 = Thread
  10 = Spikes

}

[ENABLE]
// Using 'pUIMinimapMgr' code to build inventoryTable...
aobscanmodule(Inventory,$process,48 63 48 0C 48 8B 10 48 C1 E1 20 48 C1 F9 3F 48 23 D1 8B 42)
registersymbol(Inventory)
alloc(newmem,$100)

label(code)
label(code2)
label(code3)
label(return)

newmem:
{$try}
  // rdx+08 = itemID ~ edi
  push rax
  push rbx
  push rcx
  push rdx
  push rdi
  push rsi
  push r15
  // rax = counter...
  // rbx = start inventory list ~&gt; current record
  // ecx = loop length inventory list
  // introduced 'check' to prevent crashing while 'Replaying' missions...
  xor rax,rax
  mov r15,pInventory
  mov rsi,[r15]
  mov rsi,[rsi]
  mov r15,pInventCheck
  mov rbx,[r15]
  cmp rbx,rsi
  jne code3
  mov r15,pInventory
  mov rsi,[r15]
  add rsi,0x28
  mov cx,word ptr [rsi+8]
  mov rsi,[rsi]
code2:
  inc ax
  mov rbx,[rsi]
  // get itemID + offset table indexvalue...
  mov edi,dword ptr [rbx+08]
  imul edi,2
  // save in offset table
  mov r15,tInventory
  lea rdx,[r15]
  add rdx,edi
  mov [rdx],ax
  add rsi,0x08
  cmp cx,ax
  jg code2
  jmp code3
{$except}
  mov r15,nCrash4
  inc [r15]
code3:
  pop r15
  pop rsi
  pop rdi
  pop rdx
  pop rcx
  pop rbx
  pop rax
code:
  movsxd rcx,dword ptr [rax+0C]
  mov rdx,[rax]
  shl rcx,20
  sar rcx,3F
  jmp return

Inventory:
  jmp far newmem
  nop
return:


[DISABLE]

Inventory:
  db 48 63 48 0C 48 8B 10 48 C1 E1 20 48 C1 F9 3F

unregistersymbol(Inventory)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ACS_Gold.exe+2A9694

ACS_Gold.exe+2A967D: CC                    - int 3
ACS_Gold.exe+2A967E: CC                    - int 3
ACS_Gold.exe+2A967F: CC                    - int 3
ACS_Gold.exe+2A9680: 48 8B 15 69 59 E1 06  - mov rdx,[ACS_Gold.exe+70BEFF0]
ACS_Gold.exe+2A9687: E9 24 9B 00 00        - jmp ACS_Gold.exe+2B31B0
ACS_Gold.exe+2A968C: CC                    - int 3
ACS_Gold.exe+2A968D: CC                    - int 3
ACS_Gold.exe+2A968E: CC                    - int 3
ACS_Gold.exe+2A968F: CC                    - int 3
ACS_Gold.exe+2A9690: 48 8B 41 40           - mov rax,[rcx+40]
// ---------- INJECTING HERE ----------
ACS_Gold.exe+2A9694: 48 63 48 0C           - movsxd  rcx,dword ptr [rax+0C]
// ---------- DONE INJECTING  ----------
ACS_Gold.exe+2A9698: 48 8B 10              - mov rdx,[rax]
ACS_Gold.exe+2A969B: 48 C1 E1 20           - shl rcx,20
ACS_Gold.exe+2A969F: 48 C1 F9 3F           - sar rcx,3F
ACS_Gold.exe+2A96A3: 48 23 D1              - and rdx,rcx
ACS_Gold.exe+2A96A6: 8B 42 44              - mov eax,[rdx+44]
ACS_Gold.exe+2A96A9: 8B 4A 48              - mov ecx,[rdx+48]
ACS_Gold.exe+2A96AC: 48 8B 15 3D 59 E1 06  - mov rdx,[ACS_Gold.exe+70BEFF0]
ACS_Gold.exe+2A96B3: 80 BA 85 00 00 00 00  - cmp byte ptr [rdx+00000085],00
ACS_Gold.exe+2A96BA: 74 08                 - je ACS_Gold.exe+2A96C4
ACS_Gold.exe+2A96BC: 83 F9 01              - cmp ecx,01
}
</AssemblerScript>
              <Hotkeys>
                <Hotkey>
                  <Action>Toggle Activation</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>73</Key>
                  </Keys>
                  <ID>0</ID>
                  <ActivateSound TTS="EN">Activated</ActivateSound>
                  <DeactivateSound TTS="EN">Deactivated</DeactivateSound>
                </Hotkey>
              </Hotkeys>
              <CheatEntries>
                <CheatEntry>
                  <ID>87988</ID>
                  <Description>"Money"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pInventory</Address>
                  <Offsets>
                    <Offset>28</Offset>
                    <Offset>(readSmallInteger("tInventory+1*2")-1)*8</Offset>
                    <Offset>28</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>87989</ID>
                  <Description>"Throwing Knifes"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pInventory</Address>
                  <Offsets>
                    <Offset>28</Offset>
                    <Offset>(readSmallInteger("tInventory+2B*2")-1)*8</Offset>
                    <Offset>28</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>87990</ID>
                  <Description>"Smoke Bombs"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pInventory</Address>
                  <Offsets>
                    <Offset>28</Offset>
                    <Offset>(readSmallInteger("tInventory+5*2")-1)*8</Offset>
                    <Offset>28</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>87991</ID>
                  <Description>"Bullets"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pInventory</Address>
                  <Offsets>
                    <Offset>28</Offset>
                    <Offset>(readSmallInteger("tInventory+E*2")-1)*8</Offset>
                    <Offset>28</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>87992</ID>
                  <Description>"Hallucinogenic Darts"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pInventory</Address>
                  <Offsets>
                    <Offset>28</Offset>
                    <Offset>(readSmallInteger("tInventory+2C*2")-1)*8</Offset>
                    <Offset>28</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>87993</ID>
                  <Description>"Voltaic Bombs"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pInventory</Address>
                  <Offsets>
                    <Offset>28</Offset>
                    <Offset>(readSmallInteger("tInventory+8*2")-1)*8</Offset>
                    <Offset>28</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>87994</ID>
                  <Description>"Medicine"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pInventory</Address>
                  <Offsets>
                    <Offset>28</Offset>
                    <Offset>(readSmallInteger("tInventory+2D*2")-1)*8</Offset>
                    <Offset>28</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>87995</ID>
                  <Description>"--- DLC Jack The Ripper"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>87996</ID>
                  <Description>"Spikes"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pInventory</Address>
                  <Offsets>
                    <Offset>28</Offset>
                    <Offset>(readSmallInteger("tInventory+A*2")-1)*8</Offset>
                    <Offset>28</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>87997</ID>
                  <Description>"Fear Bombs"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pInventory</Address>
                  <Offsets>
                    <Offset>28</Offset>
                    <Offset>(readSmallInteger("tInventory+9*2")-1)*8</Offset>
                    <Offset>28</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>87998</ID>
                  <Description>"--- Crafting"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>87999</ID>
                  <Description>"Leather"</Description>
                  <VariableType>2 Bytes</VariableType>
                  <Address>pInventory</Address>
                  <Offsets>
                    <Offset>28</Offset>
                    <Offset>(readSmallInteger("tInventory+38*2")-1)*8</Offset>
                    <Offset>28</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>88000</ID>
                  <Description>"Iron"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pInventory</Address>
                  <Offsets>
                    <Offset>28</Offset>
                    <Offset>(readSmallInteger("tInventory+39*2")-1)*8</Offset>
                    <Offset>28</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>88001</ID>
                  <Description>"Thread"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pInventory</Address>
                  <Offsets>
                    <Offset>28</Offset>
                    <Offset>(readSmallInteger("tInventory+3C*2")-1)*8</Offset>
                    <Offset>28</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>88002</ID>
                  <Description>"Chemicals"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pInventory</Address>
                  <Offsets>
                    <Offset>28</Offset>
                    <Offset>(readSmallInteger("tInventory+3A*2")-1)*8</Offset>
                    <Offset>28</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>383</ID>
              <Description>"Teleport &amp; Coordinates..."</Description>
              <Options moHideChildren="1" moManualExpandCollapse="1" moDeactivateChildrenAsWell="1"/>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : ACS.exe
  Version:
  Date   : 2020-05-15
  Author : Paul44

  Free Roaming...
  (using 'write coordinates' routine)
}

[ENABLE]
{$lua}
  -- checks used in Map Waypoint..., Teleport to Waypoint... &amp; Build Icon List...
  -- (see also "opening" script)
  -- gets ptr for 'Build Icon List...'...
  getStaticAddr("8B 42 44 8B 4A 48 48",-6,"pUIMinimapMgr",2)
  -- getStaticAddr("48 23 DF 4C 8D 4C 24 68",4,"pUIMinimapMgr",2)
  -- getStaticAddr("48 8B 49 50 41 B1 01",4,"pUIMinimapMgr",2)
  local addrMapmgr = getAddress("[pUIMinimapMgr]")
  if not (addrMapmgr == 0 or addrMapmgr == nil) then
    local addrUIicon = readPointer(addrMapmgr+0x60)
    -- assume at least one iocn record with correct VFT ref within 1st 10...
    -- local offsCheck = 0xB0
    for i=0,10 do
        local addrVFT = readPointer(readPointer(addrUIicon+8*i))
        local sCheck1 = readString(addrVFT+0xA8,5)
        local sCheck2 = readString(addrVFT+0xB0,5)
        if (sCheck1 == "Alpha" or sCheck2 == "Alpha") then
          writeQword(getAddress("pUIMapCheck1"),addrVFT)
          --synchronize(function()
          --    f.ListBox.Items.Add(string.format('\n &gt; pUIMapCheck1: [%X]',addrVFT))
          --end)
          --f.ListBox.Bottom
          break
        end
        --print(i,' - ',string.format('%X',addrVFT))
    end
  end

  if (addrMapmgr == 0 or addrMapmgr == nil) then
     print('\n Teleporting will probably not work at the moment...')
     print(' Try to dis/enable [Collecting info...] on a later stage, after finishing a mission for example')
  end

  --getStaticAddr("41 0F 28 CB 41 0F 59 CB 44 0F 56",-16,"pCamera",0)

  -- use fall damage vs godmode...
  nFallmr = readInteger(getAddress('nFallId'))
  local nId = readBytes(getAddress('bUseGodmode'))
  if nId == 1 then nFallmr = readInteger(getAddress('nGodId')) end


{$asm}
// Entity ~ see main script...
// code writes coordinates... rax+30 = x-coordinate...
aobscanmodule(Coord,$process,0F 28 42 20 0F 29 41 50 0F 28 4A 30 0F 29 49 60 C3)
registersymbol(Coord)
alloc(newmem,$200)

// camera: yaw &amp; pitch...
aobscanmodule(Camera,$process,89 42 68 8B 42 08 89 42 6C C6 42 78 01 B8 01 00 00 00)
registersymbol(Camera)
alloc(newmem2,$100)

// Map waypoint...
globalalloc(pMapWayp,8)
globalalloc(nDropHeight,4)
globalalloc(bDropHigh,1)

// save current location x,y,z coordinates (float)...
globalalloc(OrigCoord,12)
// init script variables
globalalloc(XYstepVal,4)
globalalloc(ZstepVal,4)
globalalloc(ZstepdropHeight,4)

globalalloc(Xval,4)
globalalloc(Yval,4)
globalalloc(Zval,4)
globalalloc(bFreeRoam,1)
globalalloc(pCamera,8)
globalalloc(bCoordSave,1)
globalalloc(nFrameSpeed,4)
globalalloc(bCoordRestore,1)

nDropHeight:
dd 42200000                              // = 40.0
XYstepVal:
dd 40000000                              // (float)2.0
ZstepVal:
dd 3F800000
ZstepdropHeight:
dd 40000000                              // (float)2.0

bFreeRoam:
db 0
// save_restore coordinates...
bCoordSave:
db 1
bDropHigh:
db 1
bCoordRestore:
db 0

// fill in offset here ~ see table coordinates...
pStructCrdOffset:
dd 60

// freeroam timer interval (smoother/faster = 50 - smoothest/fast = 20)
// choose between player or camera
nFrameSpeed:
dd #20


label(code)
label(return)

// subroutines...
alloc(updateCrd,$100)

updateCrd:
  // updated coordinates...
  mov r15,pStructCrdBase
  mov rbx,[r15]
  mov r15,pStructCrdOffset
  add rbx,[r15]
  mov r15,XVal
  mov edx,dword ptr [r15]
  mov [rbx],edx
  add rbx,4
  mov r15,YVal
  mov edx,dword ptr [r15]
  mov [rbx],edx
  add rbx,4
  mov r15,ZVal
  mov edx,dword ptr [r15]
  mov [rbx],edx
  ret

// Player roaming...
newmem:
{$try}
  push rbx
  push rcx
  push rdx
  push r15
  movaps xmm0,[rdx+20]                                          // extend injection_opcode to cover 14+ bytes
  movaps [rcx+50],xmm0
  movaps xmm1,[rdx+30]
  movaps [rcx+60],xmm1
@@:
  mov r15,pEntity
  mov rbx,[r15]
  //sub rbx,0x20
  cmp rbx,rcx
  jne code
  // freecam routines... x64: 8-byte ptrs &amp; r?x registers...
  mov r15,bFreeRoam
  cmp byte ptr [r15],1
  jne code
  mov r15,pEntity
  mov rbx,[r15]
  mov r15,pStructCrdBase
  mov [r15],rbx
  // updated coordinates...
  mov r15,updateCrd
  call r15
  mov r15,pStructCrdBase
  mov rbx,[r15]
  movaps xmm1,[rbx+60]
  jmp code
{$except}
  mov r15,nCrash2
  inc [r15]
code:
  pop r15
  pop rdx
  pop rcx
  pop rbx
  jmp return

Coord:
  jmp far newmem
  db 90 90
return:

// camera...
label(code2)
label(return2)

newmem2:
  push r15
  mov r15,pCamera
  mov [r15],rdx
  pop r15
code2:
  mov [rdx+68],eax
  mov eax,[rdx+08]
  mov [rdx+6C],eax
  mov byte ptr [rdx+78],01
  mov eax,00000001
  jmp return2

Camera:
  jmp far newmem2
  nop 4
return2:


[DISABLE]
bCoordSave:
db 0

Coord:
  db 0F 28 42 20 0F 29 41 50 0F 28 4A 30 0F 29 49 60

unregistersymbol(Coord)
dealloc(newmem)
dealloc(updateCrd)

Camera:
  db 89 42 68 8B 42 08 89 42 6C C6 42 78 01 B8 01 00 00 00

unregistersymbol(Camera)
dealloc(newmem2)

{
// ORIGINAL CODE - INJECTION POINT: "ACS.exe"+1C4D2A3

"ACS.exe"+1C4D28B: CC                       -  int 3
"ACS.exe"+1C4D28C: CC                       -  int 3
"ACS.exe"+1C4D28D: CC                       -  int 3
"ACS.exe"+1C4D28E: CC                       -  int 3
"ACS.exe"+1C4D28F: CC                       -  int 3
"ACS.exe"+1C4D290: 0F 28 02                 -  movaps xmm0,[rdx]
"ACS.exe"+1C4D293: 0F 29 41 30              -  movaps [rcx+30],xmm0
"ACS.exe"+1C4D297: 0F 28 4A 10              -  movaps xmm1,[rdx+10]
"ACS.exe"+1C4D29B: 0F 29 49 40              -  movaps [rcx+40],xmm1
// ---------- INJECTING HERE ----------
"ACS.exe"+1C4D29F: 0F 28 42 20              -  movaps xmm0,[rdx+20]
"ACS.exe"+1C4D2A3: 0F 29 41 50              -  movaps [rcx+50],xmm0
"ACS.exe"+1C4D2A7: 0F 28 4A 30              -  movaps xmm1,[rdx+30]
"ACS.exe"+1C4D2AB: 0F 29 49 60              -  movaps [rcx+60],xmm1
// ---------- DONE INJECTING  ----------
"ACS.exe"+1C4D2AF: C3                       -  ret
"ACS.exe"+1C4D2B0: 48 83 EC 38              -  sub rsp,38
"ACS.exe"+1C4D2B4: 4C 8B 51 20              -  mov r10,[rcx+20]
"ACS.exe"+1C4D2B8: 0F B6 44 24 60           -  movzx eax,byte ptr [rsp+60]
"ACS.exe"+1C4D2BD: 4D 85 D2                 -  test r10,r10
"ACS.exe"+1C4D2C0: 74 16                    -  je ACS.exe+1C4D2D8
"ACS.exe"+1C4D2C2: 88 44 24 28              -  mov [rsp+28],al
"ACS.exe"+1C4D2C6: 49 8B CA                 -  mov rcx,r10
"ACS.exe"+1C4D2C9: C6 44 24 20 00           -  mov byte ptr [rsp+20],00
}

{ camera...
// ORIGINAL CODE - INJECTION POINT: ACS.exe+25BB772

ACS.exe+25BB753: 8B 42 0C        - mov eax,[rdx+0C]
ACS.exe+25BB756: 0F 28 74 24 10  - movaps xmm6,[rsp+10]
ACS.exe+25BB75B: 89 42 58        - mov [rdx+58],eax
ACS.exe+25BB75E: 8B 42 10        - mov eax,[rdx+10]
ACS.exe+25BB761: 89 42 5C        - mov [rdx+5C],eax
ACS.exe+25BB764: 8B 42 14        - mov eax,[rdx+14]
ACS.exe+25BB767: 89 42 60        - mov [rdx+60],eax
ACS.exe+25BB76A: 8B 02           - mov eax,[rdx]
ACS.exe+25BB76C: 89 42 64        - mov [rdx+64],eax
ACS.exe+25BB76F: 8B 42 04        - mov eax,[rdx+04]
// ---------- INJECTING HERE ----------
ACS.exe+25BB772: 89 42 68        - mov [rdx+68],eax
// ---------- DONE INJECTING  ----------
ACS.exe+25BB775: 8B 42 08        - mov eax,[rdx+08]
ACS.exe+25BB778: 89 42 6C        - mov [rdx+6C],eax
ACS.exe+25BB77B: C6 42 78 01     - mov byte ptr [rdx+78],01
ACS.exe+25BB77F: B8 01 00 00 00  - mov eax,00000001
ACS.exe+25BB784: 48 83 C4 28     - add rsp,28
ACS.exe+25BB788: C3              - ret
ACS.exe+25BB789: CC              - int 3
ACS.exe+25BB78A: CC              - int 3
ACS.exe+25BB78B: CC              - int 3
ACS.exe+25BB78C: CC              - int 3
}
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>386</ID>
                  <Description>"X-axis"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <Color>808080</Color>
                  <VariableType>Float</VariableType>
                  <Address>pEntity</Address>
                  <Offsets>
                    <Offset>60</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>387</ID>
                      <Description>"Y-axis"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <Color>808080</Color>
                      <VariableType>Float</VariableType>
                      <Address>+4</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>388</ID>
                      <Description>"Z-axis"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <Color>808080</Color>
                      <VariableType>Float</VariableType>
                      <Address>+8</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>11904</ID>
                  <Description>"Map Waypoint..."</Description>
                  <Options moHideChildren="1" moManualExpandCollapse="1" moDeactivateChildrenAsWell="1"/>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : ACS.exe
  Version: 
  Date   : 2020-05-22
  Author : Paul44

  Gets coordinates of waypoint marker...
}

[ENABLE]
aobscanmodule(MapMarker,$process,0F 29 40 60 48 8B 48 28 48 63 41 0C 48 8B 09)
registersymbol(MapMarker)
alloc(newmem,$100)

globalalloc(pMapWayp,8)

label(code)
label(return)

newmem:
  // ptrs change constantly...
  // need research to see if 0x142B3C400 changes in time (or RAMsize)...
  // excludings icons... for now
  push r15
  push rbx
  mov r15,pUIMapCheck1
  mov rbx,[r15]
  cmp rbx,[rax]
  jne code
  mov r15,pMapWayp
  mov [r15],rax
code:
  pop rbx
  pop r15
@@:
  movaps [rax+60],xmm0
  mov rcx,[rax+28]
  movsxd rax,dword ptr [rcx+0C]
  mov rcx,[rcx]
  jmp return

MapMarker:
  jmp far newmem
  db 90
return:


[DISABLE]

MapMarker:
  db 0F 29 40 60 48 8B 48 28 48 63 41 0C 48 8B 09

unregistersymbol(MapMarker)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "ACS.exe"+2C5987

"ACS.exe"+2C5961: 41 8B 06                    -  mov eax,[r14]
"ACS.exe"+2C5964: 89 44 24 30                 -  mov [rsp+30],eax
"ACS.exe"+2C5968: 45 33 C0                    -  xor r8d,r8d
"ACS.exe"+2C596B: 48 8B 54 24 30              -  mov rdx,[rsp+30]
"ACS.exe"+2C5970: E8 0B EE 08 02              -  call ACS.exe+2354780
"ACS.exe"+2C5975: 48 85 C0                    -  test rax,rax
"ACS.exe"+2C5978: 74 31                       -  je ACS.exe+2C59AB
"ACS.exe"+2C597A: 48 8B 00                    -  mov rax,[rax]
"ACS.exe"+2C597D: C6 80 90 00 00 00 01        -  mov byte ptr [rax+00000090],01
"ACS.exe"+2C5984: 0F 28 07                    -  movaps xmm0,[rdi]
// ---------- INJECTING HERE ----------
"ACS.exe"+2C5987: 0F 29 40 60                 -  movaps [rax+60],xmm0
"ACS.exe"+2C598B: 48 8B 48 28                 -  mov rcx,[rax+28]
"ACS.exe"+2C598F: 48 63 41 0C                 -  movsxd  rax,dword ptr [rcx+0C]
"ACS.exe"+2C5993: 48 8B 09                    -  mov rcx,[rcx]
// ---------- DONE INJECTING  ----------
"ACS.exe"+2C5996: 48 C1 E0 20                 -  shl rax,20
"ACS.exe"+2C599A: 48 C1 F8 3F                 -  sar rax,3F
"ACS.exe"+2C599E: 48 23 C8                    -  and rcx,rax
"ACS.exe"+2C59A1: 74 08                       -  je ACS.exe+2C59AB
"ACS.exe"+2C59A3: 48 8B D7                    -  mov rdx,rdi
"ACS.exe"+2C59A6: E8 85 79 98 01              -  call ACS.exe+1C4D330
"ACS.exe"+2C59AB: 48 85 DB                    -  test rbx,rbx
"ACS.exe"+2C59AE: 74 08                       -  je ACS.exe+2C59B8
}
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>231</ID>
                      <Description>"(Help...)"</Description>
                      <Options moHideChildren="1"/>
                      <LastState/>
                      <Color>008000</Color>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : ACU.exe
  Version:
  Date   : 2018-05-17
  Author : Paul44

  HowTo: Teleporting...
}

[ENABLE]

{$lua}
  local sMessage = [[
 1.  Open map and select a location
      (avoid 'system' icons, such as ViewPoint !)
 2.  Press [Ctrl+T] once while still in the map view...!
     (if done correctly, player icon should reposition accordingly)
 3.  Press [ESC] to teleport to that particular location
      (see also [Readme] file)

 Note: do not forget to enable [God mode] first.
  ]]

  showMessage(sMessage)

return error()

{$asm}

[DISABLE]

</AssemblerScript>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>232</ID>
                          <Description>"World ~ Base Address"</Description>
                          <ShowAsHex>1</ShowAsHex>
                          <VariableType>4 Bytes</VariableType>
                          <Address>pWorld</Address>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>326</ID>
                      <Description>"Drop Height"</Description>
                      <VariableType>Float</VariableType>
                      <Address>nDropHeight</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14288</ID>
                      <Description>"Drop High (= 1)"</Description>
                      <VariableType>Byte</VariableType>
                      <Address>bDropHigh</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>267</ID>
                      <Description>"Teleport to Waypoint..."</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : ACU.exe
  Version:
  Date   : 2018-05-17
  Author : Paul44

  Teleports player to Map Waypoint Marker...
}

[ENABLE]


{$lua}
-- only evaluate following 2 records...
local addrMap = readPointer(getAddress("pMapWayp"))
if(addrMap == 0) then return end

local checkPtr = readPointer(addrMap)
local addrCheckPtr1 = readPointer(getAddress("pUIMapCheck1"))
--local addrCheckPtr2 = readPointer(getAddress("pUIMapCheck2"))
if not (checkPtr == addrCheckPtr1) then return end

local addrEntity = readPointer(getAddress("pEntity"))
local CrdOffset = readInteger(getAddress("pStructCrdOffset"))
addrEntity = addrEntity + CrdOffset

local coordX = readFloat(addrEntity)
local coordY = readFloat(addrEntity+0x4)
local coordZ = readFloat(addrEntity+0x8)
-- if error, restore original coordinates...

--[[
if not pcall(SetCoord) then
    --print(string.format('%5.3f  -  %5.3f   -   %5.3f',coordX,coordY,coordZ))
    local addrC3 = getAddress("nCrash3")
    local nCount = readInteger(addrC3)
    nCount = nCount + 1
    writeInteger(addrC3, nCount)
    writeFloat(addrEntity,coordX)
    writeFloat(addrEntity+0x4,coordY)
    writeFloat(addrEntity+0x8,coordZ)
end
]]

--function SetCoord()
    -- Icon Coordinates also reside in Base structure: +50 .. +54 .. +58
    local IconHeight = 2.0
    -- Map waypoint does not have a Z-value, so we use a fixed Z-value...
    local addrMap = readPointer(getAddress("pMapWayp"))
    local addrHeight = getAddress("nDropHeight")
    local fHeight = readFloat(addrHeight)
    local bDropHigh = readBytes(getAddress("bDropHigh"))
    --print(string.format('&lt;['.. "%02x" ..']&gt;',addrEntity))
    local MapX = readFloat(addrMap+0x60)
    local MapY = readFloat(addrMap+0x64)
    local MapZ = readFloat(addrMap+0x68)
    if (MapZ == 0) then MapZ = fHeight end
    --local MapZ = readFloat(addrHeight)
    -- in case an icon is selected: 0x20 ~= 0 ~ not all of them return coordinates...

    --local bIcon = readInteger(addrMap+0x20)
    --local IconX = readFloat(addrMap+0x60)
    --local IconY = readFloat(addrMap+0x64)
    --local IconZ = readFloat(addrMap+0x68)
    --print(string.format("[%f]",MapZ))
    local bMapUpdate = true
    local bIconUpdate = false

    if MapX ~= MapX or MapY ~= MapY then bMapUpdate = false end
    if MapX == nil or MapY == nil or (MapX == 0 and MapY == 0) then
        bMapUpdate = false
    elseif math.floor(MapX) == -1 or math.floor(MapY) == -1 then
        bMapUpdate = false
    end

    --print(string.format("*[%s]*",tostring(bMapUpdate)))
    if bMapUpdate then
        -- dis/enable collision - taken from #Sunbeam's ACS table...
        --local addrFlagCollision = getAddress("[[[pEntity]+0x88]+0x110]+0x4A")
        --writeBytes(addrFlagCollision,0)

        --max: less chance of falling through surface - min: eliminates extreme high values...
        if (bDropHigh == 0) then
            writeFloat(addrEntity+0x8,MapZ+IconHeight)
        else
            writeFloat(addrEntity+0x8,math.min(math.max(MapZ+IconHeight,fHeight),100))
        end
        writeFloat(addrEntity,MapX)
        writeFloat(addrEntity+0x4,MapY)
        writeQword(getAddress("pMapWayp"),0x0)

        writeFloat(addrMap+0x60,0)
        writeFloat(addrMap+0x64,0)
        writeQword(addrMap+0x68,0)

        -- always enable noFallDamage/godmode...
        local mr = getAddressList().getMemoryRecordByID(nFallmr)
         mr.Active = true

        --writeBytes(addrFlagCollision,1)
    end
--end

{$asm}
// disables script automatically by CE...
test al,al

[DISABLE]
</AssemblerScript>
                      <Hotkeys>
                        <Hotkey>
                          <Action>Toggle Activation</Action>
                          <Keys>
                            <Key>17</Key>
                            <Key>84</Key>
                          </Keys>
                          <ID>0</ID>
                        </Hotkey>
                      </Hotkeys>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>11906</ID>
                          <Description>"Icon X"</Description>
                          <ShowAsSigned>0</ShowAsSigned>
                          <Color>808080</Color>
                          <VariableType>Float</VariableType>
                          <Address>pMapWayp</Address>
                          <Offsets>
                            <Offset>60</Offset>
                          </Offsets>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>11905</ID>
                          <Description>"Icon Y"</Description>
                          <ShowAsSigned>0</ShowAsSigned>
                          <Color>808080</Color>
                          <VariableType>Float</VariableType>
                          <Address>pMapWayp</Address>
                          <Offsets>
                            <Offset>64</Offset>
                          </Offsets>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>11908</ID>
                          <Description>"Icon Z"</Description>
                          <ShowAsSigned>0</ShowAsSigned>
                          <Color>808080</Color>
                          <VariableType>Float</VariableType>
                          <Address>pMapWayp</Address>
                          <Offsets>
                            <Offset>68</Offset>
                          </Offsets>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>88619</ID>
                  <Description>"Free Roam..."</Description>
                  <Options moHideChildren="1" moManualExpandCollapse="1" moDeactivateChildrenAsWell="1"/>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
{$lua}
-- FreeRoam mr Id...
local nID = 88619

function checkPointers()
    local sText = "Pointers are not collected yet ! \n\n" ..
                  'Swap back ingame, and then re-enable again...'
    local nType = mtInformation
    local nButton = mbOK
    messageDialog(sText, nType, nButton)

    local mr = getAddressList().getMemoryRecordByID(nID)
    local timerMr = createTimer(getMainForm())
    timerMr.Interval = 100
    timerMr.OnTimer = function(timer)
        mr.Active = false
        timerMr.destroy()
    end
end

execRoutine = nil

local addrEntity = getAddress("[pEntity]")
local addrCrdOffset = getAddress("pStructCrdOffset")
local CrdOffset = readInteger(addrCrdOffset)
addrEntity = addrEntity + CrdOffset
if (addrEntity == 0 or addrEntity == nil) then return end

local addrCamera = getAddressSafe("[pCamera]")
if (addrCamera == 0 or addrCamera == nil) then return end
--print(string.format('%X - %X',addrEntity,addrCamera))

local addrOrig = getAddress("OrigCoord")
-- storing original coordinates...
local X = readFloat(addrEntity)
local Y = readFloat(addrEntity+0x4)
local Z = readFloat(addrEntity+0x8)

--print(string.format('X: %f - Y: %f - Z; %f',X,Y,Z))
if ((X == 0 or X == nil) and (Y == 0 or Y == nil)) then
   checkPointers()
   return
end
local bCoordRestore = readBytes(getAddress("bCoordRestore"))
if (bCoordRestore == 0) then
    writeFloat(addrOrig,X)
    writeFloat(addrOrig+0x4,Y)
    writeFloat(addrOrig+0x8,Z)
end

local addrX = getAddress("Xval")
local addrY = getAddress("Yval")
local addrZ = getAddress("Zval")
writeFloat(addrX,X)
writeFloat(addrY,Y)
writeFloat(addrZ,Z)

-- always enable godmode &amp; fall damage...
local mr = readInteger(getAddress("nGodId"))
mr = getAddressList().getMemoryRecordByID(mr)
mr.Active = true
mr = readInteger(getAddress("nFallId"))
mr = getAddressList().getMemoryRecordByID(mr)
mr.Active = true

local nTimer = readInteger(getAddress("nFrameSpeed"))

writeBytes(getAddress('bFreeRoam'),1)
local mForm = getMainForm()
-- ID mRecord FreeRoam - addrCoordinatesPlayer - addrYaw - offsYax1 - offsYaw2 - addrPitch - offsPitch - Inverse...
aFlyInfo = {nID,addrEntity,addrCamera,0x4C,0x64,addrCamera,0x68}
--local aFlyInfo = {nID,addrEntity,addrCamera,0x4,0x0,addrCamera,0x8} ~ different struct
function ActivateFly()
    tmerFly = createTimer(mForm, false)
    tmerFly.OnTimer = Flyhack
    tmerFly.Interval = nTimer
    tmerFly.Enabled = true
end

ActivateFly()

 
[DISABLE]
{$lua}
writeBytes(getAddress('bFreeRoam'),2)

if ( tmerFly ~= nil ) then tmerFly.destroy() end

-- see 'Scripts to run per Timer interval'...
-- handles health reset issue...


</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>88601</ID>
                      <Description>"(Help - see also Readme)"</Description>
                      <LastState/>
                      <Color>008000</Color>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : AC4BFSP.exe
  Version:
  Date   : 2018-03-23
  Author : Paul44

  Help instructions on how to use the 'hover' function
}

[ENABLE]
{$lua}
if getOpenedProcessID() ~= 0 then
    luacall(Help())
end

{$asm}
// disable script in CE table
// apparently, using an ASM opcode that is syntactically correct, but can not be
// AA-ed by CE causes it to disable the script automatically...

test al,al
//dd (int)48

[DISABLE]

</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>88602</ID>
                      <Description>"Script values"</Description>
                      <Options moHideChildren="1"/>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>808080</Color>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>88603</ID>
                          <Description>"Xval"</Description>
                          <Color>808080</Color>
                          <VariableType>Float</VariableType>
                          <Address>Xval</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>88604</ID>
                          <Description>"Yval"</Description>
                          <Color>808080</Color>
                          <VariableType>Float</VariableType>
                          <Address>Yval</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>88605</ID>
                          <Description>"Zval"</Description>
                          <Color>808080</Color>
                          <VariableType>Float</VariableType>
                          <Address>Zval</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>88606</ID>
                          <Description>"OrigCoord X"</Description>
                          <Color>808080</Color>
                          <VariableType>Float</VariableType>
                          <Address>OrigCoord</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>88607</ID>
                          <Description>"OrigCoord Y"</Description>
                          <Color>808080</Color>
                          <VariableType>Float</VariableType>
                          <Address>OrigCoord+4</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>88608</ID>
                          <Description>"OrigCoord Z"</Description>
                          <Color>808080</Color>
                          <VariableType>Float</VariableType>
                          <Address>OrigCoord+8</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>88638</ID>
                          <Description>"Drop Height"</Description>
                          <VariableType>Float</VariableType>
                          <Address>nDropHeight</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>88609</ID>
                          <Description>"XYstepVal"</Description>
                          <VariableType>Float</VariableType>
                          <Address>XYstepVal</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>88610</ID>
                          <Description>"ZstepVal"</Description>
                          <VariableType>Float</VariableType>
                          <Address>ZstepVal</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>88611</ID>
                          <Description>"ZstepdropHeight"</Description>
                          <VariableType>Float</VariableType>
                          <Address>ZstepdropHeight</Address>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>14326</ID>
                  <Description>"Cam Distance..."</Description>
                  <Options moHideChildren="1" moManualExpandCollapse="1" moDeactivateChildrenAsWell="1"/>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : ACS.exe
  Version: 
  Date   : 2020-07-27
  Author : Paul44

  Manage camera distance to player ~ FOV)
  (main research performed by #arthurclg17 @csrinru ~ ACUPlayerCameraComponent)
}

[ENABLE]

aobscanmodule(FreeCam,$process,F3 0F 11 16 0F 28 55 AF 0F 5C 55 BF 0F 59 D3)
registersymbol(FreeCam)
alloc(newmem,$100)

globalalloc(pFreeCam,8)
globalalloc(FOVCam,4)

// default value ~ see aobscan [C7 06 DB 0F 49 3F]...
FOVCam:
dd 3F490FDB

label(code)
label(return)

newmem:
  movss [rsi],xmm2
  movaps xmm2,[rbp-51]
  subps xmm2,[rbp-41]
  mulps xmm2,xmm3
code:
  push rax
  push r15
  mov r15,pFreeCam
  mov [r15],rsi
  mov r15,FOVCam
  mov rax,[r15]
  mov [rsi],rax
  pop r15
  pop rax
  jmp return

FreeCam:
  jmp far newmem
  db 90
return:


[DISABLE]

FOVCam:
dd 3F490FDB

FreeCam:
  db F3 0F 11 16 0F 28 55 AF 0F 5C 55 BF 0F 59 D3

unregistersymbol(FreeCam)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "ACS.exe"+197D4DF

"ACS.exe"+197D4B4: 0F 28 BC 24 A0 00 00 00  -  movaps xmm7,[rsp+000000A0]
"ACS.exe"+197D4BC: F3 0F 10 DE              -  movss xmm3,xmm6
"ACS.exe"+197D4C0: 0F 28 E0                 -  movaps xmm4,xmm0
"ACS.exe"+197D4C3: 0F C6 DB 00              -  shufps xmm3,xmm3,00
"ACS.exe"+197D4C7: F3 0F 59 D6              -  mulss xmm2,xmm6
"ACS.exe"+197D4CB: 0F 5C 4D DF              -  subps xmm1,[rbp-21]
"ACS.exe"+197D4CF: F3 0F 11 23              -  movss [rbx],xmm4
"ACS.exe"+197D4D3: F3 0F 58 55 77           -  addss xmm2,[rbp+77]
"ACS.exe"+197D4D8: 0F 59 CB                 -  mulps xmm1,xmm3
"ACS.exe"+197D4DB: 0F 58 4D DF              -  addps xmm1,[rbp-21]
// ---------- INJECTING HERE ----------
"ACS.exe"+197D4DF: F3 0F 11 16              -  movss [rsi],xmm2
"ACS.exe"+197D4E3: 0F 28 55 AF              -  movaps xmm2,[rbp-51]
"ACS.exe"+197D4E7: 0F 5C 55 BF              -  subps xmm2,[rbp-41]
"ACS.exe"+197D4EB: 0F 59 D3                 -  mulps xmm2,xmm3
// ---------- DONE INJECTING  ----------
"ACS.exe"+197D4EE: 0F 58 55 BF              -  addps xmm2,[rbp-41]
"ACS.exe"+197D4F2: 41 0F 29 16              -  movaps [r14],xmm2
"ACS.exe"+197D4F6: F3 0F 10 95 83 00 00 00  -  movss xmm2,[rbp+00000083]
"ACS.exe"+197D4FE: 41 0F 29 0F              -  movaps [r15],xmm1
"ACS.exe"+197D502: F3 0F 5C 55 AB           -  subss xmm2,[rbp-55]
"ACS.exe"+197D507: F3 0F 10 4D 7F           -  movss xmm1,[rbp+7F]
"ACS.exe"+197D50C: F3 0F 5C 4D A7           -  subss xmm1,[rbp-59]
"ACS.exe"+197D511: F3 0F 59 D6              -  mulss xmm2,xmm6
}
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>14330</ID>
                      <Description>"(applies to all cam perspectives)"</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>FF0000</Color>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14327</ID>
                      <Description>"Cam Distance (Default = 0.785)"</Description>
                      <VariableType>Float</VariableType>
                      <Address>FOVCam</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14328</ID>
                      <Description>"Actual Cam Distance"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <Color>C0C0C0</Color>
                      <VariableType>Float</VariableType>
                      <Address>pFreeCam</Address>
                      <Offsets>
                        <Offset>0</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>89288</ID>
                  <Description>"Speed..."</Description>
                  <Options moHideChildren="1" moManualExpandCollapse="1" moDeactivateChildrenAsWell="1"/>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : ACS_Gold.exe
  Version: 
  Date   : 2023-03-25
  Author : Paul44

  Sets player's speed (~ step multiplier)...
}

[ENABLE]

aobscanmodule(Speed,$process,F3 0F 10 B0 F0 00 00 00 F3 0F 59 B1 A0 01 00 00)
registersymbol(Speed)
alloc(newmem,$100)

globalalloc(fSpeed,4)

fSpeed:
dd 40000000                              // (float)2.0

label(code)
label(return)

newmem:
  movss xmm6,[rax+000000F0]
  mulss xmm6,[rcx+000001A0]
code:
  push r15
  mov r15,pEntity
  cmp rax,[r15]
  jne short @f
  mov r15,fSpeed
  movss xmm6,[r15]
@@:
  pop r15
  jmp return

Speed:
  jmp far newmem
  nop 2
return:


[DISABLE]

Speed:
  db F3 0F 10 B0 F0 00 00 00 F3 0F 59 B1 A0 01 00 00

unregistersymbol(Speed)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ACS_Gold.exe+8A590

ACS_Gold.exe+8A565: 0F B7 81 F8 00 00 00     - movzx eax,word ptr [rcx+000000F8]
ACS_Gold.exe+8A56C: 48 8B DA                 - mov rbx,rdx
ACS_Gold.exe+8A56F: 48 8B F9                 - mov rdi,rcx
ACS_Gold.exe+8A572: 66 C1 E8 09              - shr ax,09
ACS_Gold.exe+8A576: A8 01                    - test al,01
ACS_Gold.exe+8A578: 0F 84 3C 02 00 00        - je ACS_Gold.exe+8A7BA
ACS_Gold.exe+8A57E: F6 81 08 0D 00 00 10     - test byte ptr [rcx+00000D08],10
ACS_Gold.exe+8A585: 0F 29 74 24 70           - movaps [rsp+70],xmm6
ACS_Gold.exe+8A58A: 74 1E                    - je ACS_Gold.exe+8A5AA
ACS_Gold.exe+8A58C: 48 8B 41 18              - mov rax,[rcx+18]
// ---------- INJECTING HERE ----------
ACS_Gold.exe+8A590: F3 0F 10 B0 F0 00 00 00  - movss xmm6,[rax+000000F0]
// ---------- DONE INJECTING  ----------
ACS_Gold.exe+8A598: F3 0F 59 B1 A0 01 00 00  - mulss xmm6,[rcx+000001A0]
ACS_Gold.exe+8A5A0: F3 0F 59 B1 A4 01 00 00  - mulss xmm6,[rcx+000001A4]
ACS_Gold.exe+8A5A8: EB 08                    - jmp ACS_Gold.exe+8A5B2
ACS_Gold.exe+8A5AA: F3 0F 10 35 82 90 A8 02  - movss xmm6,[ACS_Gold.exe+2B13634]
ACS_Gold.exe+8A5B2: 48 8B 89 90 02 00 00     - mov rcx,[rcx+00000290]
ACS_Gold.exe+8A5B9: 48 8D 55 C0              - lea rdx,[rbp-40]
ACS_Gold.exe+8A5BD: E8 EE 42 FC FF           - call ACS_Gold.exe+4E8B0
ACS_Gold.exe+8A5C2: 48 8B 8F 90 02 00 00     - mov rcx,[rdi+00000290]
ACS_Gold.exe+8A5C9: 48 8D 55 B0              - lea rdx,[rbp-50]
ACS_Gold.exe+8A5CD: E8 CE 42 FC FF           - call ACS_Gold.exe+4E8A0
}
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>88662</ID>
                      <Description>"Speed Mulitplier (default = 1)"</Description>
                      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Float</VariableType>
                      <Address>fSpeed</Address>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>88663</ID>
                          <Description>"(multiplier &amp; sizing)"</Description>
                          <ShowAsSigned>0</ShowAsSigned>
                          <Color>808080</Color>
                          <VariableType>Float</VariableType>
                          <Address>pEntity</Address>
                          <Offsets>
                            <Offset>7C</Offset>
                          </Offsets>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>92863</ID>
                  <Description>"Icon Teleport... (London + DLCs)"</Description>
                  <Options moHideChildren="1" moManualExpandCollapse="1" moDeactivateChildrenAsWell="1"/>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : ACU.exe
  Version:
  Date   : 2020-06-03
  Author : Paul44

  Builds/prints Icon lists...
}

[ENABLE]
// Gets ptr to IconList of Chests, Cockades, etc...
// PermanentIconManager... +34
aobscanmodule(IconList,$process,89 8C 24 B8 00 00 00 45 8D 2C 0E 45 3B F5)
registersymbol(IconList)
alloc(newmem,$100)

// get collisionflag... - BipedComponent...
aobscanmodule(BipedComp,$process,0F 29 17 48 8B 43 18 48 8B 48 20 48 85 C9)
registersymbol(BipedComp)
alloc(newmem2,$100)

globalalloc(pIconList,8)
globalalloc(pBipedComp,8)
globalalloc(pIconBChoice,1)
globalalloc(pIconLChoice,1)

pIconBChoice:
db 0
pIconLChoice:
db 0


label(code)
label(return)

newmem:
  // [rax+counter_offset]+0x08 = record Icon...
  push rax
  push r15
  mov rax,[rsi+34]
  mov r15,pIconList
  mov [r15],rax
  pop r15
  pop rax
code:
  mov [rsp+000000B8],ecx
  lea r13d,[r14+rcx]
  cmp r14d,r13d
  jmp return

IconList:
  jmp far newmem
return:


// collisionflag...
label(code2)
label(return2)

newmem2:
  push r15
  mov r15,pBipedComp
  mov [r15],rbx
  pop r15
code2:
  movaps [rdi],xmm2
  mov rax,[rbx+18]
  mov rcx,[rax+20]
  test rcx,rcx
  jmp return2

BipedComp:
  jmp far newmem2
return2:


[DISABLE]

IconList:
  db 89 8C 24 B8 00 00 00 45 8D 2C 0E 45 3B F5

unregistersymbol(IconList)
dealloc(newmem)

BipedComp:
  db 0F 29 17 48 8B 43 18 48 8B 48 20 48 85 C9

unregistersymbol(BipedComp)
dealloc(newmem2)

{
// ORIGINAL CODE - INJECTION POINT: "ACS.exe"+D77F15

"ACS.exe"+D77EE4: 48 8D 0D 9D B4 36 06     -  lea rcx,[ACS.exe+70E3388]
"ACS.exe"+D77EEB: 4C 89 78 C0              -  mov [rax-40],r15
"ACS.exe"+D77EEF: E8 2C A4 EF 00           -  call ACS.exe+1C72320
"ACS.exe"+D77EF4: E8 17 07 D1 00           -  call ACS.exe+1A88610
"ACS.exe"+D77EF9: 0F B7 56 3E              -  movzx edx,word ptr [rsi+3E]
"ACS.exe"+D77EFD: 44 8B B6 E0 00 00 00     -  mov r14d,[rsi+000000E0]
"ACS.exe"+D77F04: B9 14 00 00 00           -  mov ecx,00000014
"ACS.exe"+D77F09: 88 84 24 B0 00 00 00     -  mov [rsp+000000B0],al
"ACS.exe"+D77F10: 3B D1                    -  cmp edx,ecx
"ACS.exe"+D77F12: 0F 46 CA                 -  cmovbe ecx,edx
// ---------- INJECTING HERE ----------
"ACS.exe"+D77F15: 89 8C 24 B8 00 00 00     -  mov [rsp+000000B8],ecx
"ACS.exe"+D77F1C: 45 8D 2C 0E              -  lea r13d,[r14+rcx]
"ACS.exe"+D77F20: 45 3B F5                 -  cmp r14d,r13d
// ---------- DONE INJECTING  ----------
"ACS.exe"+D77F23: 0F 83 C3 01 00 00        -  jae ACS.exe+D780EC
"ACS.exe"+D77F29: 0F 1F 80 00 00 00 00     -  nop dword ptr [rax+00000000]
"ACS.exe"+D77F30: 0F B7 46 3E              -  movzx eax,word ptr [rsi+3E]
"ACS.exe"+D77F34: 66 85 C0                 -  test ax,ax
"ACS.exe"+D77F37: 0F 84 A8 01 00 00        -  je ACS.exe+D780E5
"ACS.exe"+D77F3D: 0F B7 C8                 -  movzx ecx,ax
"ACS.exe"+D77F40: 33 D2                    -  xor edx,edx
"ACS.exe"+D77F42: 41 8B C6                 -  mov eax,r14d
}
{ bipedcomponent...
// ORIGINAL CODE - INJECTION POINT: ACS_Gold.exe+1A7F58A

ACS_Gold.exe+1A7F563: 0F 5C D1                 - subps xmm2,xmm1
ACS_Gold.exe+1A7F566: 0F C6 D2 D2              - shufps xmm2,xmm2,-2E
ACS_Gold.exe+1A7F56A: 0F 59 D0                 - mulps xmm2,xmm0
ACS_Gold.exe+1A7F56D: 0F 59 C0                 - mulps xmm0,xmm0
ACS_Gold.exe+1A7F570: 0F 5C 05 39 5E 69 02     - subps xmm0,[ACS_Gold.exe+41153B0]
ACS_Gold.exe+1A7F577: 0F 58 D4                 - addps xmm2,xmm4
ACS_Gold.exe+1A7F57A: 0F 59 C5                 - mulps xmm0,xmm5
ACS_Gold.exe+1A7F57D: 0F 58 D0                 - addps xmm2,xmm0
ACS_Gold.exe+1A7F580: 0F 59 15 39 6E 09 01     - mulps xmm2,[ACS_Gold.exe+2B163C0]
ACS_Gold.exe+1A7F587: 0F 29 17                 - movaps [rdi],xmm2
// ---------- INJECTING HERE ----------
ACS_Gold.exe+1A7F58A: 48 8B 43 18              - mov rax,[rbx+18]
// ---------- DONE INJECTING  ----------
ACS_Gold.exe+1A7F58E: 48 8B 48 20              - mov rcx,[rax+20]
ACS_Gold.exe+1A7F592: 48 85 C9                 - test rcx,rcx
ACS_Gold.exe+1A7F595: 74 07                    - je ACS_Gold.exe+1A7F59E
ACS_Gold.exe+1A7F597: E8 F4 93 1C 00           - call ACS_Gold.exe+1C48990
ACS_Gold.exe+1A7F59C: EB 04                    - jmp ACS_Gold.exe+1A7F5A2
ACS_Gold.exe+1A7F59E: 48 83 C0 30              - add rax,30
ACS_Gold.exe+1A7F5A2: 0F 28 60 10              - movaps xmm4,[rax+10]
ACS_Gold.exe+1A7F5A6: 0F 28 54 24 50           - movaps xmm2,[rsp+50]
ACS_Gold.exe+1A7F5AB: 48 8B 84 24 98 00 00 00  - mov rax,[rsp+00000098]
ACS_Gold.exe+1A7F5B3: 0F 28 DA                 - movaps xmm3,xmm2
}
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>26074</ID>
                      <Description>"(Always make a backup of your game saves first !)"</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>0000FF</Color>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>26075</ID>
                      <Description>"(it can take some time to build the list...)"</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>FF0000</Color>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>26076</ID>
                      <Description>"Build Icon List..."</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">{ Game   : ACU.exe
  Version: 
  Date   : 2020-05-29
  Author : Paul44

  Manages mapicon marker...
}

[ENABLE]
//  UIMinimapManager... +58: list of icons...
// aobscanmodule(INJECT,ACU.exe,4C 8D 4C 24 78 4C 8B C6 48 8B CB)

{$lua}
local f = nil
local nChoice = 0
local sMsg = ''
local sInfo = ''
local sListItems
addrStruct = ''
strStruct = ''


function setCollision(obj)
    -- dis/enable collision - taken from #Sunbeam's ACS table...
    if aTeleportInfo[5] == nil then return end
    local addrFlagCollision = getAddressSafe('[pBipedComp]')
    if (addrFlagCollision == 0 or addrFlagCollision == nil) then return end
    addrFlagCollision = addrFlagCollision+0x4A
    --print(string.format('%X - %d',addrFlagCollision,aTeleportInfo[5]))
    local bCollision = aTeleportInfo[5]
    -- give time to teleportt to new location...
    -- need to come up with better solution... ?!
    -- if bCollision == 1 then sleep(3000) end
    writeBytes(addrFlagCollision,bCollision)
end

--main routines...
function listMapIcons()
  local addrCheckPtr = readPointer(getAddress("pUIMapCheck1"))
  local addrUIicon = readPointer(getAddress("[pUIMinimapMgr]")+0x60)

  if ( addrCheckPtr == 0 or addrCheckPtr == nil or addrUIicon == 0 or addrUIicon == nil) then
     local sText = "The 'check_Pointers' are not collected yet ! \n" ..
                  'Swap back ingame, open/close your map and then return here...'
     local nType = mtInformation
     local nButton = mbOK
     messageDialog(sText, nType, nButton)
     return
  end

  local fHeight = readFloat(getAddress("nDropHeight"))
  -- always enable noFallDamage/godmode...
  aTeleportInfo = {fHeight,nFallmr,nil,nil,{0,1}}

  execRoutine = nil
  execStruct = nil
  --execRoutine = setCollision

  synchronize(function()
      -- painting form...
      f = IconList
      f.Show()
      f.Width = 800
      f.Height = 600
      f.Caption = 'ACS - Icon Teleport...'
      local lBox = f.ListBox
      lBox.Clear()
      local lbTitle = f.IconTitle
      lbTitle.Caption = 'One moment please... processing...'
      local lbInfo = f.IconInfo
      lbInfo.Caption = ''
      local lbHead = f.IconHead
      lbHead.Caption = '     #       addrIcon+offs    Type         X             Y             Z     (* = Enabled)'
      local lbMsg = f.IconMessage
      lbMsg.Caption = "Best teleport while 'Map' is selected!\n" .. "(also make sure 'God Mode' is enabled)"
      local cbGod = f.GodMode
      f.GodMode.Caption  = 'God Mode:'
      f.GodMode.Visible = false
      f.pCoord.Visible = true
      f.Structure.Visible = false
      f.RecycleBin.Visible = false

      -- enable 'God Mode' script...
      --local al = getAddressList()
      --local mr = al.getMemoryRecordByID(106)
      --mr.Active = true

      -- reset coordinates...
      local xCoord = f.CoordX
      xCoord.Caption = ''
      local yCoord = f.CoordY
      yCoord.Caption = ''
      local zCoord = f.CoordZ
      zCoord.Caption = ''
      f.PlayerX.Caption = ''
      f.PlayerY.Caption = ''
      f.PlayerZ.Caption = ''

      lbTitle.Caption = string.format('UIMinimapManager: {%X+%X}',getAddress("[pUIMinimapMgr]"),0x60)
      mr = al.getMemoryRecordByID(26077)
      local sInfo = mr.DropDownList[nChoice+1]
      sInfo = sInfo:match(":(.*)")
      lbInfo.Caption = sInfo
  end)

    local bContinue = true
    local nCount = 0
    sListItems.beginUpdate()
    while (bContinue) do
        local addrIcon = readPointer(addrUIicon+nCount*8)
        local addrCheck =  readPointer(addrIcon)
        if (addrCheck ~= addrCheckPtr) then
            bContinue = false
            break
        end
        --write(string.format('(%d)',nCount))
        if (readSmallInteger(addrIcon+0x12) == 0x8000) then
          local addrInfo = readPointer(addrIcon+0x18)                -- UIMinimapManager
          local bShown = ""
          if (readQword(addrInfo) ~= 0) then
            local iconCat = readInteger(addrInfo+0x14)
            if (readInteger(addrIcon+0xB0) ~= 0) then bShown = "(*)" end   --- ???
            -- get Entity record ~ +D4: ID = 0 !
            addrInfo = readPointer(addrInfo)
            local coordX = readFloat(addrInfo+0x60)
            local coordY = readFloat(addrInfo+0x64)
            local coordZ = readFloat(addrInfo+0x68)

            local sName = string.format('(%04d) {%12X+%04X} - %03d  | %9.3f  ~  %9.3f  ~  %9.3f | %s',
                                             nCount,addrIcon,nCount*8,iconCat,coordX,coordY,coordZ,bShown)

            sListItems.Text = sListItems.Text .. sName
            if (nCount % 500 == 0) then
                synchronize(function()
                    f.ListBox.Items.Text = sListItems.Text
                end)
            end
            --print(string.format('(%d) {%X+%X} - %d:  [ %f  ~  %f  ~  %f ]   %s',nCount,addrIcon,nCount*8,iconCat,coordX,coordY,coordZ,bShown))
            --break
          end
        end
        nCount = nCount + 1
    end
    synchronize(function()
        f.ListBox.Items.Text = sListItems.Text
    end)
    sListItems.endUpdate()
end -- list mapicons...

function showMapIcons()
  local addrIconList = 0
  addrIconList = readPointer(getAddressSafe("pIconList"))
  if ( addrIconList == 0 or addrIconList == nil) then
     local sText = "The 'check_Pointers' are not collected yet ! \n" ..
                  'Swap back ingame, open/close your map and then return here...'
     local nType = mtInformation
     local nButton = mbOK
     messageDialog(sText, nType, nButton)
     return
  end

  -- 1 = nDropHeight ~ 2 = mrID
  local fHeight = readFloat(getAddress("nDropHeight"))
  -- always enable noFallDamage/godmode...
  aTeleportInfo = {fHeight,nFallmr,nil,nil,{0,1}}

  execRoutine = nil
  execStruct = nil
  --execRoutine = setCollision

  synchronize(function()
      -- painting form...
      f = IconList
      f.Show()
      f.Width = 950
      f.Height = 600
      f.Caption = 'ACU - Icon Teleport...'
      local lBox = f.ListBox
      lBox.Clear()
      local lbTitle = f.IconTitle
      lbTitle.Caption = 'One moment please... processing...'
      local lbInfo = f.IconInfo
      lbInfo.Caption = ''
      local lbHead = f.IconHead
      lbHead.Caption = '   #         addrIcon+Offs   Category    X-coord       Y-coord       Z-coord  [Shown Opened Collected]'
      local lbMsg = f.IconMessage
      lbMsg.Caption = "Best teleport while 'Map' is selected!\n" .. "(also make sure 'God Mode' is enabled)"
      local cbGod = f.GodMode
      f.GodMode.Caption  = 'God Mode:'
      f.GodMode.Visible = false
      f.pCoord.Visible = true
      f.Structure.Visible = false
      f.RecycleBin.Visible = false
      --local mr = al.getMemoryRecordByID(14268)
      --mr.Active = true
      --mr = al.getMemoryRecordByID(106)
      --mr.Active = true

      -- reset coordinates...
      local xCoord = f.CoordX
      xCoord.Caption = ''
      local yCoord = f.CoordY
      yCoord.Caption = ''
      local zCoord = f.CoordZ
      zCoord.Caption = ''
      f.PlayerX.Caption = ''
      f.PlayerY.Caption = ''
      f.PlayerZ.Caption = ''

      lbTitle.Caption = string.format('Icon List: {%X}',addrIconList)
      local al = getAddressList()
      mr = al.getMemoryRecordByID(26077)
      local sInfo = mr.DropDownList[nChoice]
      sInfo = sInfo:match(":(.*)")
      lbInfo.Caption = sInfo
  end)

  local aItem = {[1] = 'Beer Bottle', [2] = 'Golden Chest', [5] = 'White Chest', [6] = 'Pressed Flower', [7] = 'Illustration',
                [13] = 'Royal Correspondence', [14] = 'Secret of London', [18] = 'Helix glitch', [9] = 'Letter f/t Front'}

  local fPrevCoordSum = 0
  local bContinue = true
  local nCount = 0
  local nOffset = 0
  sListItems.beginUpdate()
  while (bContinue) do
      local bProcess = false
      local bShowUpdate = false

      local addrIcon = readPointer(addrIconList+nOffset*8)
      local checkRec = readPointer(addrIcon)
      --print(string.format('(%d) - {%X+%X}',nCount+1,addrIcon,nOffset*8))
      if (checkRec == 0 or checkRec == nil) then break end

      -- PermanentIconCollectableCondition...
      addrIcon = readPointer(addrIcon+0x08)
      bMapShow = readBytes(addrIcon+0x51)
      bChestOpen = readBytes(addrIcon+0x50)
      bItemCollected = readBytes(addrIcon+0x74)

        local coordX = readFloat(addrIcon+0x20)
        local coordY = readFloat(addrIcon+0x24)
        local coordZ = readFloat(addrIcon+0x28)

        local catVal1 = 0
        local catVal2 = 0
        local addrCat = addrIcon+0x60
        --local addrCat = addrIcon+0x68
        addrCat = readPointer(addrCat)
        if not (addrCat == 0 or addrCat == nil) then
          addrCat = readPointer(addrCat)
          if not (addrCat == 0 or addrCat == nil) then
              catVal1 = readInteger(addrCat+0x28)
              if (catVal1 == nil) then catVal1 = 0 end
              catVal2 = readInteger(addrCat+0x2C)
              if (catVal2 == nil) then catVal2 = 0 end
          end
        end

        if (nChoice == 1) then bProcess = true end
        if (nChoice == 2 and bMapShow == 0) then bProcess = true end
        if (nChoice == 3 and bChestOpen == 0 and bItemCollected == 0 and (catVal2 == 2 or catVal2 == 5)) then bProcess = true end
        if (nChoice == 4 and bItemCollected == 0) then bProcess = true end
        if (nChoice == 5 and bItemCollected == 0 and catVal2 == 18) then bProcess = true end
        --
        if (nChoice == 6 and catVal2 == 5 and bMapShow == 0) then bShowUpdate = true end
        if (nChoice == 7 and catVal2 == 2 and bMapShow == 0) then bShowUpdate = true end
        if (nChoice == 8 and catVal2 == 1 and bMapShow == 0) then bShowUpdate = true end
        if (nChoice == 9 and catVal2 == 6 and bMapShow == 0) then bShowUpdate = true end
        if (nChoice == 10 and catVal2 == 7 and bMapShow == 0) then bShowUpdate = true end
        if (nChoice == 11 and catVal2 == 13 and bMapShow == 0) then bShowUpdate = true end
        if (nChoice == 12 and catVal2 == 14 and bMapShow == 0) then bShowUpdate = true end
        if (nChoice == 13 and catVal2 == 18 and bMapShow == 0) then bShowUpdate = true end
        if (nChoice == 14 and catVal2 == 9 and bMapShow == 0) then bShowUpdate = true end

        -- sum coordinates and compare with prev icon_coord...
        local fSum = coordX + coordY + coordZ
        local fDiffer = math.abs(fSum - fPrevCoordSum)
        if (fDiffer &lt; 0.00001 ) then bProcess = false end
        fPrevCoordSum = fSum

        if (bShowUpdate) then
           writeBytes(addrIcon+0x51,1)
        end

        if (bProcess or bShowUpdate) then
            local sItem = aItem[catVal2] or ''
            local sName = string.format('(%04d) {%12X+%04X} - %02d/%03d | %9.3f  ~  %9.3f  ~  %9.3f | [%d  -   %d   -   %d]  %s',
                nCount+1,addrIcon,nOffset*8,catVal1,catVal2,coordX,coordY,coordZ,bMapShow,bChestOpen,bItemCollected,sItem)

            sListItems.Text = sListItems.Text .. sName
            if (nCount % 500 == 0) then
                synchronize(function()
                    f.ListBox.Items.Text = sListItems.Text
                end)
            end
            nCount = nCount +1
        end
        --break
        nOffset = nOffset + 1
    end
    synchronize(function()
        f.ListBox.Items.Text = sListItems.Text
    end)
    sListItems.endUpdate()
end -- show mapicons...


-- main routine...
  nChoice = readBytes(getAddress("pIconBChoice"),1)
  if not (nChoice &gt; 0 and nChoice &lt; 16) then return end
  sListItems = createStringList()

  if (nChoice == 15) then listMapIcons() else showMapIcons() end
  sListItems.destroy()

{$asm}
test al,al

pIconBChoice:
db 0


[DISABLE]

pIconBChoice:
db 0


{
// ORIGINAL CODE - INJECTION POINT: "ACU.exe"+8549A5

"ACU.exe"+854972: 48 89 44 24 78           -  mov [rsp+78],rax
"ACU.exe"+854977: F0 FF 40 08              - lock  inc [rax+08]
"ACU.exe"+85497B: 48 8B 94 24 80 00 00 00  -  mov rdx,[rsp+00000080]
"ACU.exe"+854983: F0 FF 4A 08              - lock  dec [rdx+08]
"ACU.exe"+854987: 75 15                    -  jne ACU.exe+85499E
"ACU.exe"+854989: F7 42 0C FF FF FF 00     -  test [rdx+0C],00FFFFFF
"ACU.exe"+854990: 75 0C                    -  jne ACU.exe+85499E
"ACU.exe"+854992: 48 8D 0D D7 71 A0 04     -  lea rcx,[ACU.exe+525BB70]
"ACU.exe"+854999: E8 42 7F E9 01           -  call ACU.exe+26EC8E0
"ACU.exe"+85499E: 48 8B 15 CB 2D 94 04     -  mov rdx,[ACU.exe+5197770]
// ---------- INJECTING HERE ----------
"ACU.exe"+8549A5: 4C 8D 4C 24 78           -  lea r9,[rsp+78]
// ---------- DONE INJECTING  ----------
"ACU.exe"+8549AA: 4C 8B C6                 -  mov r8,rsi
"ACU.exe"+8549AD: 48 8B CB                 -  mov rcx,rbx
"ACU.exe"+8549B0: E8 FB 43 01 00           -  call ACU.exe+868DB0
"ACU.exe"+8549B5: 48 8B F0                 -  mov rsi,rax
"ACU.exe"+8549B8: 48 85 C0                 -  test rax,rax
"ACU.exe"+8549BB: 0F 84 80 00 00 00        -  je ACU.exe+854A41
"ACU.exe"+8549C1: E8 6A 3C 9B 01           -  call ACU.exe+2208630
"ACU.exe"+8549C6: 48 8B CE                 -  mov rcx,rsi
"ACU.exe"+8549C9: 48 8B D0                 -  mov rdx,rax
"ACU.exe"+8549CC: E8 2F C0 47 01           -  call ACU.exe+1CD0A00
}
</AssemblerScript>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>26077</ID>
                          <Description>"Allow To Run:"</Description>
                          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:&lt;Disabled&gt;
1:1. List full icon overview
2:2. List icons not shown on map yet
3:3. List chests not opened yet
4:4. List items not collected yet
5:5. List Helix glitch not collected yet
16:---
6:A. Show White Chests on map now
7:B. Show Golden Chests on map now
8:C. Show Beer Bottles on map now
9:D. Show Pressed Flowers on map now
10:E. Show Illustrations on map now
11:F. Show Royal Correspondences on map now
12:G. Show Secrets of London on map now
13:H. Show Helix glitch on map now
14:I. Show Letters f/t Front on map now
17:---
15:15. List Map/System Icons
</DropDownList>
                          <Color>FF00FF</Color>
                          <VariableType>Byte</VariableType>
                          <Address>pIconBChoice</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>26082</ID>
                          <Description>"Drop Height"</Description>
                          <Color>808080</Color>
                          <VariableType>Float</VariableType>
                          <Address>nDropHeight</Address>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>88495</ID>
                  <Description>"Save &amp; Restore Coordinates..."</Description>
                  <Options moHideChildren="1" moManualExpandCollapse="1" moDeactivateChildrenAsWell="1"/>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:&lt;Disabled&gt;
1:Enabled
2:Enabled &amp; Keep Coordinates
</DropDownList>
                  <ShowAsSigned>0</ShowAsSigned>
                  <Color>000000</Color>
                  <VariableType>Byte</VariableType>
                  <Address>bCoordSave</Address>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>89203</ID>
                      <Description>"(if nothing happens, you have not yet selected your choice of restoring...)"</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>FF0000</Color>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>88483</ID>
                      <Description>"([F11] = Save - [F12] = Restore)"</Description>
                      <Options moHideChildren="1"/>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>FF00FF</Color>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>88492</ID>
                          <Description>"Save..."</Description>
                          <LastState/>
                          <Color>808080</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>{ Game   : Dishonored2.exe
  Version:
  Date   : 2022-08-12
  Author : Paul44

  saves coordinates...
}

[ENABLE]
{$lua}
  local nChoice = readBytes(getAddress('bCoordSave'))
  local addrEntity = getAddress("[pEntity]")

  coordSaveRestore(0,addrEntity,88492,nChoice)

[DISABLE]

</AssemblerScript>
                          <Hotkeys>
                            <Hotkey>
                              <Action>Activate</Action>
                              <Keys>
                                <Key>122</Key>
                              </Keys>
                              <ID>0</ID>
                              <ActivateSound TTS="EN">Coordinates Saved</ActivateSound>
                            </Hotkey>
                          </Hotkeys>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>88493</ID>
                          <Description>"Restore..."</Description>
                          <LastState/>
                          <Color>808080</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>{ Game   : Dishonored2.exe
  Version:
  Date   : 2022-08-12
  Author : Paul44

  restores saved coordinates...
}

[ENABLE]
{$lua}
  local nChoice = readBytes(getAddress('bCoordSave'))
  local addrEntity = getAddress("[pEntity]")
  coordSaveRestore(1,addrEntity,88493,nChoice)

    -- always enable noFallDamage/godmode...
  mr = getAddressList().getMemoryRecordByID(nFallmr)
  mr.Active = true

  --writeBytes(addrFlagCollision,1)


[DISABLE]


</AssemblerScript>
                          <Hotkeys>
                            <Hotkey>
                              <Action>Activate</Action>
                              <Keys>
                                <Key>123</Key>
                              </Keys>
                              <ID>0</ID>
                              <ActivateSound TTS="EN">Coordinates Restored</ActivateSound>
                            </Hotkey>
                          </Hotkeys>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>88494</ID>
                      <Description>"Saved Coordinates..."</Description>
                      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>000000</Color>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>88815</ID>
                          <Description>"Drop Height"</Description>
                          <Color>000000</Color>
                          <VariableType>Float</VariableType>
                          <Address>nDropHeight</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>88488</ID>
                          <Description>"Xval"</Description>
                          <ShowAsSigned>0</ShowAsSigned>
                          <Color>808080</Color>
                          <VariableType>Float</VariableType>
                          <Address>OrigCoord</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>88489</ID>
                          <Description>"Yval"</Description>
                          <ShowAsSigned>0</ShowAsSigned>
                          <Color>808080</Color>
                          <VariableType>Float</VariableType>
                          <Address>OrigCoord+4</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>88490</ID>
                          <Description>"Zval"</Description>
                          <ShowAsSigned>0</ShowAsSigned>
                          <Color>808080</Color>
                          <VariableType>Float</VariableType>
                          <Address>OrigCoord+8</Address>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>97576</ID>
              <Description>"Carriage Status..."</Description>
              <Options moHideChildren="1" moManualExpandCollapse="1" moDeactivateChildrenAsWell="1"/>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : ACS_Gold.exe
  Version: 
  Date   : 2024-02-15
  Author : Paul44

  Gets carriage currently used...
}

[ENABLE]
// CarriageMgr: carriage riding... +150 = entity...
aobscanmodule(CarriageEntity,$process,0F 55 50 30 0F 56 D1 0F 29 93 D0 00 00 00 48 8B 74)
registersymbol(CarriageEntity)
alloc(newmem,$100)

aobscanmodule(BhvCarriage,$process,48 8B 41 18 48 8B D9 48 8B B8 60 01 00 00)
registersymbol(BhvCarriage)
alloc(newmem2,$100)

// gets carriage being hit/rammed...
aobscanmodule(CarriageKill,$process,0F B6 81 7E FF FF FF 24 01 88 02 33 C0 C3)
registersymbol(CarriageKill)
alloc(newmem3,$100)


globalalloc(pCarriageEntity,8)
globalalloc(pBhvCarriage,8)

// carriage entity...
label(code)
label(return)

newmem:
  // base_entity = rax-30
  push r15
  mov r15,pCarriageEntity
  //mov r14,[rcx+150]
  //mov r14,[r14]
  mov [r15],rax
  pop r15
code:
  andnps xmm2,[rax+30]
  orps xmm2,xmm1
  movaps [rbx+000000D0],xmm2
  jmp return

CarriageEntity:
  jmp far newmem
return:

// get health...
label(code2)
label(code21)
label(return2)

newmem2:
  mov rax,[rcx+18]
  mov rbx,rcx
  mov rdi,[rax+00000160]
code2:
  push r15
  mov r15,pCarriageEntity
  mov r15,[r15]
  cmp r15,0
  je code21
  //base_entity: -0x30
  sub r15,30
  cmp r15,rax
  jne code21
  mov r15,pBhvCarriage
  mov [r15],rcx
code21:
  pop r15
  jmp return2

BhvCarriage:
  jmp far newmem2
return2:

// 1hit kill...
label(code3)
label(return3)

newmem3:
  push r8
  push r13
  mov r13,bCarHitKill
  cmp byte ptr [r13],1
  jne code3
  mov r13,pCarriageEntity
  mov r13,[r13]
  sub r13,30
  cmp r13,r14
  je code3
  mov r13,rcx
  // health_base @-160
  sub r13,160
  mov r8,nCarHealthMax
  mov r8d,dword ptr [r8]
  // 0 = health not touched...
  cmp r8d,0
  jbe code3
  cmp dword ptr [r13+E0],r8d
  jbe code3
  mov dword ptr [r13+E0],r8d
code3:
  pop r13
  pop r8
@@:
  movzx eax,byte ptr [rcx-00000082]
  and al,01
  mov [rdx],al
  xor eax,eax
  ret
  jmp return3

CarriageKill:
  jmp far newmem3
return3:


[DISABLE]

CarriageEntity:
  db 0F 55 50 30 0F 56 D1 0F 29 93 D0 00 00 00

unregistersymbol(CarriageEntity)
dealloc(newmem)

BhvCarriage:
  db 48 8B 41 18 48 8B D9 48 8B B8 60 01 00 00

unregistersymbol(BhvCarriage)
dealloc(newmem2)

CarriageKill:
  db 0F B6 81 7E FF FF FF 24 01 88 02 33 C0 C3

unregistersymbol(CarriageKill)
dealloc(newmem3)

{ entity...
// ORIGINAL CODE - INJECTION POINT: ACS_Gold.exe+1B4FA1D

ACS_Gold.exe+1B4F9F9: 48 8B 4F 20                    - mov rcx,[rdi+20]
ACS_Gold.exe+1B4F9FD: 48 85 C9                       - test rcx,rcx
ACS_Gold.exe+1B4FA00: 74 07                          - je ACS_Gold.exe+1B4FA09
ACS_Gold.exe+1B4FA02: E8 89 8F 0F 00                 - call ACS_Gold.exe+1C48990
ACS_Gold.exe+1B4FA07: EB 04                          - jmp ACS_Gold.exe+1B4FA0D
ACS_Gold.exe+1B4FA09: 48 8D 47 30                    - lea rax,[rdi+30]
ACS_Gold.exe+1B4FA0D: 0F 28 0D 0C 71 5A 02           - movaps xmm1,[ACS_Gold.exe+40F6B20]
ACS_Gold.exe+1B4FA14: 0F 57 C0                       - xorps xmm0,xmm0
ACS_Gold.exe+1B4FA17: 0F 28 D1                       - movaps xmm2,xmm1
ACS_Gold.exe+1B4FA1A: 0F 54 C8                       - andps xmm1,xmm0
// ---------- INJECTING HERE ----------
ACS_Gold.exe+1B4FA1D: 0F 55 50 30                    - andnps xmm2,[rax+30]
// ---------- DONE INJECTING  ----------
ACS_Gold.exe+1B4FA21: 0F 56 D1                       - orps xmm2,xmm1
ACS_Gold.exe+1B4FA24: 0F 29 93 D0 00 00 00           - movaps [rbx+000000D0],xmm2
ACS_Gold.exe+1B4FA2B: 48 8B 74 24 40                 - mov rsi,[rsp+40]
ACS_Gold.exe+1B4FA30: 48 89 BB 28 01 00 00           - mov [rbx+00000128],rdi
ACS_Gold.exe+1B4FA37: 48 8B 7C 24 48                 - mov rdi,[rsp+48]
ACS_Gold.exe+1B4FA3C: C7 83 50 01 00 00 00 00 00 00  - mov [rbx+00000150],00000000
ACS_Gold.exe+1B4FA46: 48 83 C4 30                    - add rsp,30
ACS_Gold.exe+1B4FA4A: 5B                             - pop rbx
ACS_Gold.exe+1B4FA4B: C3                             - ret
ACS_Gold.exe+1B4FA4C: CC                             - int 3
}
{ bhvcarriage...
// ORIGINAL CODE - INJECTION POINT: ACS_Gold.exe+17ACF2A

ACS_Gold.exe+17ACF19: CC                    - int 3
ACS_Gold.exe+17ACF1A: CC                    - int 3
ACS_Gold.exe+17ACF1B: CC                    - int 3
ACS_Gold.exe+17ACF1C: CC                    - int 3
ACS_Gold.exe+17ACF1D: CC                    - int 3
ACS_Gold.exe+17ACF1E: CC                    - int 3
ACS_Gold.exe+17ACF1F: CC                    - int 3
ACS_Gold.exe+17ACF20: 48 89 5C 24 08        - mov [rsp+08],rbx
ACS_Gold.exe+17ACF25: 57                    - push rdi
ACS_Gold.exe+17ACF26: 48 83 EC 20           - sub rsp,20
// ---------- INJECTING HERE ----------
ACS_Gold.exe+17ACF2A: 48 8B 41 18           - mov rax,[rcx+18]
// ---------- DONE INJECTING  ----------
ACS_Gold.exe+17ACF2E: 48 8B D9              - mov rbx,rcx
ACS_Gold.exe+17ACF31: 48 8B B8 60 01 00 00  - mov rdi,[rax+00000160]
ACS_Gold.exe+17ACF38: 48 85 FF              - test rdi,rdi
ACS_Gold.exe+17ACF3B: 74 08                 - je ACS_Gold.exe+17ACF45
ACS_Gold.exe+17ACF3D: 48 8B CF              - mov rcx,rdi
ACS_Gold.exe+17ACF40: E8 DB 53 4C 00        - call ACS_Gold.exe+1C72320
ACS_Gold.exe+17ACF45: 48 8B 8B D0 00 00 00  - mov rcx,[rbx+000000D0]
ACS_Gold.exe+17ACF4C: 48 85 C9              - test rcx,rcx
ACS_Gold.exe+17ACF4F: 74 09                 - je ACS_Gold.exe+17ACF5A
ACS_Gold.exe+17ACF51: 48 8B 01              - mov rax,[rcx]
}
{ 1hit kill...
// ORIGINAL CODE - INJECTION POINT: ACS_Gold.exe+E89680

ACS_Gold.exe+E89676: CC                    - int 3
ACS_Gold.exe+E89677: CC                    - int 3
ACS_Gold.exe+E89678: CC                    - int 3
ACS_Gold.exe+E89679: CC                    - int 3
ACS_Gold.exe+E8967A: CC                    - int 3
ACS_Gold.exe+E8967B: CC                    - int 3
ACS_Gold.exe+E8967C: CC                    - int 3
ACS_Gold.exe+E8967D: CC                    - int 3
ACS_Gold.exe+E8967E: CC                    - int 3
ACS_Gold.exe+E8967F: CC                    - int 3
// ---------- INJECTING HERE ----------
ACS_Gold.exe+E89680: 0F B6 81 7E FF FF FF  - movzx eax,byte ptr [rcx-00000082]
// ---------- DONE INJECTING  ----------
ACS_Gold.exe+E89687: 24 01                 - and al,01
ACS_Gold.exe+E89689: 88 02                 - mov [rdx],al
ACS_Gold.exe+E8968B: 33 C0                 - xor eax,eax
ACS_Gold.exe+E8968D: C3                    - ret
ACS_Gold.exe+E8968E: CC                    - int 3
ACS_Gold.exe+E8968F: CC                    - int 3
ACS_Gold.exe+E89690: 0F B6 41 86           - movzx eax,byte ptr [rcx-7A]
ACS_Gold.exe+E89694: 24 01                 - and al,01
ACS_Gold.exe+E89696: 88 02                 - mov [rdx],al
ACS_Gold.exe+E89698: 33 C0                 - xor eax,eax
}
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>97578</ID>
                  <Description>"Health"</Description>
                  <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
                  <ShowAsSigned>0</ShowAsSigned>
                  <Color>000000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pBhvCarriage</Address>
                  <Offsets>
                    <Offset>E0</Offset>
                    <Offset>40</Offset>
                    <Offset>60</Offset>
                    <Offset>C8</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>97600</ID>
                      <Description>"(max)"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <Color>808080</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+4</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>97601</ID>
                  <Description>"God Mode"</Description>
                  <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:&lt;Disabled&gt;
1:Enabled
</DropDownList>
                  <ShowAsSigned>0</ShowAsSigned>
                  <Color>000000</Color>
                  <VariableType>Byte</VariableType>
                  <Address>pBhvCarriage</Address>
                  <Offsets>
                    <Offset>DE</Offset>
                    <Offset>40</Offset>
                    <Offset>60</Offset>
                    <Offset>C8</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>97602</ID>
                      <Description>"(max)"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <Color>808080</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+4</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>97607</ID>
                  <Description>"1-Hit Kill Carriage"</Description>
                  <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:&lt;Disabled&gt;
1:Enabled
</DropDownList>
                  <ShowAsSigned>0</ShowAsSigned>
                  <Color>000000</Color>
                  <VariableType>Byte</VariableType>
                  <Address>bCarHitKill</Address>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>97608</ID>
                      <Description>"(max)"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <Color>808080</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+4</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>97597</ID>
                  <Description>"Xval"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <Color>808080</Color>
                  <VariableType>Float</VariableType>
                  <Address>pCarriageEntity</Address>
                  <Offsets>
                    <Offset>30</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>97598</ID>
                      <Description>"Yval"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <Color>808080</Color>
                      <VariableType>Float</VariableType>
                      <Address>+4</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>97599</ID>
                      <Description>"Yval"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <Color>808080</Color>
                      <VariableType>Float</VariableType>
                      <Address>+8</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>92838</ID>
              <Description>"Miscellaneous..."</Description>
              <Options moHideChildren="1" moManualExpandCollapse="1" moDeactivateChildrenAsWell="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>14554</ID>
                  <Description>"Time Of Day..."</Description>
                  <Options moHideChildren="1" moManualExpandCollapse="1" moDeactivateChildrenAsWell="1"/>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : ACS.exe
  Version:
  Date   : 2020-09-24
  Author : Paul44

  Set daytime...
}

[ENABLE]
{$lua}
getStaticAddr("44 8B 41 6C 0F 57 C0",8,"pTimeOfDay",0)

{$asm}

// struct: TimeOfDayManager...
aobscanmodule(DayTimeMgr,$process,48 8B 81 B8 00 00 00 F3 0F 10 40 0C C3 CC)
registersymbol(DayTimeMgr)
alloc(newmem,$100)

globalalloc(pDayTimeMgr,8)

label(code)
label(return)

newmem:
  push r15
  mov r15,pDayTimeMgr
  mov [r15],rcx
  pop r15
code:
  mov rax,[rcx+000000B8]
  movss xmm0,[rax+0C]
  ret
  int 3
  jmp return

DayTimeMgr:
  jmp far newmem
return:


[DISABLE]

{$asm}

DayTimeMgr:
  db 48 8B 81 B8 00 00 00 F3 0F 10 40 0C C3 CC

unregistersymbol(DayTimeMgr)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "ACS.exe"+1AA98E0

"ACS.exe"+1AA98CC: CC                       -  int 3
"ACS.exe"+1AA98CD: CC                       -  int 3
"ACS.exe"+1AA98CE: CC                       -  int 3
"ACS.exe"+1AA98CF: CC                       -  int 3
"ACS.exe"+1AA98D0: 48 8B 81 50 02 00 00     -  mov rax,[rcx+00000250]
"ACS.exe"+1AA98D7: F3 0F 10 40 2C           -  movss xmm0,[rax+2C]
"ACS.exe"+1AA98DC: C3                       -  ret
"ACS.exe"+1AA98DD: CC                       -  int 3
"ACS.exe"+1AA98DE: CC                       -  int 3
"ACS.exe"+1AA98DF: CC                       -  int 3
// ---------- INJECTING HERE ----------
"ACS.exe"+1AA98E0: 48 8B 81 B8 00 00 00     -  mov rax,[rcx+000000B8]
"ACS.exe"+1AA98E7: F3 0F 10 40 0C           -  movss xmm0,[rax+0C]
"ACS.exe"+1AA98EC: C3                       -  ret
"ACS.exe"+1AA98ED: CC                       -  int 3
// ---------- DONE INJECTING  ----------
"ACS.exe"+1AA98EE: CC                       -  int 3
"ACS.exe"+1AA98EF: CC                       -  int 3
"ACS.exe"+1AA98F0: 8B 81 04 02 00 00        -  mov eax,[rcx+00000204]
"ACS.exe"+1AA98F6: 33 D2                    -  xor edx,edx
"ACS.exe"+1AA98F8: 83 F8 FF                 -  cmp eax,-01
"ACS.exe"+1AA98FB: 0F 45 D0                 -  cmovne edx,eax
"ACS.exe"+1AA98FE: 48 8B 8C D1 70 01 00 00  -  mov rcx,[rcx+rdx*8+00000170]
}

{
// ORIGINAL CODE - INJECTION POINT: "ACS.exe"+11D7CE8

"ACS.exe"+11D7CD7: CC                       -  int 3
"ACS.exe"+11D7CD8: CC                       -  int 3
"ACS.exe"+11D7CD9: CC                       -  int 3
"ACS.exe"+11D7CDA: CC                       -  int 3
"ACS.exe"+11D7CDB: CC                       -  int 3
"ACS.exe"+11D7CDC: CC                       -  int 3
"ACS.exe"+11D7CDD: CC                       -  int 3
"ACS.exe"+11D7CDE: CC                       -  int 3
"ACS.exe"+11D7CDF: CC                       -  int 3
"ACS.exe"+11D7CE0: F3 0F 10 0D D4 6E F8 05  -  movss xmm1,[ACS.exe+715EBBC]
// ---------- INJECTING HERE ----------
"ACS.exe"+11D7CE8: 44 8B 41 6C              -  mov r8d,[rcx+6C]
"ACS.exe"+11D7CEC: 0F 57 C0                 -  xorps xmm0,xmm0
// ---------- DONE INJECTING  ----------
"ACS.exe"+11D7CEF: F3 48 0F 2C D1           -  cvttss2si rdx,xmm1
"ACS.exe"+11D7CF4: C6 41 31 00              -  mov byte ptr [rcx+31],00
"ACS.exe"+11D7CF8: 8B C2                    -  mov eax,edx
"ACS.exe"+11D7CFA: F3 48 0F 2A C0           -  cvtsi2ss xmm0,rax
"ACS.exe"+11D7CFF: F3 0F 5C C8              -  subss xmm1,xmm0
"ACS.exe"+11D7D03: F3 0F 59 0D 25 FA 94 01  -  mulss xmm1,[ACS.exe+2B27730]
"ACS.exe"+11D7D0B: F3 4C 0F 2C C9           -  cvttss2si r9,xmm1
"ACS.exe"+11D7D10: 45 85 C0                 -  test r8d,r8d
"ACS.exe"+11D7D13: 74 38                    -  je ACS.exe+11D7D4D
"ACS.exe"+11D7D15: 41 FF C8                 -  dec r8d
}
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>14555</ID>
                      <Description>"Set hour (0~24 hr)"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Float</VariableType>
                      <Address>pTimeOfDay</Address>
                      <Offsets>
                        <Offset>0</Offset>
                      </Offsets>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>14353</ID>
                          <Description>"Pause time (0/1)"</Description>
                          <Options moHideChildren="1"/>
                          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:&lt;Paused&gt;
1:Running
</DropDownList>
                          <ShowAsSigned>0</ShowAsSigned>
                          <Color>808080</Color>
                          <VariableType>Byte</VariableType>
                          <Address>pDayTimeMgr</Address>
                          <Offsets>
                            <Offset>B0</Offset>
                          </Offsets>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>14612</ID>
                              <Description>"Pause time (0/1)"</Description>
                              <Color>808080</Color>
                              <VariableType>Byte</VariableType>
                              <Address>pDayTimeMgr</Address>
                              <Offsets>
                                <Offset>21</Offset>
                                <Offset>B8</Offset>
                              </Offsets>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>91810</ID>
                      <Description>"Time Delay..."</Description>
                      <Options moHideChildren="1" moManualExpandCollapse="1" moDeactivateChildrenAsWell="1"/>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : ACS_Gold.exe
  Version: 
  Date   : 2023-07-21
  Author : Paul44

  In/decrease daytime's progress interval...
  &gt; one can also force time progress during specific missions/replays...
}

[ENABLE]
//
aobscanmodule(DayTimeDelay,$process,F3 0F 59 CE F3 0F 5E C8)
registersymbol(DayTimeDelay)
alloc(newmem2,$100)

// timer gets locked...
aobscanmodule(DayTimeLock,$process,88 48 21 F3 0F 11 B3 E0 01 00 00 0F 28 B4 24 80 00 00 00)
registersymbol(DayTimeLock)
alloc(newmem3,$100)


globalalloc(fTimeDelay,4)
globalalloc(bTimeForceDelay,1)

fTimeDelay:
dd 0

bTimeForceDelay:
db 0

label(code2)
label(return)
label(return2)
label(memCave)

// memCave...
$process+500:
memCave:
  jmp far newmem2
return2:
  jmp return
  align 8 CC

DayTimeDelay:
  jmp memCave
  nop 3
return:

// original script...
newmem2:
  mulss xmm1,xmm6
@@:
  push r15
  mov r15,fTimeDelay
  cmp dword ptr [r15],0
  je short code2
  movss xmm0,[r15]
code2:
  pop r15
  divss xmm1,xmm0
  jmp return2

// daytime lock...
label(code3)
label(return3)

newmem3:
  push r15
  mov r15,bTimeForceDelay
  cmp byte ptr [r15],1
  jne code3
  mov cl,0
code3:
  pop r15
  mov [rax+21],cl
  movss [rbx+000001E0],xmm6
  movaps xmm6,[rsp+00000080]
  jmp return3

DayTimeLock:
  jmp far newmem3
  nop 5
return3:


[DISABLE]

fTimeDelay:
dd 0

bTimeForceDelay:
db 0

DayTimeDelay:
  db F3 0F 59 CE F3 0F 5E C8

unregistersymbol(DayTimeDelay)
dealloc(newmem2)

DayTimeLock:
  db 88 48 21 F3 0F 11 B3 E0 01 00 00 0F 28 B4 24 80 00 00 00

unregistersymbol(DayTimeLock)
dealloc(newmem3)

{
// ORIGINAL CODE - INJECTION POINT: "ACS_Gold.exe"+19D5B3C

"ACS_Gold.exe"+19D5B15: 0F 29 74 24 30           -  movaps [rsp+30],xmm6
"ACS_Gold.exe"+19D5B1A: F3 0F 10 35 3A D6 1C 01  -  movss xmm6,[ACS_Gold.exe+2BA315C]
"ACS_Gold.exe"+19D5B22: 75 2A                    -  jne ACS_Gold.exe+19D5B4E
"ACS_Gold.exe"+19D5B24: 48 8B 89 B8 00 00 00     -  mov rcx,[rcx+000000B8]
"ACS_Gold.exe"+19D5B2B: 83 79 10 00              -  cmp dword ptr [rcx+10],00
"ACS_Gold.exe"+19D5B2F: 7F 1D                    -  jg ACS_Gold.exe+19D5B4E
"ACS_Gold.exe"+19D5B31: 80 79 21 00              -  cmp byte ptr [rcx+21],00
"ACS_Gold.exe"+19D5B35: 75 17                    -  jne ACS_Gold.exe+19D5B4E
"ACS_Gold.exe"+19D5B37: 45 84 C0                 -  test r8l,r8l
"ACS_Gold.exe"+19D5B3A: 75 12                    -  jne ACS_Gold.exe+19D5B4E
// ---------- INJECTING HERE ----------
"ACS_Gold.exe"+19D5B3C: F3 0F 59 CE              -  mulss xmm1,xmm6
"ACS_Gold.exe"+19D5B40: F3 0F 5E C8              -  divss xmm1,xmm0
// ---------- DONE INJECTING  ----------
"ACS_Gold.exe"+19D5B44: F3 0F 58 49 0C           -  addss xmm1,[rcx+0C]
"ACS_Gold.exe"+19D5B49: E8 D2 87 01 00           -  call ACS_Gold.exe+19EE320
"ACS_Gold.exe"+19D5B4E: 48 8B 8B B8 00 00 00     -  mov rcx,[rbx+000000B8]
"ACS_Gold.exe"+19D5B55: F3 0F 10 41 0C           -  movss xmm0,[rcx+0C]
"ACS_Gold.exe"+19D5B5A: 0F 2F C6                 -  comiss xmm0,xmm6
"ACS_Gold.exe"+19D5B5D: 72 36                    -  jb ACS_Gold.exe+19D5B95
"ACS_Gold.exe"+19D5B5F: F3 0F 5C C6              -  subss xmm0,xmm6
"ACS_Gold.exe"+19D5B63: 0F 2F C7                 -  comiss xmm0,xmm7
"ACS_Gold.exe"+19D5B66: 76 0B                    -  jna ACS_Gold.exe+19D5B73
"ACS_Gold.exe"+19D5B68: 0F 2F C6                 -  comiss xmm0,xmm6
}

{ daytime lock...
// ORIGINAL CODE - INJECTION POINT: ACS_Gold.exe+19FD860

ACS_Gold.exe+19FD835: F3 0F 5C C7              - subss xmm0,xmm7
ACS_Gold.exe+19FD839: 41 0F 2F C0              - comiss xmm0,xmm8
ACS_Gold.exe+19FD83D: F3 0F 11 83 00 02 00 00  - movss [rbx+00000200],xmm0
ACS_Gold.exe+19FD845: 72 10                    - jb ACS_Gold.exe+19FD857
ACS_Gold.exe+19FD847: B1 01                    - mov cl,01
ACS_Gold.exe+19FD849: EB 0E                    - jmp ACS_Gold.exe+19FD859
ACS_Gold.exe+19FD84B: 8B 83 D8 01 00 00        - mov eax,[rbx+000001D8]
ACS_Gold.exe+19FD851: 89 83 00 02 00 00        - mov [rbx+00000200],eax
ACS_Gold.exe+19FD857: 32 C9                    - xor cl,cl
ACS_Gold.exe+19FD859: 48 8B 83 B8 00 00 00     - mov rax,[rbx+000000B8]
// ---------- INJECTING HERE ----------
ACS_Gold.exe+19FD860: 88 48 21                 - mov [rax+21],cl
// ---------- DONE INJECTING  ----------
ACS_Gold.exe+19FD863: F3 0F 11 B3 E0 01 00 00  - movss [rbx+000001E0],xmm6
ACS_Gold.exe+19FD86B: 0F 28 B4 24 80 00 00 00  - movaps xmm6,[rsp+00000080]
ACS_Gold.exe+19FD873: F3 0F 11 AB E4 01 00 00  - movss [rbx+000001E4],xmm5
ACS_Gold.exe+19FD87B: F3 0F 11 A3 E8 01 00 00  - movss [rbx+000001E8],xmm4
ACS_Gold.exe+19FD883: 44 0F 29 8B F0 01 00 00  - movaps [rbx+000001F0],xmm9
ACS_Gold.exe+19FD88B: 44 0F 28 4C 24 50        - movaps xmm9,[rsp+50]
ACS_Gold.exe+19FD891: 44 0F 28 44 24 60        - movaps xmm8,[rsp+60]
ACS_Gold.exe+19FD897: 0F 28 7C 24 70           - movaps xmm7,[rsp+70]
ACS_Gold.exe+19FD89C: 48 81 C4 90 00 00 00     - add rsp,00000090
ACS_Gold.exe+19FD8A3: 5B                       - pop rbx
}
</AssemblerScript>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>92803</ID>
                          <Description>"Time Delay (default = 20~60)"</Description>
                          <VariableType>Float</VariableType>
                          <Address>fTimeDelay</Address>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>91409</ID>
                              <Description>"(lower is faster - higher is slower: 0.5~300)"</Description>
                              <LastState Value="" RealAddress="00000000"/>
                              <Color>FF0000</Color>
                              <GroupHeader>1</GroupHeader>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>92836</ID>
                          <Description>"Force Time"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>{ Game   : ACC_Win.exe
  Version: 
  Date   : 2023-05-18
  Author : Paul44

  This script does blah blah blah
}

[ENABLE]

bTimeForceDelay:
db 1

[DISABLE]

bTimeForceDelay:
db 0
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>92835</ID>
                          <Description>"System Info..."</Description>
                          <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
                          <LastState Value="" RealAddress="00000000"/>
                          <Color>808080</Color>
                          <GroupHeader>1</GroupHeader>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>92828</ID>
                              <Description>"Status Flag"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <Color>808080</Color>
                              <VariableType>4 Bytes</VariableType>
                              <Address>pTimeOfDay</Address>
                              <Offsets>
                                <Offset>4</Offset>
                              </Offsets>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>92845</ID>
                              <Description>"Midnigth Flag"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <Color>808080</Color>
                              <VariableType>4 Bytes</VariableType>
                              <Address>pTimeOfDay</Address>
                              <Offsets>
                                <Offset>8</Offset>
                              </Offsets>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>92826</ID>
                              <Description>"Multiplier (default = 1)"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <Color>808080</Color>
                              <VariableType>Float</VariableType>
                              <Address>pTimeOfDay</Address>
                              <Offsets>
                                <Offset>10</Offset>
                              </Offsets>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>92846</ID>
                              <Description>"Time Lock"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <Color>808080</Color>
                              <VariableType>Byte</VariableType>
                              <Address>pTimeOfDay</Address>
                              <Offsets>
                                <Offset>15</Offset>
                              </Offsets>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>91424</ID>
                              <Description>"System Time Delay (default= 20-24)"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <Color>808080</Color>
                              <VariableType>Float</VariableType>
                              <Address>pDayTimeMgr</Address>
                              <Offsets>
                                <Offset>180</Offset>
                              </Offsets>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>92837</ID>
                      <Description>"Wheather..."</Description>
                      <Options moHideChildren="1" moManualExpandCollapse="1" moDeactivateChildrenAsWell="1"/>
                      <LastState Value="" RealAddress="00000000"/>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>89556</ID>
                          <Description>"Precipitation (0~1)"</Description>
                          <ShowAsSigned>0</ShowAsSigned>
                          <VariableType>Float</VariableType>
                          <Address>pTimeOfDay</Address>
                          <Offsets>
                            <Offset>6C</Offset>
                          </Offsets>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>89558</ID>
                              <Description>"Precipitation 2"</Description>
                              <Options moHideChildren="1"/>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Float</VariableType>
                              <Address>+4</Address>
                              <CheatEntries>
                                <CheatEntry>
                                  <ID>89559</ID>
                                  <Description>"Pause time (0/1)"</Description>
                                  <Color>808080</Color>
                                  <VariableType>Byte</VariableType>
                                  <Address>pDayTimeMgr</Address>
                                  <Offsets>
                                    <Offset>21</Offset>
                                    <Offset>B8</Offset>
                                  </Offsets>
                                </CheatEntry>
                              </CheatEntries>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>89560</ID>
                          <Description>"Fog (0~1)"</Description>
                          <ShowAsSigned>0</ShowAsSigned>
                          <VariableType>Float</VariableType>
                          <Address>pTimeOfDay</Address>
                          <Offsets>
                            <Offset>94</Offset>
                          </Offsets>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>89196</ID>
                  <Description>"Experience &amp; Skills..."</Description>
                  <Options moHideChildren="1" moManualExpandCollapse="1" moDeactivateChildrenAsWell="1"/>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : ACU.exe
  Version:
  Date   : 2020-05-24
  Author : Paul44

  Collects Experience info...
}

[ENABLE]
{$lua}

-- PlayerProgressionManager...
getStaticAddr("C7 44 24 48 40 80 00 00 48",7,"pProgression",2)

{$asm}
 
 
[DISABLE]


{
// ORIGINAL CODE - INJECTION POINT: ACS_Gold.exe+AC147C

ACS_Gold.exe+AC1453: 57                       - push rdi
ACS_Gold.exe+AC1454: 41 54                    - push r12
ACS_Gold.exe+AC1456: 48 81 EC 68 02 00 00     - sub rsp,00000268
ACS_Gold.exe+AC145D: 48 89 58 08              - mov [rax+08],rbx
ACS_Gold.exe+AC1461: 48 89 68 10              - mov [rax+10],rbp
ACS_Gold.exe+AC1465: 48 89 70 20              - mov [rax+20],rsi
ACS_Gold.exe+AC1469: 4C 89 68 E8              - mov [rax-18],r13
ACS_Gold.exe+AC146D: 4C 89 70 E0              - mov [rax-20],r14
ACS_Gold.exe+AC1471: 4C 89 78 D8              - mov [rax-28],r15
ACS_Gold.exe+AC1475: 48 8B 05 FC 5A 61 06     - mov rax,[ACS_Gold.exe+70D6F78]
// ---------- INJECTING HERE ----------
ACS_Gold.exe+AC147C: C7 44 24 48 40 80 00 00  - mov [rsp+48],00008040
// ---------- DONE INJECTING  ----------
ACS_Gold.exe+AC1484: 48 8D 7C 24 50           - lea rdi,[rsp+50]
ACS_Gold.exe+AC1489: 48 89 7C 24 40           - mov [rsp+40],rdi
ACS_Gold.exe+AC148E: 0F B7 A8 92 01 00 00     - movzx ebp,word ptr [rax+00000192]
ACS_Gold.exe+AC1495: 48 8B 98 88 01 00 00     - mov rbx,[rax+00000188]
ACS_Gold.exe+AC149C: C1 E5 03                 - shl ebp,03
ACS_Gold.exe+AC149F: 45 32 E4                 - xor r12l,r12l
ACS_Gold.exe+AC14A2: 45 33 ED                 - xor r13d,r13d
ACS_Gold.exe+AC14A5: 48 03 EB                 - add rbp,rbx
ACS_Gold.exe+AC14A8: 44 8B F2                 - mov r14d,edx
ACS_Gold.exe+AC14AB: 4C 8B F9                 - mov r15,rcx
}

</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>89167</ID>
                      <Description>"(collect any collectible and/or FastTravel to update...)"</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>FF0000</Color>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>89176</ID>
                      <Description>"Skills Earned"</Description>
                      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pProgression</Address>
                      <Offsets>
                        <Offset>11C</Offset>
                        <Offset>0</Offset>
                        <Offset>188</Offset>
                      </Offsets>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>89177</ID>
                          <Description>"(# PlayerProgressionCharacterData)"</Description>
                          <ShowAsSigned>0</ShowAsSigned>
                          <Color>808080</Color>
                          <VariableType>2 Bytes</VariableType>
                          <Address>pProgression</Address>
                          <Offsets>
                            <Offset>192</Offset>
                          </Offsets>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>89201</ID>
                      <Description>"Experience Range (Jacob)"</Description>
                      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pProgression</Address>
                      <Offsets>
                        <Offset>124</Offset>
                        <Offset>0</Offset>
                        <Offset>188</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>89199</ID>
                      <Description>"Experience Range (Evie)"</Description>
                      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pProgression</Address>
                      <Offsets>
                        <Offset>124</Offset>
                        <Offset>8</Offset>
                        <Offset>188</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>89197</ID>
                      <Description>"Experience Range (Lydia)"</Description>
                      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pProgression</Address>
                      <Offsets>
                        <Offset>124</Offset>
                        <Offset>10</Offset>
                        <Offset>188</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>89169</ID>
                      <Description>"DLC Jack The Ripper"</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <ShowAsSigned>0</ShowAsSigned>
                      <GroupHeader>1</GroupHeader>
                      <Address>pProgression</Address>
                      <Offsets>
                        <Offset>0</Offset>
                        <Offset>20</Offset>
                      </Offsets>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>89170</ID>
                          <Description>"Skills Earned"</Description>
                          <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
                          <ShowAsSigned>0</ShowAsSigned>
                          <VariableType>4 Bytes</VariableType>
                          <Address>+11C</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>89172</ID>
                          <Description>"Experience Range (Evie)"</Description>
                          <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
                          <ShowAsSigned>0</ShowAsSigned>
                          <VariableType>4 Bytes</VariableType>
                          <Address>+124</Address>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>89180</ID>
                      <Description>"Experience Settings..."</Description>
                      <Options moDeactivateChildrenAsWell="1"/>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>FF00FF</Color>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>89000</ID>
                          <Description>"Experience Threshold"</Description>
                          <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
                          <ShowAsSigned>0</ShowAsSigned>
                          <VariableType>4 Bytes</VariableType>
                          <Address>pProgression</Address>
                          <Offsets>
                            <Offset>48</Offset>
                            <Offset>2B8</Offset>
                          </Offsets>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>89178</ID>
                          <Description>"Skill Multiplier"</Description>
                          <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
                          <ShowAsSigned>0</ShowAsSigned>
                          <VariableType>4 Bytes</VariableType>
                          <Address>pProgression</Address>
                          <Offsets>
                            <Offset>4C</Offset>
                            <Offset>2B8</Offset>
                          </Offsets>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>97460</ID>
                      <Description>"Level Thresholds (informational)"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : ACU.exe
  Version: 
  Date   : 2023-10-02
  Author : Paul44

  Experience thresholds...
}

[ENABLE]
{$lua}
local f = nil
local nChoice = 0
local sMsg = ''
local sInfo = ''
local sListItems
addrStruct = ''
strStruct = ''

  local addrProgress = getAddress('[pProgression]')
  local nTreshold =  readSmallInteger(addrProgress+0x15A)
  addrProgress = readPointer(addrProgress+0x150)
  --print(string.format('%X ~ %d  -  %X',addrProgress,nTreshold, readPointer(addrProgress+0x150)))

  sMsg = 'List Level Thresholds'
  sInfo = ''

     -- google: cheat engine Async exec Form invalid window handle
     synchronize(function()
         -- painting form...
         f = IconList
         f.Width = 400
         f.Height = 350
         f.Show()
         f.Caption = 'AC Unity - Level Thresholds...'
         local lBox = f.ListBox
         lBox.Clear()
         local lbTitle = f.IconTitle
         lbTitle.Caption = 'One moment please... processing...'
         local lbInfo = f.IconInfo
         lbInfo.Caption = ''
         local lbHead = f.IconHead
         lbHead.Caption = '  Level        Skills'
         local lbMsg = f.IconMessage
         lbMsg.Caption = "See Readme on how to manage \n and use this info..."
         --lbMsg.Visible = true
         local cbGod = f.GodMode
         f.GodMode.Caption  = 'God Mode:'
         -- hide info...
         f.pCoord.Visible = false
         f.Structure.Visible = false
         f.RecycleBin.Visible = false

         sInfo = string.format('Progression: %X ~ {%d}',addrProgress,nTreshold)

         f.IconTitle.Caption = sMsg
         f.IconInfo.Caption = sInfo
     end)

  for i=0,nTreshold-1 do
    local nPoints = readInteger(readPointer(addrProgress + i*8)+0x8)

    local sName = string.format('   %2d        %6d',i+1,nPoints)
    synchronize(function()
        f.ListBox.Items.add(sName)
    end)
  end


{$asm}
test al,al

[DISABLE]

</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>4</ID>
                  <Description>"Level Up..."</Description>
                  <Options moHideChildren="1" moManualExpandCollapse="1" moDeactivateChildrenAsWell="1"/>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : ACS.exe
  Version: 
  Date   : 2020-06-13
  Author : Paul44

  Allows you to edit player's current Level...
}

[ENABLE]
// static struct = MainSkillProgression
// level: +10
aobscanmodule(LevelUp,$process,48 8B 81 50 06 00 00 8B 40 10 C3 CC CC CC)
registersymbol(LevelUp)
alloc(newmem,$100)

label(code)
label(return)

newmem:
  push rbx
  push r15
  mov rbx,[rcx+00000650]
  mov r15,pLevelUp
  mov [r15],rbx
  pop r15
  pop rbx
code:
  mov rax,[rcx+00000650]
  mov eax,[rax+10]
  ret
  db CC CC CC
  jmp return

LevelUp:
  jmp far newmem
return:


[DISABLE]

LevelUp:
  db 48 8B 81 50 06 00 00 8B 40 10 C3 CC CC CC

unregistersymbol(LevelUp)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "ACS.exe"+A84A57

"ACS.exe"+A84A47: CC                                -  int 3 
"ACS.exe"+A84A48: CC                                -  int 3 
"ACS.exe"+A84A49: CC                                -  int 3 
"ACS.exe"+A84A4A: CC                                -  int 3 
"ACS.exe"+A84A4B: CC                                -  int 3 
"ACS.exe"+A84A4C: CC                                -  int 3 
"ACS.exe"+A84A4D: CC                                -  int 3 
"ACS.exe"+A84A4E: CC                                -  int 3 
"ACS.exe"+A84A4F: CC                                -  int 3 
// ---------- INJECTING HERE ----------
"ACS.exe"+A84A50: 48 8B 81 50 06 00 00              -  mov rax,[rcx+00000650]
"ACS.exe"+A84A57: 8B 40 10                          -  mov eax,[rax+10]
"ACS.exe"+A84A5A: C3                                -  ret 
"ACS.exe"+A84A5B: CC                                -  int 3 
"ACS.exe"+A84A5C: CC                                -  int 3
"ACS.exe"+A84A5D: CC                                -  int 3 
// ---------- DONE INJECTING  ----------
"ACS.exe"+A84A5E: CC                                -  int 3
"ACS.exe"+A84A5F: CC                                -  int 3 
"ACS.exe"+A84A60: B8 C0 91 DD DA                    -  mov eax,DADD91C0
"ACS.exe"+A84A65: C3                                -  ret 
"ACS.exe"+A84A66: CC                                -  int 3 
"ACS.exe"+A84A67: CC                                -  int 3 
"ACS.exe"+A84A68: CC                                -  int 3 
"ACS.exe"+A84A69: CC                                -  int 3 
}
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>14305</ID>
                      <Description>"(Level not saved ~ only allows you to craft/edit/wear above Level items)"</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>FF0000</Color>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14289</ID>
                      <Description>"Level"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pLevelUp</Address>
                      <Offsets>
                        <Offset>10</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>14633</ID>
                  <Description>"Freeze Mission Timer..."</Description>
                  <Options moHideChildren="1" moManualExpandCollapse="1" moDeactivateChildrenAsWell="1"/>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>14537</ID>
                      <Description>"(you can also increment 'Remaining time' ~ pause timer first !)"</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>FF0000</Color>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14471</ID>
                      <Description>"Freeze Mission Timer I..."</Description>
                      <Options moHideChildren="1" moManualExpandCollapse="1" moDeactivateChildrenAsWell="1"/>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : ACU.exe
  Version: 
  Date   : 2020-09-06
  Author : Paul44

  Manages mission timer(s)..
  - Seq 5 Mem 6 - The lady with the lamp: 8 min
  - Seq 7 Mem 2 - The bodyguard: 1 min
    (note: disable script once carriage is hijacked to allow continuation !)
  - ...
}

[ENABLE]
// struct: TimerOperatorData
// D0: flag timer pause ~ will continue in background!
aobscanmodule(MissionTimer,$process,74 09 4C 8B 81 C0 00 00 00 EB 0A 48 8B 81 C8 00 00 00)
registersymbol(MissionTimer)
alloc(newmem,$100)

globalalloc(pMissionTimer,8)
globalalloc(IntTimerDiffer,4)
globalalloc(bMissionTimer,1)

pMissionTimer:
dq 0

IntTimerDiffer:
dd 0

bMissionTimer:
db 0


label(code)
label(code2)
label(code3)
label(return)

newmem:
  je short @f
  mov r8,[rcx+000000C0]
  jmp code3
@@:
  mov rax,[rcx+000000C8]
  mov r8,[rax]
code3:
  mov rax,[rcx+000000B8]
@@:
  push rbx
  push rdi
  push r15
  // 2 records:
  //* first record manages main timer...
  //* 2nd one checks/gives warning "not reaching asylum in time"...
  test rcx,rcx
  je code
  mov r15,pMissionTimer
  cmp qword ptr [r15],0
  jne short @f
  mov [r15],rcx
@@:
  mov r15,bMissionTimer
  cmp byte ptr [r15],1
  jne code2
  mov ebx,[rcx+B8]
  mov rdi,[rcx+C8]
  mov edi,[rdi]
  mov r15,IntTimerDiffer
  cmp dword ptr [r15],0
  jne short @f
  sub ebx,edi
  mov r15,IntTimerDiffer
  mov [r15],ebx
@@:
  add edi,dword ptr [r15]
  mov [rcx+B8],edi
  jmp code
code2:
  mov r15,IntTimerDiffer
  mov dword ptr [r15],0
code:
  pop r15
  pop rdi
  pop rbx
  jmp return

MissionTimer:
  jmp far newmem
  db 90 90 90 90 90 90 90 90 90 90 90 90 90 90
return:


[DISABLE]

pMissionTimer:
dq 0

IntTimerDiffer:
dd 0

bMissionTimer:
db 0


MissionTimer:
  db 74 09 4C 8B 81 C0 00 00 00 EB 0A 48 8B 81 C8 00 00 00 4C 8B 00 48 8B 81 B8 00 00 00

unregistersymbol(MissionTimer)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ACS_Gold.exe+1053657

ACS_Gold.exe+1053647: CC                    - int 3
ACS_Gold.exe+1053648: CC                    - int 3
ACS_Gold.exe+1053649: CC                    - int 3
ACS_Gold.exe+105364A: CC                    - int 3
ACS_Gold.exe+105364B: CC                    - int 3
ACS_Gold.exe+105364C: CC                    - int 3
ACS_Gold.exe+105364D: CC                    - int 3
ACS_Gold.exe+105364E: CC                    - int 3
ACS_Gold.exe+105364F: CC                    - int 3
ACS_Gold.exe+1053650: 80 B9 D1 00 00 00 00  - cmp byte ptr [rcx+000000D1],00
// ---------- INJECTING HERE ----------
ACS_Gold.exe+1053657: 74 09                 - je ACS_Gold.exe+1053662
ACS_Gold.exe+1053659: 4C 8B 81 C0 00 00 00  - mov r8,[rcx+000000C0]
ACS_Gold.exe+1053660: EB 0A                 - jmp ACS_Gold.exe+105366C
ACS_Gold.exe+1053662: 48 8B 81 C8 00 00 00  - mov rax,[rcx+000000C8]
ACS_Gold.exe+1053669: 4C 8B 00              - mov r8,[rax]
ACS_Gold.exe+105366C: 48 8B 81 B8 00 00 00  - mov rax,[rcx+000000B8]
// ---------- DONE INJECTING  ----------
ACS_Gold.exe+1053673: 49 3B C0              - cmp rax,r8
ACS_Gold.exe+1053676: 73 04                 - jae ACS_Gold.exe+105367C
ACS_Gold.exe+1053678: 33 C0                 - xor eax,eax
ACS_Gold.exe+105367A: EB 03                 - jmp ACS_Gold.exe+105367F
ACS_Gold.exe+105367C: 49 2B C0              - sub rax,r8
}
</AssemblerScript>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>14473</ID>
                          <Description>"Timer"</Description>
                          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Running
1:Paused
</DropDownList>
                          <Color>FF00FF</Color>
                          <VariableType>Byte</VariableType>
                          <Address>bMissionTimer</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>14474</ID>
                          <Description>"Remaining Time"</Description>
                          <Color>000000</Color>
                          <VariableType>4 Bytes</VariableType>
                          <Address>IntTimerDiffer</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>14478</ID>
                          <Description>"Remaining Time (secs)"</Description>
                          <ShowAsSigned>0</ShowAsSigned>
                          <Color>808080</Color>
                          <VariableType>Float</VariableType>
                          <Address>pMissionTimer</Address>
                          <Offsets>
                            <Offset>9C</Offset>
                          </Offsets>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>87968</ID>
                          <Description>"More Info..."</Description>
                          <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
                          <LastState Value="" RealAddress="00000000"/>
                          <Color>808080</Color>
                          <GroupHeader>1</GroupHeader>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>14475</ID>
                              <Description>"Start-time (incrementing)"</Description>
                              <Color>808080</Color>
                              <VariableType>4 Bytes</VariableType>
                              <Address>pMissionTimer</Address>
                              <Offsets>
                                <Offset>0</Offset>
                                <Offset>C8</Offset>
                              </Offsets>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>14476</ID>
                              <Description>"End-time"</Description>
                              <Color>808080</Color>
                              <VariableType>4 Bytes</VariableType>
                              <Address>[pMissionTimer]+B8</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>14477</ID>
                              <Description>"Max Time limit (secs)"</Description>
                              <Color>808080</Color>
                              <VariableType>Float</VariableType>
                              <Address>[pMissionTimer]+98</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>14479</ID>
                              <Description>"Elapsed Time (secs)"</Description>
                              <Color>808080</Color>
                              <VariableType>Float</VariableType>
                              <Address>[pMissionTimer]+A0</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>14480</ID>
                              <Description>"Pause system flag (0=Pause/1=Continue)"</Description>
                              <Color>808080</Color>
                              <VariableType>Byte</VariableType>
                              <Address>[pMissionTimer]+D0</Address>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14653</ID>
                      <Description>"Freeze Mission Timer II..."</Description>
                      <Options moHideChildren="1" moManualExpandCollapse="1" moDeactivateChildrenAsWell="1"/>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : ACS.exe
  Version:
  Date   : 2020-09-29
  Author : Paul44

  Manages mission timer(s)..
  - Seq 8 Mem 3 - Fun and games: 2 min
  - Seq 8 Mem 4 - Final act: 1.30 min
  - ...
}

[ENABLE]
// struct: MissionTimedCondition
aobscanmodule(MissionTimer2,$process,74 09 48 8B 83 98 00 00 00 EB 0A 48 8B 83 A0 00 00 00 48 8B 00 48 8B)
registersymbol(MissionTimer2)
alloc(newmem,$100)

globalalloc(pMissionTimer2,8)
globalalloc(IntTimerDiffer2,4)
globalalloc(bMissionTimer2,1)

pMissionTimer2:
dq 0

IntTimerDiffer2:
dd 0

bMissionTimer2:
db 0


label(code)
label(code2)
label(code3)
label(return)

newmem:
  je short @f
  mov rax,[rbx+00000098]
  jmp code3
@@:
  mov rax,[rbx+000000A0]
  mov rax,[rax]
code3:
  mov rcx,[rbx+00000090]
@@:
  push rcx
  push rdi
  push r15
  test rbx,rbx
  je code
  mov r15,pMissionTimer2
  mov [r15],rbx
@@:
  mov r15,bMissionTimer2
  cmp byte ptr [r15],1
  mov r15,IntTimerDiffer2
  jne code2
  mov rcx,[rbx+90]
  mov rdi,[rbx+A0]
  mov rdi,[rdi]
  cmp [r15],0
  jne short @f
  sub rcx,rdi
  mov [r15],rcx
@@:
  add rdi,[r15]
  mov [rbx+90],rdi
  jmp code
code2:
  mov [r15],0
code:
  pop r15
  pop rdi
  pop rcx
  jmp return

MissionTimer2:
  jmp far newmem
  db 90 90 90 90 90 90 90 90 90 90 90 90 90 90
return:


[DISABLE]

pMissionTimer2:
dq 0

IntTimerDiffer2:
dd 0

bMissionTimer2:
db 0


MissionTimer2:
  db 74 09 48 8B 83 98 00 00 00 EB 0A 48 8B 83 A0 00 00 00 48 8B 00 48 8B 8B 90 00 00 00

unregistersymbol(MissionTimer2)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ACS_Gold.exe+18FF570

ACS_Gold.exe+18FF548: 74 12                 - je ACS_Gold.exe+18FF55C
ACS_Gold.exe+18FF54A: B0 01                 - mov al,01
ACS_Gold.exe+18FF54C: 48 8B 5C 24 30        - mov rbx,[rsp+30]
ACS_Gold.exe+18FF551: 48 8B 74 24 38        - mov rsi,[rsp+38]
ACS_Gold.exe+18FF556: 48 83 C4 20           - add rsp,20
ACS_Gold.exe+18FF55A: 5F                    - pop rdi
ACS_Gold.exe+18FF55B: C3                    - ret
ACS_Gold.exe+18FF55C: 40 38 BB B4 00 00 00  - cmp [rbx+000000B4],dil
ACS_Gold.exe+18FF563: 0F 85 A5 00 00 00     - jne ACS_Gold.exe+18FF60E
ACS_Gold.exe+18FF569: 40 38 BB A9 00 00 00  - cmp [rbx+000000A9],dil
// ---------- INJECTING HERE ----------
ACS_Gold.exe+18FF570: 74 09                 - je ACS_Gold.exe+18FF57B
ACS_Gold.exe+18FF572: 48 8B 83 98 00 00 00  - mov rax,[rbx+00000098]
ACS_Gold.exe+18FF579: EB 0A                 - jmp ACS_Gold.exe+18FF585
ACS_Gold.exe+18FF57B: 48 8B 83 A0 00 00 00  - mov rax,[rbx+000000A0]
ACS_Gold.exe+18FF582: 48 8B 00              - mov rax,[rax]
ACS_Gold.exe+18FF585: 48 8B 8B 90 00 00 00  - mov rcx,[rbx+00000090]
// ---------- DONE INJECTING  ----------
ACS_Gold.exe+18FF58C: 48 3B C8              - cmp rcx,rax
ACS_Gold.exe+18FF58F: 72 06                 - jb ACS_Gold.exe+18FF597
ACS_Gold.exe+18FF591: 48 8B F9              - mov rdi,rcx
ACS_Gold.exe+18FF594: 48 2B F8              - sub rdi,rax
ACS_Gold.exe+18FF597: 0F 57 C9              - xorps xmm1,xmm1
}
</AssemblerScript>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>14655</ID>
                          <Description>"Timer"</Description>
                          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Running
1:Paused
</DropDownList>
                          <Color>FF00FF</Color>
                          <VariableType>Byte</VariableType>
                          <Address>bMissionTimer2</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>14656</ID>
                          <Description>"Remaining Time"</Description>
                          <Color>000000</Color>
                          <VariableType>4 Bytes</VariableType>
                          <Address>IntTimerDiffer2</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>14660</ID>
                          <Description>"Remaining Time (secs)"</Description>
                          <ShowAsSigned>0</ShowAsSigned>
                          <Color>808080</Color>
                          <VariableType>4 Bytes</VariableType>
                          <Address>pMissionTimer2</Address>
                          <Offsets>
                            <Offset>BC</Offset>
                          </Offsets>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>87976</ID>
                          <Description>"More Info..."</Description>
                          <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
                          <LastState Value="" RealAddress="00000000"/>
                          <Color>808080</Color>
                          <GroupHeader>1</GroupHeader>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>14657</ID>
                              <Description>"Start-time (incrementing)"</Description>
                              <Color>808080</Color>
                              <VariableType>4 Bytes</VariableType>
                              <Address>pMissionTimer2</Address>
                              <Offsets>
                                <Offset>0</Offset>
                                <Offset>A0</Offset>
                              </Offsets>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>14658</ID>
                              <Description>"End-time"</Description>
                              <Color>808080</Color>
                              <VariableType>4 Bytes</VariableType>
                              <Address>[pMissionTimer2]+90</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>14659</ID>
                              <Description>"Max Time limit (secs)"</Description>
                              <Color>808080</Color>
                              <VariableType>Float</VariableType>
                              <Address>[pMissionTimer2]+B8</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>14662</ID>
                              <Description>"Reset (system flag (0=Reset/1)"</Description>
                              <Color>808080</Color>
                              <VariableType>Byte</VariableType>
                              <Address>[pMissionTimer2]+A8</Address>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14536</ID>
                      <Description>"Freeze Mission Timer III..."</Description>
                      <Options moHideChildren="1" moManualExpandCollapse="1" moDeactivateChildrenAsWell="1"/>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : ACU.exe
  Version:
  Date   : 2020-09-29
  Author : Paul44

  Manage mission timer(s)..
  - Seq 5 Mem 6 - The lady with the lamp: 1 min
  - ...

}

[ENABLE]
// MissionDisplayedTimerCondition: -90
// struct: EventListener: -48
aobscanmodule(ChronoTimer,$process,CC 80 79 21 00 74 06 48 8B 51 10 EB 07 48 8B 41 18)
registersymbol(ChronoTimer)
alloc(newmem,$100)

globalalloc(pChronoTimer,8)
globalalloc(IntChronoDiffer,4)
globalalloc(IntChronoSecs,4)
globalalloc(bChronoTimer,1)
globalalloc(intDiv,4)

IntChronoDiffer:
dd 0

bChronoTimer:
db 0

intDiv:
dd #30000                       //0x7530

label(code)
label(code2)
label(code3)
label(return)

newmem:
  je short @f
  mov rdx,[rcx+10]
  jmp code3
@@:
  mov rax,[rcx+18]
  mov rdx,[rax]
code3:
  mov rax,[rcx+08]
@@:
  push rax
  push rbx
  push rdx
  push rdi
  push r15
  test rcx,rcx
  je code
  mov r15,pChronoTimer
  mov [r15],rcx
  xor rax,rax
  xor rbx,rbx
  xor rdi,rdi
  mov ebx,[rcx+8]
  mov rdi,[rcx+18]
  mov edi,[rdi]
  sub ebx,edi
  // get remaining time in secs...
  mov eax,ebx
  xor rdx,rdx
  mov r15,intDiv
  div dword ptr [r15]
  mov r15,IntChronoSecs
  mov dword ptr [r15],eax
  // dis/enable pause...
  mov r15,bChronoTimer
  cmp byte ptr [r15],1
  jne code2
  mov r15,IntChronoDiffer
  cmp dword ptr [r15],0
  jne short @f
  mov dword ptr [r15],ebx
@@:
  add edi,[r15]
  mov [rcx+8],edi
  jmp code
code2:
  mov r15,IntChronoDiffer
  mov dword ptr [r15],0
code:
  pop r15
  pop rdi
  pop rdx
  pop rbx
  pop rax
  jmp return

ChronoTimer+05:
  jmp far newmem
  db 90 90 90 90 90
return:


[DISABLE]

bChronoTimer:
db 0

ChronoTimer+05:
  db 74 06 48 8B 51 10 EB 07 48 8B 41 18 48 8B 10 48 8B 41 08

unregistersymbol(ChronoTimer)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ACS_Gold.exe+20A584

ACS_Gold.exe+20A56D: 49 03 CB        - add rcx,r11
ACS_Gold.exe+20A570: 74 EE           - je ACS_Gold.exe+20A560
ACS_Gold.exe+20A572: 0F B6 41 0A     - movzx eax,byte ptr [rcx+0A]
ACS_Gold.exe+20A576: 48 8B 5C 24 08  - mov rbx,[rsp+08]
ACS_Gold.exe+20A57B: C3              - ret
ACS_Gold.exe+20A57C: CC              - int 3
ACS_Gold.exe+20A57D: CC              - int 3
ACS_Gold.exe+20A57E: CC              - int 3
ACS_Gold.exe+20A57F: CC              - int 3
ACS_Gold.exe+20A580: 80 79 21 00     - cmp byte ptr [rcx+21],00
// ---------- INJECTING HERE ----------
ACS_Gold.exe+20A584: 74 06           - je ACS_Gold.exe+20A58C
ACS_Gold.exe+20A586: 48 8B 51 10     - mov rdx,[rcx+10]
ACS_Gold.exe+20A58A: EB 07           - jmp ACS_Gold.exe+20A593
ACS_Gold.exe+20A58C: 48 8B 41 18     - mov rax,[rcx+18]
ACS_Gold.exe+20A590: 48 8B 10        - mov rdx,[rax]
ACS_Gold.exe+20A593: 48 8B 41 08     - mov rax,[rcx+08]
// ---------- DONE INJECTING  ----------
ACS_Gold.exe+20A597: 48 3B C2        - cmp rax,rdx
ACS_Gold.exe+20A59A: 73 04           - jae ACS_Gold.exe+20A5A0
ACS_Gold.exe+20A59C: 33 C0           - xor eax,eax
ACS_Gold.exe+20A59E: EB 03           - jmp ACS_Gold.exe+20A5A3
ACS_Gold.exe+20A5A0: 48 2B C2        - sub rax,rdx
}
</AssemblerScript>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>14538</ID>
                          <Description>"Timer"</Description>
                          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Running
1:Paused
</DropDownList>
                          <Color>FF00FF</Color>
                          <VariableType>Byte</VariableType>
                          <Address>bChronoTimer</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>14539</ID>
                          <Description>"Remaining Time"</Description>
                          <Color>000000</Color>
                          <VariableType>4 Bytes</VariableType>
                          <Address>IntChronoDiffer</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>14643</ID>
                          <Description>"Remaining Time (secs)"</Description>
                          <ShowAsSigned>0</ShowAsSigned>
                          <Color>808080</Color>
                          <VariableType>4 Bytes</VariableType>
                          <Address>pChronoTimer</Address>
                          <Offsets>
                            <Offset>34</Offset>
                          </Offsets>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>87977</ID>
                          <Description>"More Info..."</Description>
                          <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
                          <LastState Value="" RealAddress="00000000"/>
                          <Color>808080</Color>
                          <GroupHeader>1</GroupHeader>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>14540</ID>
                              <Description>"Start-time (incrementing)"</Description>
                              <Color>808080</Color>
                              <VariableType>4 Bytes</VariableType>
                              <Address>pChronoTimer</Address>
                              <Offsets>
                                <Offset>0</Offset>
                                <Offset>18</Offset>
                              </Offsets>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>14541</ID>
                              <Description>"End-time"</Description>
                              <Color>808080</Color>
                              <VariableType>4 Bytes</VariableType>
                              <Address>[pChronoTimer]+8</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>14543</ID>
                              <Description>"Max Time limit (secs)"</Description>
                              <Color>808080</Color>
                              <VariableType>Float</VariableType>
                              <Address>[pChronoTimer]+30</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>14546</ID>
                              <Description>"Remaining time (secs)"</Description>
                              <Color>808080</Color>
                              <VariableType>4 Bytes</VariableType>
                              <Address>IntChronoSecs</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>14544</ID>
                              <Description>"Reset (system flag  ~ 0=Reset/1)"</Description>
                              <Color>808080</Color>
                              <VariableType>Byte</VariableType>
                              <Address>[pChronoTimer]+20</Address>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>14671</ID>
                  <Description>"Perks..."</Description>
                  <Options moHideChildren="1" moManualExpandCollapse="1" moDeactivateChildrenAsWell="1"/>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : ACS_Steam.exe
  Version: 
  Date   : 2020-10-25
  Author : Paul44

  Get list of all perks...
}

[ENABLE]
// struct: AccomplishmentManager...
{$lua}
unregisterSymbol("pPerk")
if not getAddressSafe("pPerk") then registerSymbol("pPerk", allocateMemory(8)) end

getStaticAddr("0F B7 9E F2 04 00 00",7,"pPerk",2)


{$asm}

globalalloc(pPerkBChoice,1)

pPerkBChoice:
db 1

[DISABLE]


{
// ORIGINAL CODE - INJECTION POINT: "ACS_Steam.exe"+17A1A6B

"ACS_Steam.exe"+17A1A49: 48 83 C4 20           -  add rsp,20
"ACS_Steam.exe"+17A1A4D: 5F                    -  pop rdi
"ACS_Steam.exe"+17A1A4E: C3                    -  ret 
"ACS_Steam.exe"+17A1A4F: CC                    -  int 3 
"ACS_Steam.exe"+17A1A50: 48 89 5C 24 08        -  mov [rsp+08],rbx
"ACS_Steam.exe"+17A1A55: 48 89 6C 24 10        -  mov [rsp+10],rbp
"ACS_Steam.exe"+17A1A5A: 48 89 74 24 18        -  mov [rsp+18],rsi
"ACS_Steam.exe"+17A1A5F: 57                    -  push rdi
"ACS_Steam.exe"+17A1A60: 48 83 EC 20           -  sub rsp,20
"ACS_Steam.exe"+17A1A64: 48 8B 05 35 BB 9A 05  -  mov rax,[ACS_Steam.exe+714D5A0]
// ---------- INJECTING HERE ----------
"ACS_Steam.exe"+17A1A6B: 33 DB                 -  xor ebx,ebx
"ACS_Steam.exe"+17A1A6D: 41 0F B6 F0           -  movzx esi,r8l
// ---------- DONE INJECTING  ----------
"ACS_Steam.exe"+17A1A71: 0F B6 EA              -  movzx ebp,dl
"ACS_Steam.exe"+17A1A74: 48 8B F9              -  mov rdi,rcx
"ACS_Steam.exe"+17A1A77: 48 85 C0              -  test rax,rax
"ACS_Steam.exe"+17A1A7A: 75 16                 -  jne ACS_Steam.exe+17A1A92
"ACS_Steam.exe"+17A1A7C: BA 45 05 21 79        -  mov edx,79210545
"ACS_Steam.exe"+17A1A81: B9 C2 0B 00 00        -  mov ecx,00000BC2
"ACS_Steam.exe"+17A1A86: E8 95 70 4A 00        -  call ACS_Steam.exe+1C48B20
"ACS_Steam.exe"+17A1A8B: 48 89 05 0E BB 9A 05  -  mov [ACS_Steam.exe+714D5A0],rax
"ACS_Steam.exe"+17A1A92: 38 58 50              -  cmp [rax+50],bl
"ACS_Steam.exe"+17A1A95: 74 3C                 -  je ACS_Steam.exe+17A1AD3
}
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>14688</ID>
                      <Description>"Build Perks List..."</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">{ Game   : ACU.exe
  Version: 
  Date   : 2020-05-29
  Author : Paul44

  Gets list of Perks...
}

[ENABLE]

{$lua}
local f = nil
local nChoice = 0
local sMsg = ''
local sInfo = ''
local sListItems
addrStruct = ''
strStruct = ''



function getPerks()
  local addrPerk = getAddressSafe("[[[[pPerk]+0x3D0]+0x30]+0x198]")
  local nRecord = readSmallInteger(addrPerk+0x22)
  --print(string.format('%X  -  %d',addrPerk,nRecord))

  if ( addrPerk == 0 or addrPerk == nil) then
     local sText = "The 'check_Pointers' are not collected yet ! \n\n" ..
                  "Re-enable 'Perks...', and then return here..."
     local nType = mtInformation
     local nButton = mbOK
     messageDialog(sText, nType, nButton)
     return
  end

  sMsg = 'List Open Perks'
  if (nChoice == 2) then sMsg = 'List All Perks' end

  aStructGui = {'AC Syndicate - Edit Perk','Perk',550,300,false,320,250}
  aStructInfo = { {'Actual',0x70,vtDword,true}, {'Completed (= 0 &lt;~ 1)',0x8A,vtByte,true}, {'Total',0x74,vtDword,false},
                          {'Completed (= 3 &lt;~ 1)',0x1C,vtByte,false} }

       -- google: cheat engine Async exec Form invalid window handle
     synchronize(function()
         -- painting form...
         f = IconList
         f.Width = 750
         f.Height = 600
         f.Show()
         f.Caption = 'ACS - Managing Perks...'
         local lBox = f.ListBox
         lBox.Clear()
         local lbTitle = f.IconTitle
         lbTitle.Caption = 'One moment please... processing...'
         local lbInfo = f.IconInfo
         lbInfo.Caption = ''
         local lbHead = f.IconHead
         lbHead.Caption = '    #     addrPerk   addrChall   |   Actual   Total   Compl=3         xID   Descriptive'
         local lbMsg = f.IconMessage
         lbMsg.Caption = "See Readme on how to manage \n and use this info..."
         --lbMsg.Visible = true
         local cbGod = f.GodMode
         f.GodMode.Caption  = 'God Mode:'
         -- hide info...
         f.pCoord.Visible = false
         f.Structure.Visible = true
         f.RecycleBin.Visible = false

         lbInfo.Caption = string.format('[%d] PerkContainer: {%X +%X}',nRecord,addrPerk,0x18)
         f.IconTitle.Caption = sMsg
     end)


  addrPerk = readPointer(addrPerk +0x18)
  sListItems = createStringList()
  sListItems.beginUpdate()
  local nCount = 0
  for i=0,nRecord-1 do
      local addrPerk = readPointer(addrPerk + i*8)
      local xID = readQword(addrPerk+0x10)
      local addrAccompl = readPointer(readPointer(addrPerk+0x40))
      --print(string.format('%X - %X',addrPerk,addrAccompl))
      local nActual = readInteger(addrAccompl+0x70)
      local nTotal =  readInteger(addrAccompl+0x74)
      local bCompleted = readBytes(addrAccompl+0x1C,1)

      if ( nChoice == 2 or (nChoice == 1 and bCompleted &lt; 3) ) then
          local sDescr = ''
          -- details: check out [Tools ~ Errors &amp; Settings ~ Maintenance scripts ~ Scripts to run...]
          if not pcall(function() sDescr = getChallengeDescr(xID) end) then sDescr = '' end

          local sName = string.format('[%03d]: %010X-{%010X} |    %5d   %5d  |   %d   | %010X  &lt;%s&gt;   ',
                                                          nCount+1,addrPerk,addrAccompl,nActual,nTotal,bCompleted,xID,sDescr)
          sListItems.Text = sListItems.Text .. sName
          nCount = nCount +1
      end
      --print(sName)
      --break
  end

  synchronize(function()
      f.ListBox.Items.Text = sListItems.Text
  end)
  sListItems.endUpdate()
  sListItems.destroy()
end


nChoice = readBytes(getAddress("pPerkBChoice"))
if (nChoice &gt; 0 or nChoice &lt; 3) then getPerks() end

{$asm}
test al,al

pPerkBChoice:
db 1


[DISABLE]

</AssemblerScript>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>14689</ID>
                          <Description>"Allow To Run:"</Description>
                          <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
                          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:&lt;Disabled&gt;
1:List Open Perks
2:List All Perks
</DropDownList>
                          <Color>FF00FF</Color>
                          <VariableType>Byte</VariableType>
                          <Address>pPerkBChoice</Address>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>89414</ID>
                  <Description>"Gear List..."</Description>
                  <Options moManualExpandCollapse="1" moDeactivateChildrenAsWell="1"/>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">{ Game   : ACU.exe
  Version: 
  Date   : 2020-05-29
  Author : Paul44

  Buiild list all (inventory) items...
}

[ENABLE]

{$lua}
local f = nil
local nChoice = 0
local sMsg = ''
local sInfo = ''
local sListItems
addrStruct = ''
strStruct = ''

  -- collect base_chain to ecoset struct...
  getStaticAddr("48 8B F9 48 8B 9B 80 01 00 00",7,"pEcoSet")

--main routines...
function listItems()

  -- +150 +90 +2D8 +0 .. +20
  -- +208 +0 +3B8 +314 .. +500
  local addrEcoSet = getAddress("[[[[[[pEcoSet]]+0x208]]+0x3B8]+0x314]+0x500-0x20")
  local nRecord = readSmallInteger(addrEcoSet+0x2A)
  --print(string.format('%X - %d',addrEcoSet,nRecord))

  local sMsg = "List Active Gear Items"
  if (nChoice == 2) then sMsg = "List Unlock Gear Items" end
  if (nChoice == 3) then sMsg = "Special: Non-Active Gear Items" end
  if (nChoice == 9) then sMsg = "Special: Full Gear List" end

  synchronize(function()
      -- painting form...
      f = IconList
      f.Show()
      f.Width = 880
      f.Height = 600
      f.Caption = 'ACS - Item list...'
      local lBox = f.ListBox
      lBox.Clear()
      local lbTitle = f.IconTitle
      lbTitle.Caption = 'One moment please... processing...'
      local lbInfo = f.IconInfo
      lbInfo.Caption = ''
      local lbHead = f.IconHead
      lbHead.Caption = '    #   Offs     addrItem        UniqueID    ReverseID | Category |  Descriptive'
      local lbMsg = f.IconMessage
      lbMsg.Caption = "Best teleport while 'Map' is selected!\n" .. "(also make sure 'God Mode' is enabled)"
      local cbGod = f.GodMode
      f.GodMode.Caption  = 'God Mode:'
      f.pCoord.Visible = false
      f.Structure.Visible = false
      f.RecycleBin.Visible = false

      lbTitle.Caption = sMsg
      lbInfo.Caption = string.format('[%d] Inventory Items: {%X+%X}',nRecord,addrEcoSet,addrEcoSet+0x20)
  end)

    local bContinue = true
    local nCount = 0
    addrEcoSet = readPointer(addrEcoSet+0x20)
    sListItems = createStringlist()
    sListItems.beginUpdate()
    for i=0,nRecord-1 do
        local addrItem = readPointer(addrEcoSet + i * 8)
        local nCat = readInteger(addrItem + 0x8)
        local xID1 = readInteger(addrItem + 0xC)
        local xID2 = readQword(addrItem + 0x10)

        local sID2 = string.format('%X',xID2)
        local sTmp = ''
        for i = #sID2, 2, -2 do sTmp = sTmp .. string.sub(sID2,i-1,i) end
        sID2 = tonumber(sTmp,16)
        local itemDetail = readPointer(addrItem)
        local nVal1 = readInteger(itemDetail+0x1C)
        local nVal2 = readInteger(itemDetail+0x34)

        local xFlag1 = readInteger(itemDetail+0x38)
        local xFlag2 = readInteger(itemDetail+0x3C)

        local nCat2 = readInteger(itemDetail+0x28)
        local nCat3 = readInteger(itemDetail+0x2C)

        local sDescr = ''
        -- details: check out [Tools ~ Errors &amp; Settings ~ Maintenance scripts ~ Scripts to run...]
        if not pcall(function() sDescr = getChallengeDescr(xID2) end) then sDescr = '' end

        local bPrint = false
        if (nChoice == 1 and sDescr ~= '') then bPrint = true end
        if (nChoice == 2 and sDescr ~= '') then bPrint = true end
        if (nChoice == 3 and sDescr == '') then bPrint = true end
        if (nChoice == 9) then bPrint = true end

        if (bPrint) then
            local sName = ''
            if (nChoice == 2) then
                -- unlock("09095D4941000000")
                sName = string.format('unlock("%010X")     -- %s',sID2 ,sDescr)
            else
                sName = string.format('[%04d/%04X] {%12X} | %010X ~ %010X |   %2d %2d  | &lt;%s&gt;',
                                             nCount+1,i*8, addrItem, xID2, sID2, nCat2, nCat3 ,sDescr)
            end

            sListItems.Text = sListItems.Text .. sName
            if (nCount % 500 == 0) then
                synchronize(function()
                    f.ListBox.Items.Text = sListItems.Text
                end)
            end
            nCount = nCount + 1
        end
        --break
    end

    synchronize(function()
        f.ListBox.Items.Text = sListItems.Text
    end)
    sListItems.endUpdate()

    sListItems.destroy()
end -- list mapicons...

nChoice = readBytes(getAddress("bGearChoice"))
if (nChoice &gt; 0 and nChoice &lt; 4 or nChoice == 9) then listItems() end

{$asm}
test al,al


[DISABLE]

</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>89415</ID>
                      <Description>"Allow To Run:"</Description>
                      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:&lt;Disabled&gt;
1:Active Gear
2:Unlock Gear
3:Special Non-Active Gear
9:Special Full Gear
</DropDownList>
                      <ShowAsSigned>0</ShowAsSigned>
                      <Color>FF00FF</Color>
                      <VariableType>Byte</VariableType>
                      <Address>bGearChoice</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>13868</ID>
              <Description>"(pCameraManager)"</Description>
              <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
              <ShowAsHex>1</ShowAsHex>
              <Color>C0C0C0</Color>
              <VariableType>8 Bytes</VariableType>
              <Address>pCameraMgr</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>2207</ID>
                  <Description>"(Maximum Carriage Health)"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <Color>FF00FF</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>nCarHealthMax</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>97606</ID>
                  <Description>"Desync (= 1)"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <Color>FF00FF</Color>
                  <VariableType>Byte</VariableType>
                  <Address>pHealth</Address>
                  <Offsets>
                    <Offset>204</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>92052</ID>
                  <Description>"bUseGodmode"</Description>
                  <Options moHideChildren="1"/>
                  <ShowAsSigned>0</ShowAsSigned>
                  <Color>FF00FF</Color>
                  <VariableType>Byte</VariableType>
                  <Address>bUseGodmode</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>91292</ID>
                  <Description>"---------------"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>11832</ID>
                  <Description>"BhvAssassin ~ Base"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>000000</Color>
                  <VariableType>8 Bytes</VariableType>
                  <Address>pBhvAssassin</Address>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>87967</ID>
                      <Description>"bInvisible"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <Color>000000</Color>
                      <VariableType>Byte</VariableType>
                      <Address>bInvisible</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>13895</ID>
                  <Description>"CSrvPlayerHealth ~ Base"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>000000</Color>
                  <VariableType>8 Bytes</VariableType>
                  <Address>pHealth</Address>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>87966</ID>
                      <Description>"bGodmode"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <Color>000000</Color>
                      <VariableType>Byte</VariableType>
                      <Address>bGodmode</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14307</ID>
                      <Description>"Near Death (= 1)"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <Color>000000</Color>
                      <VariableType>Byte</VariableType>
                      <Address>pHealth</Address>
                      <Offsets>
                        <Offset>E8</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>92050</ID>
                      <Description>"(nFallId)"</Description>
                      <Options moHideChildren="1"/>
                      <ShowAsSigned>0</ShowAsSigned>
                      <Color>000000</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>nFallId</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>92054</ID>
                      <Description>"(nGodId)"</Description>
                      <Options moHideChildren="1"/>
                      <ShowAsSigned>0</ShowAsSigned>
                      <Color>000000</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>nGodId</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>384</ID>
                  <Description>"Entity ~ Base Address"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>000000</Color>
                  <VariableType>8 Bytes</VariableType>
                  <Address>pEntity</Address>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>13852</ID>
                      <Description>"PlayerID"</Description>
                      <Color>000000</Color>
                      <VariableType>Byte</VariableType>
                      <Address>[pEntity]+C0</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>11791</ID>
                  <Description>"InventoryDataItem ~ Base"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>000000</Color>
                  <VariableType>8 Bytes</VariableType>
                  <Address>pInventory</Address>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>14299</ID>
                      <Description>"InventoryCheck"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>000000</Color>
                      <VariableType>8 Bytes</VariableType>
                      <Address>pInventCheck</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>13835</ID>
                      <Description>"LogicalInventory ~ Base"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>000000</Color>
                      <VariableType>8 Bytes</VariableType>
                      <Address>[pInventory]+20</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>14318</ID>
                  <Description>"(UIMinimapMgr)"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>000000</Color>
                  <VariableType>8 Bytes</VariableType>
                  <Address>pUIMinimapMgr</Address>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>1336</ID>
                      <Description>"(UIMapCheck)"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>000000</Color>
                      <VariableType>8 Bytes</VariableType>
                      <Address>pUIMapCheck1</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14317</ID>
                      <Description>"(MapMarker)"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>000000</Color>
                      <VariableType>8 Bytes</VariableType>
                      <Address>pMapWayp</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>14329</ID>
                  <Description>"(FOV - base)"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>000000</Color>
                  <VariableType>8 Bytes</VariableType>
                  <Address>pFreeCam</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>26078</ID>
                  <Description>"UIMinimapManager"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>000000</Color>
                  <VariableType>8 Bytes</VariableType>
                  <Address>pUIMinimapMgr</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>26081</ID>
                  <Description>"(Show Icon List - Base)"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>000000</Color>
                  <VariableType>8 Bytes</VariableType>
                  <Address>pIconList</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14290</ID>
                  <Description>"MainSkillProgression - base"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>000000</Color>
                  <VariableType>8 Bytes</VariableType>
                  <Address>pLevelUp</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>87950</ID>
                  <Description>"Perks - Base"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <ShowAsSigned>0</ShowAsSigned>
                  <Color>000000</Color>
                  <VariableType>8 Bytes</VariableType>
                  <Address>pAccomplishm</Address>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>87954</ID>
                      <Description>"Perks VFT - Base"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <ShowAsSigned>0</ShowAsSigned>
                      <Color>000000</Color>
                      <VariableType>8 Bytes</VariableType>
                      <Address>pAccomplVFT</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>87953</ID>
                  <Description>"pLevelUp - Base"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <ShowAsSigned>0</ShowAsSigned>
                  <Color>000000</Color>
                  <VariableType>8 Bytes</VariableType>
                  <Address>pLevelUp</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14613</ID>
                  <Description>"TimeOfDayManager - Base"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>000000</Color>
                  <VariableType>8 Bytes</VariableType>
                  <Address>pDayTimeMgr</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>89189</ID>
                  <Description>"Biped Component..."</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <ShowAsSigned>0</ShowAsSigned>
                  <Color>000000</Color>
                  <VariableType>8 Bytes</VariableType>
                  <Address>pEntity</Address>
                  <Offsets>
                    <Offset>0</Offset>
                    <Offset>110</Offset>
                    <Offset>88</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>89185</ID>
                      <Description>"Collision flag..."</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Byte</VariableType>
                      <Address>+4A</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>89400</ID>
                  <Description>"pEcoSet..."</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <ShowAsSigned>0</ShowAsSigned>
                  <Color>000000</Color>
                  <VariableType>8 Bytes</VariableType>
                  <Address>pEcoSet</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>14481</ID>
                  <Description>"MissionDisplayedTimerCondition ~ Base"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>000000</Color>
                  <VariableType>8 Bytes</VariableType>
                  <Address>pMissionTimer</Address>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>14663</ID>
                      <Description>"MissionDisplayedTimerCondition ~ Base"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>000000</Color>
                      <VariableType>8 Bytes</VariableType>
                      <Address>pMissionTimer2</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14545</ID>
                      <Description>"(Chrono) - Base"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>000000</Color>
                      <VariableType>8 Bytes</VariableType>
                      <Address>pChronoTimer</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>97582</ID>
                  <Description>"BhvCarriage"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <ShowAsSigned>0</ShowAsSigned>
                  <Color>000000</Color>
                  <VariableType>8 Bytes</VariableType>
                  <Address>pBhvCarriage</Address>
                  <Offsets>
                    <Offset>18</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>97579</ID>
                  <Description>"pCarriageEntity..."</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <ShowAsSigned>0</ShowAsSigned>
                  <Color>000000</Color>
                  <VariableType>8 Bytes</VariableType>
                  <Address>pCarriageEntity</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>97583</ID>
                  <Description>"pBhvCarriage..."</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <ShowAsSigned>0</ShowAsSigned>
                  <Color>000000</Color>
                  <VariableType>8 Bytes</VariableType>
                  <Address>pBhvCarriage</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>1419</ID>
      <Description>"Errors &amp; Settings..."</Description>
      <Options moAlwaysHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <Color>008080</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>14852</ID>
          <Description>"Error Statistics..."</Description>
          <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>92864</ID>
              <Description>"&gt; Player Status"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>nCrash1</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>1421</ID>
              <Description>"&gt; Ship Status"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>nCrash2</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>1441</ID>
              <Description>"&gt; Map Waypoint"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>nCrash3</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>1449</ID>
              <Description>"&gt; Map Waypoint Teleport"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>nCrash4</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>1481</ID>
              <Description>"&gt; Teleport &amp; Coordinates"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>nCrash5</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>14780</ID>
          <Description>"Cheat table settings..."</Description>
          <Options moDeactivateChildrenAsWell="1"/>
          <LastState/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   :
  Version:
  Date   : 2020-10-22
  Author :

  Manage game-specific settings...
  (one must save the table manually to keep any changes permanently)
  Important note: one should NOT touch the 'Developer tools' section !
  (use at own risk and voids further support...)
}

[ENABLE]

globalalloc(bShowHideLua,1,$process)

bShowHideLua:
db 1


[DISABLE]

bShowHideLua:
db 1

</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>14828</ID>
              <Description>"(fill in your choices in the 'Description' field)"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <Color>FF0080</Color>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
            <CheatEntry>
              <ID>14825</ID>
              <Description>"(launches this browser w/ search_string from 'Info' button)"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <Color>FF0000</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>14875</ID>
                  <Description>"(fill in browser, without extension ~ do not change search string)"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <Color>FF0000</Color>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>14830</ID>
                  <Description>"msedge"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>14858</ID>
                  <Description>""google.com/search?q=fearless rev Assassin 7 Syndicate v1.5.1 Uplay Steam""</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>14826</ID>
              <Description>"(sets 'Compact View Mode' at startup: Compact (default) = 1 ~ Full View = 0)"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <Color>FF0000</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>14831</ID>
                  <Description>"1"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>14832</ID>
              <Description>"(sets background color - default =F6EEED)"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <Color>FF0000</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>14833</ID>
                  <Description>"F6EEED"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>14873</ID>
              <Description>"(fill in Game's EXE name, including extension, command parameters &amp; full pathname)"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <Color>FF0000</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>14867</ID>
                  <Description>"ACS.exe"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>14894</ID>
                  <Description>""</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>14881</ID>
                  <Description>""</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>14422</ID>
                  <Description>"(fill in full path for Report export location)"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <Color>FF0000</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>14423</ID>
                      <Description>"(or use: &lt;table&gt; ~ &lt;game&gt; variables)"</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>FF0000</Color>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14424</ID>
                      <Description>"&lt;game&gt;"</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>14862</ID>
              <Description>"(apply above changes to cheat table)"</Description>
              <LastState/>
              <Color>FF00FF</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   :
  Version:
  Date   : 2020-11-05
  Author :

  Has primarily visual effect on color change...
  color picker: google "HTML Color Picker W3Schools"
}

[ENABLE]
{$lua}
if syntaxcheck then return end
local mForm = getMainForm().frmAutoInject

-- button_name has changed since v7.x...
local sButton
if (tonumber(getCEVersion()) &lt; 7) then
    sButton = mForm.Button1.doClick
else
    sButton = mForm.btnExecute.doClick
end

sButton()
sButton()

--mForm.Component[3].doClick()
--mForm.Component[3].doClick()

local al = getAddressList()
sBrowser = al.getMemoryRecordByID(sBrowserID).Description .. '.exe'
sBrowserString = al.getMemoryRecordByID(sBrowserStringID).Description
sSearch = " ? " .. sBrowserString .. [[ &gt;nul 2&gt;nul]]


{$asm}
// disables script automatically by CE...
test al,al


[DISABLE]

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>14829</ID>
              <Description>"(you must save/reload the table to apply these settings permanently !)"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <Color>0000FF</Color>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
            <CheatEntry>
              <ID>14857</ID>
              <Description>"Developer tools... (do not use, unless at your own risk)"</Description>
              <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <Color>808000</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>26032</ID>
                  <Description>"(to keep/apply changes permanently, you must Save/Reload your table)"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <Color>FF00FF</Color>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>14849</ID>
                  <Description>"(game verification...)"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <Color>FF0000</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>14868</ID>
                      <Description>"(Check regularly (default) = 1 - AutoAttach once = 0)"</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>FF0000</Color>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>14874</ID>
                          <Description>"(Check also for similar game_name = 2 - No AutoAttach = 9)"</Description>
                          <LastState Value="" RealAddress="00000000"/>
                          <Color>FF0000</Color>
                          <GroupHeader>1</GroupHeader>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>14836</ID>
                          <Description>"2"</Description>
                          <LastState Value="" RealAddress="00000000"/>
                          <GroupHeader>1</GroupHeader>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14869</ID>
                      <Description>"(fill in Timer's Interval)"</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>FF0000</Color>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>14866</ID>
                          <Description>"3000"</Description>
                          <LastState Value="" RealAddress="00000000"/>
                          <GroupHeader>1</GroupHeader>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14859</ID>
                      <Description>"(verify AOB string &amp; memory_limit_range (= hexvalue) &amp; protectionflags)"</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>FF0000</Color>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>14860</ID>
                          <Description>"40 53 48 83 EC 20 48 83 79 18 10"</Description>
                          <LastState Value="" RealAddress="00000000"/>
                          <GroupHeader>1</GroupHeader>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>14861</ID>
                          <Description>"2000"</Description>
                          <LastState Value="" RealAddress="00000000"/>
                          <GroupHeader>1</GroupHeader>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>14897</ID>
                          <Description>"+X-C-W"</Description>
                          <LastState Value="" RealAddress="00000000"/>
                          <GroupHeader>1</GroupHeader>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14882</ID>
                      <Description>"(fill in Game's EXE name, incl ext &amp; full pathname: see above)"</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>FF0000</Color>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>14853</ID>
                  <Description>"(prompt to save any table design changes: No (default) = 0 ~ Yes = 1)"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <Color>FF0000</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>14854</ID>
                      <Description>"0"</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>14855</ID>
                  <Description>"(hide most elements in Lua Engine window: Yes (default) = 1 ~ No = 0)"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <Color>FF0000</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>14856</ID>
                      <Description>"0"</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>14883</ID>
                  <Description>"(Free Roam keyboard keys: F10-F12 ~ 2-4-6-8-7-9 ~ (unused))"</Description>
                  <Options moHideChildren="1"/>
                  <LastState Value="" RealAddress="00000000"/>
                  <Color>FF0000</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>14884</ID>
                      <Description>"0x79"</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14892</ID>
                      <Description>"0x7B"</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14891</ID>
                      <Description>"0x62"</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14890</ID>
                      <Description>"0x64"</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14889</ID>
                      <Description>"0x66"</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14888</ID>
                      <Description>"0x68"</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14887</ID>
                      <Description>"0x67"</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14886</ID>
                      <Description>"0x69"</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14885</ID>
                      <Description>"0x78"</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>14899</ID>
                  <Description>"(show Design submenu: No (default) = 0 ~ Yes = 1)"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <Color>FF0000</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>14900</ID>
                      <Description>"0"</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>26031</ID>
                      <Description>"(fill in full path for Dissect Code location ~ ignore process: No (default) = 0)"</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>FF0000</Color>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>26066</ID>
                          <Description>"(or use: &lt;table&gt; ~ &lt;game&gt; variables)"</Description>
                          <LastState Value="" RealAddress="00000000"/>
                          <Color>FF0000</Color>
                          <GroupHeader>1</GroupHeader>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>14033</ID>
                          <Description>"&lt;table&gt;"</Description>
                          <LastState Value="" RealAddress="00000000"/>
                          <GroupHeader>1</GroupHeader>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>14034</ID>
                          <Description>"0"</Description>
                          <LastState Value="" RealAddress="00000000"/>
                          <GroupHeader>1</GroupHeader>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>26065</ID>
                  <Description>"(Dissect Structure: engine  (values seperated by ~ |  see Special Scripts)"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <Color>FF0000</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>87949</ID>
                      <Description>"(Anvil = 1/UE3 = 2/UE4.2 = 3/UE4.1 = 4/Disabled = 99)"</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>FF0000</Color>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>14066</ID>
                      <Description>"1~0x30~0x18"</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>14901</ID>
                  <Description>"(show WindowMode menu option: No (default) = 0 ~ Yes = 1)"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <Color>FF0000</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>14902</ID>
                      <Description>"0"</Description>
                      <LastState Value="" RealAddress="00000000"/>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>14898</ID>
              <Description>"Maintenance scripts"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <Color>808000</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>14903</ID>
                  <Description>"Reset Lua Engine GUI"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   :
  Version: 
  Date   : 2020-11-02
  Author :

  Dis/enables menu in Lua Engine window (+ bottom part)
  Note: 'luaMenu' needs to be global in order to "keep/exchange" its pointer !
}

[ENABLE]
{$lua}

SwitchLuaGui()

{$asm}
test al,al

[DISABLE]
{$lua}


</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>14896</ID>
                  <Description>"Disable all cheats (using hotkey)"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   :
  Version: 
  Date   : 2020-11-02
  Author :

  Disables all scripts and locked values...
}

[ENABLE]
{$lua}

  local bAll = true
  if (isKeyPressed(VK_F11)) then bAll = false end

  DisableMainScript(bAll)

{$asm}
// disables script automatically by CE...
test al,al


[DISABLE]

</AssemblerScript>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Activate</Action>
                      <Keys>
                        <Key>17</Key>
                        <Key>123</Key>
                      </Keys>
                      <Description>Disable all cheat entries...</Description>
                      <ID>0</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Activate</Action>
                      <Keys>
                        <Key>17</Key>
                        <Key>122</Key>
                      </Keys>
                      <Description>Disable only locked values...</Description>
                      <ID>1</ID>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
                <CheatEntry>
                  <ID>26072</ID>
                  <Description>"Initialize Special Scripts"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   :
  Version:
  Date   : 2020-11-02
  Author :

  Runs any script, "linked" in Form(s)...
}

[ENABLE]
{$lua}
-- important: most/all functions here should/must be global...


-- dis/enable the "hover" functionality via 'Player Coordinates (writes~updates)' script...
-- is called by the ActivateTimer() function
-- *****************************************
local al = getAddressList()

-- used for Teleport routine...
local function getVK(nEnum)
  local n = tonumber(al.getMemoryRecordByID(nEnum).Description)
  return n
end

function DisableEntry(nID)
    if (nID == 0 or nID == nil) then return end
    local ScriptID = al.getMemoryRecordByID(nID)
    ScriptID.Active = false
end

-- restore start location coordinates [F12]...
local function RestoreOrigCoord(addrX,addrY,addrZ,addrEntity)
    local bInverseXY =  readBytes(getAddressSafe("bInverseXY"))
    local xOffsY,xOffsZ = 0x4,0x8
    if (bInverseXY == 1) then xOffsY,xOffsZ = 0x8,0x4 end

    local Zplus = readFloat(getAddress("ZstepdropHeight"))
    local addrOrig = getAddress("OrigCoord")
    --local structOffset = readInteger(getAddress("pStructCrdOffset"))
    --local addrCoord = readPointer(getAddress("pStructCrdBase")) + structOffset
    local addrCoord = addrEntity
        --print(string.format("%x",addrOrig))
        --print(string.format("%x",addrCoord))
        --print(structOffset)
    local Zvalue = readFloat(addrOrig+xOffsZ)+Zplus
    -- update [pStructCrdBase]+xx values...
    writeFloat(addrCoord,readFloat(addrOrig))
    writeFloat(addrCoord+xOffsY,readFloat(addrOrig+xOffsY))
    writeFloat(addrCoord+xOffsZ,Zvalue)
    -- update Xval,Yval,Zval values...
    writeFloat(addrX,readFloat(addrOrig))
    writeFloat(addrY,readFloat(addrOrig+xOffsY))
    writeFloat(addrZ,Zvalue)
end

function Flyhack(timer)
    -- ID mRecord FreeRoam - addrCoordinatesPlayer/Entity - addrYaw - offsYax1 - offsYaw2 - addrPitch - offsPitch... {1~7}
    -- debug yaw/pitch -  not_used - reversed yaw/pitch variansts... {8~10}
    local bInverseXY =  readBytes(getAddressSafe("bInverseXY"))
    local xOffsY,xOffsZ = 0x4,0x8
    if (bInverseXY == 1) then xOffsY,xOffsZ = 0x8,0x4 end

    local aInfo = aFlyInfo
    local addrEntity = aInfo[2]
    local addrYaw = aInfo[3]
    local addrPitch = aInfo[6]
    local bDebug = aInfo[8] or 0
    local nSwitch = aInfo[10] or 0
    if (addrPitch == 0 or addrPitch == nil) then return end
    -- get XY and Z-axis step value...
    local addrXYstep = getAddress("XYstepVal")
    local XYstep = readFloat(addrXYstep)
    local addrZstep = getAddress("ZstepVal")
    local Zstep = readFloat(addrZstep)

    local addrX = getAddress("Xval")
    local addrY = getAddress("Yval")
    local addrZ = getAddress("Zval")
    local XValue = readFloat(addrX)
    local YValue = readFloat(addrY)
    local ZValue = readFloat(addrZ)

    local fPitch = readFloat(addrPitch+aInfo[7])
    if (fPitch == nil) then return end
    local nYaw1 = -1
    local nYaw2 = 1
    if (nSwitch == 1) then nYaw2 = -1 end
    if (nSwitch == 2) then nYaw1 = 1 end
    if (nSwitch == 3) then nYaw1 = 1; nYaw2 = -1 end
    local yaw = math.atan2(nYaw1 * readFloat(addrYaw+aInfo[4]), nYaw2 * readFloat(addrYaw+aInfo[5])) * 180 / math.pi
    local pitch = math.asin(fPitch) * 180 / math.pi

    local z = math.cos(math.rad(90-pitch)) * Zstep

    local xVal = readFloat(addrEntity)
    local yVal = readFloat(addrEntity + xOffsY)
    local zVal = readFloat(addrEntity + xOffsZ)
    local nInverse = (pitch &gt;= 0) and 1 or -1

    -- using NUMpad keys to navigate...
    -- these keys also allow us to pass through "walls"... (noclip)
    -- also google: "cheat engine Virtual-Key Code"
    if isKeyPressed(getVK(14888)) then    -- VK_NUMPAD8
        local x = math.cos(math.rad(yaw)) * XYstep
        local y = math.sin(math.rad(yaw)) * XYstep
        XValue = xVal + x
        YValue = yVal - y
        ZValue = zVal + z
        writeFloat(addrX,XValue)
        writeFloat(addrY,YValue)
        writeFloat(addrZ,ZValue)

        if execRoutine ~= nil then
           execRoutine(sender)
        end
        if (bDebug &gt; 0) then print(string.format('Yaw: %f - Pitch: %f',yaw,pitch)) end
        if (bDebug &gt; 1) then
            print(string.format('X: %f - Y: %f - Z; %f',x,y,z))
            print(string.format('X: %f - Y: %f - Z; %f',xVal,yVal,zVal))
        end
    end
    if isKeyPressed(getVK(14891)) then    -- VK_NUMPAD2
        local x = math.cos(math.rad(yaw)) * XYstep
        local y = math.sin(math.rad(yaw)) * XYstep
        XValue = xVal - x
        YValue = yVal + y
        ZValue = zVal - z
        writeFloat(addrX,XValue)
        writeFloat(addrY,YValue)
        writeFloat(addrZ,ZValue)
    end
    if isKeyPressed(getVK(14890)) then    -- VK_NUMPAD4
        --print(string.format('Yaw - 4: %f',yaw-90))
        local yaw = yaw - 90
        local x = math.cos(math.rad(yaw)) * XYstep
        local y = math.sin(math.rad(yaw)) * XYstep
        XValue = xVal + x
        YValue = yVal - y
        writeFloat(addrX,XValue)
        writeFloat(addrY,YValue)
    end
    if isKeyPressed(getVK(14889)) then    -- VK_NUMPAD6
        local yaw = yaw + 90
        local x = math.cos(math.rad(yaw)) * XYstep
        local y = math.sin(math.rad(yaw)) * XYstep
        XValue = xVal + x
        YValue = yVal - y
        writeFloat(addrX,XValue)
        writeFloat(addrY,YValue)
    end
    if isKeyPressed(getVK(14887)) then    -- VK_NUMPAD7
        --print(string.format("%x",addrZ))
        ZValue = zVal + z * nInverse
        writeFloat(addrZ,ZValue)
    end
    if isKeyPressed(getVK(14886)) then    -- VK_NUMPAD9

        ZValue = zVal - z * nInverse
        writeFloat(addrZ,ZValue)
    end
    if isKeyPressed(getVK(14884)) then    -- VK_F10
        -- End "free roam" activity...
        -- stay/drop at current location coordinates...
        DisableEntry(aInfo[1])
        tmerFly.destroy()
    end
    if isKeyPressed(getVK(14892)) then    -- VK_F12
        -- restore start location coordinates...
        -- if not returning to originals, set dropheight higher...
        local bFreeChoice = readBytes(getAddress("bFreeChoice"))
        if (bFreeChoice == 1) then
            RestoreOrigCoord(addrX,addrY,addrZ,addrEntity)
            -- allow game some time to execute before quiting script
            -- allows to return through walls... in most cases
            sleep(500)
        end
        DisableEntry(aInfo[1])
        tmerFly.destroy()
    end
end

function Help()
    local sMessage = [[
 Use following function keys:
 F10 = End at current location
 F12 = End &amp; Restore original location

 Use NumPad keys [2-8] &amp; [4-6] to move about
 Use NumPad keys [7-9] to ascend &amp; descend respectively
 (normal move keys can not be used)

 FreeRoam preferably not used while in non-standing posture...
 Note: if not moving at first, press your move keys a few times.

 (see also [Readme] file)  ]]

    showMessage(sMessage)
end

-- nMr = mrID to disable ~ bAction = 0 = Save / = 1 = Restore ~ xOffset for free Camera...
function coordSaveRestore(bAction,addrCoord,nMr,nChoice,xOffset,nDropHeight)
    local bInverseXY =  readBytes(getAddressSafe("bInverseXY"))
    local xOffsY,xOffsZ = 0x4,0x8
    if (bInverseXY == 1) then xOffsY,xOffsZ = 0x8,0x4 end

    local nChoice = nChoice or 0
    local bAction = bAction or 0
    local addrCoord = addrCoord
    -- Free Roam or Free Camera...
    local xOffset = xOffset or readInteger(getAddress('pStructCrdOffset'))
    local nDropHeight = nDropHeight or readFloat(getAddress('nDropHeight'))
    local nHeight = readFloat(getAddress("ZstepdropHeight"))
    addrCoord = addrCoord + xOffset
    local addrOrigCoord = getAddress('OrigCoord')
    --print(string.format('%X + %X',addrCoord,xOffset))

    if (bAction == 0) then
        writeFloat(addrOrigCoord,readFloat(addrCoord))
        writeFloat(addrOrigCoord+xOffsY,readFloat(addrCoord+xOffsY))
        writeFloat(addrOrigCoord+xOffsZ,readFloat(addrCoord+xOffsZ))
    end
    if (bAction == 1 and nChoice ~= 0) then
        local xVal = readFloat(addrOrigCoord)
        local yVal = readFloat(addrOrigCoord+xOffsY)
        if not (xVal == 0 and yVal == 0) then
            writeFloat(addrCoord,readFloat(addrOrigCoord))
            writeFloat(addrCoord+xOffsY,readFloat(addrOrigCoord+xOffsY))
            writeFloat(addrCoord+xOffsZ,readFloat(addrOrigCoord+xOffsZ)+ nHeight + nDropHeight)
            if (nChoice == 1) then
                writeFloat(addrOrigCoord,0)
                writeFloat(addrOrigCoord+xOffsY,0)
                writeFloat(addrOrigCoord+xOffsZ,0)
            end
        end
    end

    local mr = getAddressList().getMemoryRecordByID(nMr)
    if (mr == nil) then return end
    local timerMr = createTimer(getMainForm())
    timerMr.Interval = 100
    timerMr.OnTimer = function(timer)
        mr.Active = false
        timerMr.destroy()
    end
end

-- game exe verification...
function GetMD5(nShowMsg)
    if ( process ~= nil ) then
        local intVal = 0
        -- calculate MD5 of PE header...
        local FileMD5 = md5memory(process,4096)
        local strMsg1,strMsg2
        strMsg1 = "You have attached [" .. process .. "]..."
        strMsg2 = "with following MD5 PE Header value: {" .. FileMD5 .. "}"
        if nShowMsg == 1 then
            showMessage(strMsg1 .. "\n\z" .. strMsg2)
        end
        --print('[',process,']')
        --print(FileMD5)
        --print(intVal)
        return intVal
    end
end

-- only needs to run once... ~ see below...
function getFNamePool()
    local aGameVals = SplitStr(structParams, "~")
    local sAOB = aGameVals[4]
    local nOffs = tonumber(aGameVals[5])
    --print(string.format('%s - %d',sAOB,nOffs))

    getStaticAddr(sAOB,nOffs,'pFnamePool')
end

-- getAnvil menu routine...
-- source info: #aSwedishMagyar @ FRF
-- ~ most/all AC titles...
-- google : ‘fearless AC 4: Black Flag ~ HowTo get data structure from its name’
function getAnvil(base)
    local gameOffsets = SplitStr(structParams, "~")
    local offs1 = tonumber(string.format('%X',gameOffsets[2]),16)
    local offs2 = tonumber(string.format('%X',gameOffsets[3]),16)
    local bSpecial = 0
    if (gameOffsets[4] ~= nil) then bSpecial = tonumber(string.format('%d',gameOffsets[4])) end
    if base == nil then return end
    --print(string.format('(base): %X',base))
    local name = nil
    local addrName = string.format('[[%X]+0x%X]',base,offs1)
    local getNameFunction = getAddressSafe(addrName)
    if getNameFunction == nil then return end
    --print(string.format('1. [%X] ~&gt; %X',base,getNameFunction))
    local sASM = disassemble(getNameFunction)
    local sAddr = string.find(sASM,"%?%?")
    if sAddr ~= nil then return end
    local sAddr = sASM:match("%[(.-)%]")
    if (bSpecial == 1) then sAddr = sASM:match(",(.*)") end
    if sAddr == nil then return end
    local addr = '[[' .. sAddr .. ']+'
    if (bSpecial == 1) then addr = '[' .. sAddr .. '+' end
    addr = getAddressSafe(addr .. string.format('%X',offs2)..']')
    if addr == nil then return end
    --print(string.format('2. %X ~ %X  |  %s',addr,offs2,sASM))
    name = readString(addr,100)
    --print(string.format('3. [%X] - %X ~ %s',base,getNameFunction,readString(addr,30,false)))
    return name
end

function getUE3(base,nRelease,nName)
    -- set a 'globalalloc(pFNamePool,8,$process)' in main script or place next 2 instructions in lua startup...
    -- unregisterSymbol("pFnamePool")
    -- if not getAddressSafe("pFnamePool") then registerSymbol("pFnamePool", allocateMemory(8)) end

    -- UE3 variant ~ get name via its ID...
    local base = base or 0
    local nRelease = nRelease or 1
    local nName = nName or 0

    local addrFName = getAddress('[pFnamePool]')
    if (readPointer(addrFName) == nil) then getFNamePool(); addrFName = getAddress('[pFnamePool]') end

    -- getUE2/3 routine ~ FNamePoolID_offset ~ FName_offset ~ FNamePool_address AOB search string ~ relative offset to AOB_Address
    local aGameVals = SplitStr(structParams, "~")
    local nNameID = tonumber(string.format('%X',aGameVals[2]),16)
    local nNameOffs = tonumber(string.format('%X',aGameVals[3]),16)

    local x64Bit = 0x4
    if targetIs64Bit() then x64Bit = 0x8 end
    local nNameEntries = readInteger(addrFName + x64Bit)
    if (nRelease == 2) then nNameEntries = 999999 end              -- needs to be identified somehow...?!
    --print(string.format('[%d]: %X/%X  =&gt;  %X/%d ... %X',nRelease,nNameID,nNameOffs,readPointer(addrFName),nNameEntries,base))

    local vfTable = nil
    if nName == 0 then
        if base == nil then return nil end
        vfTable = readPointer(base)
        if vfTable == nil then return nil end
        nName = readInteger(base + nNameID)
    end

    local nChunk = 0
    if (nName == nil or nName &gt; nNameEntries) then return nil end
    local addrChunk = readPointer(addrFName)
    if (nRelease == 2) then
       nChunk = nName &gt;&gt; 0xE                -- chunkIdx
       nName = (nName &amp; 0x3FFF)             -- offset within chunk
       addrChunk = readPointer(addrChunk + nChunk * x64Bit)
    end
    --print(string.format('[%X]/%d + %x',addrChunk, nChunk, nName))

    local sName = readString(readPointer(addrChunk + nName * x64Bit) + nNameOffs,100)
    if sName == nil then return nil end
    if ( string.len(sName) == 1) then sName = readString(readPointer(addrChunk + nName * x64Bit) + nNameOffs,255,true) end
    if sName == nil then return nil end

    return sName
end

function getUE41(base)
    local sName = getUE3(base,2)
    return sName
end

function getUE4(base)
    -- set a 'globalalloc(pFNamePool,8,$process)' in main script or place next 2 instructions in lua startup...
    -- unregisterSymbol("pFnamePool")
    -- if not getAddressSafe("pFnamePool") then registerSymbol("pFnamePool", allocateMemory(8)) end

    -- Author: #Razchek
    -- Google: 'Unreal v4.23+ "GNames" - FNamePool enumeration'  (~ unknowncheats.me forum)
    -- ***

    local addrFName = getAddress('[pFnamePool]')
    if (readPointer(addrFName) == nil) then getFNamePool(); addrFName = getAddress('[pFnamePool]') end

    -- getUE4 routine ~ FNameIndexID_offset ~ FNamePool_offset ~ FNamePool_address AOB search string ~ relative offset to AOB_Address
    local aGameVals = SplitStr(structParams, "~")
    local nNameID = tonumber(string.format('%X',aGameVals[2]),16)
    local nNameStart = tonumber(string.format('%X',aGameVals[3]),16)

    local key = readInteger(base + nNameID)
    --addrFName = addrFName + nNameStart
    local nNameEntries = 0               -- readInteger(addrFName + 0x4)
    --print(string.format('%d/%X  =&gt;  %X/%d ... %X',nNameID,nNameStart,addrFName,nNameEntries,base))

    local chunkOffset = key &gt;&gt; 16
    local nameOffset = readSmallInteger(base + nNameID)
    if(nameOffset == nil) then return nil end
    local namePoolChunk = readQword(addrFName + ((chunkOffset + 2) * 8))
    --print(string.format('%d ~&gt;  %X  ~&gt;  %d  =&gt; %X',chunkOffset,nNameID,nameOffset,namePoolChunk))

    local entryOffset = namePoolChunk + (2 * nameOffset)
    local nameEntry = readSmallInteger(entryOffset)
    if(nameEntry == nil) then return nil end
    local nameLength = nameEntry &gt;&gt; 6
    local sName = readString(entryOffset + 2, nameLength)
    --print(string.format('%X/%d  =&gt;  %s',entryOffset,nameLength,sName))

    return sName
end

function enableStructLookup()
    local gameOffsets = SplitStr(structParams, "~")
    local bStructEnabled = tonumber(string.format('%d',gameOffsets[1]))
    if aMenuEngine[bStructEnabled] then sMenuItem30 = aMenuEngine[bStructEnabled][1] end
    if (sGetnameMark == '') then
       --print(tostring(nNameLookupID))
       nNameLookupID = registerStructureNameLookup(aMenuEngine[bStructEnabled][2])
       --print(nNameLookupID)
       sGetnameMark = ' ✓'
       Getnamemenuitem.Caption = sMenuItem30 .. sGetnameMark
    else
       unregisterStructureNameLookup(nNameLookupID)
       sGetnameMark = ''
       Getnamemenuitem.Caption = sMenuItem30 .. sGetnameMark
    end
end -- end getAnvil menu routine...


-- game windowed....
-- check current window mode status
addrD3D = 0
local sMenuItem2 = 'Window Mode'
function CheckWindowMode()
    -- check if a process is attached...?
    if (getOpenedProcessID() == 0) then return end
    if addrD3D == nil or addrD3D == 0 then
       local bytes = "F7 DE 1B F6 33 C0"
       local memScanner = createMemScan(false)
       memScanner.setOnlyOneResult(true)
       memScanner.firstScan(
	           soExactValue,vtByteArray,rtRounded,bytes,nil,
	           0,0xFFFFFFFF,"+X-C-W",fsmNotAligned,"",true,false,false,false)
       memScanner.waitTillDone()
       addrD3D = memScanner.getOnlyResult()
       memScanner.destroy()
       -- to avoid erros when incorrect process has been selected...
       if addrD3D == nil or addrD3D == 0 then process = nil; memScanner.destroy(); return end
       addrD3D = addrD3D-0x7+0x3
       memScanner.destroy()
    end
    local bStatus = readBytes(readInteger(addrD3D))
    if (bWindowMode == 1) then
       if (bStatus == 0) then sWindowMark = ' ✓' else sWindowMark = '' end
       WinModemenuitem.Caption = sMenuItem2 .. sWindowMark
    end
end

function cycleWinMode()
    if (getOpenedProcessID() == 0) then return end
    -- 0 = windowed ~ 1 = fullscreen
    local bStatus = readBytes(readInteger(addrD3D))
    --print(string.format('%X + %d',readInteger(addrD3D),bStatus))
    if (bStatus == 0) then bStatus = 1; sWindowMark = '' else bStatus = 0; sWindowMark = ' ✓' end
    WinModemenuitem.Caption = sMenuItem2 .. sWindowMark
    writeBytes(readInteger(addrD3D),bStatus)
end -- end game windowed....

{$asm}
// disables script automatically by CE...
test al,al


[DISABLE]

</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>26071</ID>
                  <Description>"Run All Form Scripts"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   :
  Version:
  Date   : 2020-11-02
  Author :

  Runs any script, "linked" in Form(s)...
}

[ENABLE]
{$lua}
execStruct = nil
execRoutine = nil

function runFormScripts(sender)
  if syntaxcheck then return end
  --print(sender.Name)
  if (sender.Name == 'ListBox') then onSelectIcon(sender) end
  --if (sender.Name == 'IconTeleport') then TeleportToIcon(sender) end
  if (sender.Name == 'BtnTeleport') then TeleportToIcon(sender) end
  if (sender.Name == 'GodMode') then setGodmode(sender) end
  if (sender.Name == 'IconList') then setGodmode(sender,1) end
  if (sender.Name == 'Clipboard') then copyClipboard(sender) end
  if (sender.Name == 'Structure') then openStructure(sender) end
  if (sender.Name == 'RecycleBin') then removeRecycleBin(sender) end
end

-- onEvent Form routines...
function onSelectIcon(sender)
    if (sender.ItemIndex &lt; 0) then return end
    local f = sender.Parent
    if (f.ListBox.Items.Count &lt; 1) then return end
    local sCoord = sender.Items[sender.ItemIndex]

    -- see also openStructure()...
    addrStruct = sCoord:match("{(.-)}")
    if (addrStruct ~= nil) then addrStruct = string.gsub(addrStruct, '^%s*(.-)%s*$', '%1') end -- stackoverflow...
    --print('['.. addrStruct .. ']')
    strStruct = sCoord:match("&lt;(.-)&gt;")                       -- in case of descriptive (see Kena eg)
    if (strStruct ~= nil) then strStruct = string.gsub(strStruct, '^%s*(.-)%s*$', '%1') end

    if not (f.pCoord.Visible) then return end
    sCoord = sCoord:match("%|(.-)%|")
    local aCoord = SplitStr(sCoord,'~')

    local xCoord = f.CoordX
    xCoord.Caption = string.format('%9.3f',aCoord[1])
    local yCoord = f.CoordY
    yCoord.Caption = string.format('%9.3f',aCoord[2])
    local zCoord = f.CoordZ
    zCoord.Caption = string.format('%9.3f',aCoord[3])

    f.PlayerX.Caption = ''
    f.PlayerY.Caption = ''
    f.PlayerZ.Caption = ''
    --print(string.format('[%f] \t [%f] \t [%f]',tonumber(aCoord[1]),tonumber(aCoord[2]),tonumber(aCoord[3])))
end

function TeleportToIcon(sender)
  --local f = IconList
  local f = sender.Parent.Parent
  if not (f.pCoord.Visible) then return end
  local fHeight = readFloat(getAddress("ZstepdropHeight"))

  local xCoord = f.CoordX
  local yCoord = f.CoordY
  local zCoord = f.CoordZ
  if (xCoord.Caption == '' or yCoord.Caption == '' or zCoord.Caption == '') then return end

  -- enable godmode - freeroam...
  local al = getAddressList()
  local mr = al.getMemoryRecordByID(aTeleportInfo[2])
  mr.Active = true

  -- see AC2 for example (camera)...
  local sEntity,sCrdOffset = '[pEntity]','pStructCrdOffset'
  if (aTeleportInfo[3] ~= nil) then sEntity = aTeleportInfo[3] end
  if (aTeleportInfo[4] ~= nil) then sCrdOffset = aTeleportInfo[4] end

  local addrEntity = getAddressSafe(sEntity)
  local chkEntity = readPointer(addrEntity)
  local CrdOffset = readInteger(getAddressSafe(sCrdOffset))
  addrEntity = addrEntity + CrdOffset
  local nHeight = aTeleportInfo[1]
  --print(string.format('%X ~ %X',chkEntity,addrMapIcon))

  local zVal = tonumber(zCoord.Caption)+fHeight
  if (nHeight ~= 0) then zVal = math.max(zVal,nHeight) end
  --print(string.format('%f ~ %f ~ %f',fHeight,nHeight,zVal))

  local bInverseXY =  readBytes(getAddressSafe("bInverseXY"))
  local xOffsY,xOffsZ = 0x4,0x8
  if (bInverseXY == 1) then xOffsY,xOffsZ = 0x8,0x4 end

  -- see ACS - icon teleport... (no collision)
  if execRoutine ~= nil then
      aTeleportInfo = {fHeight,106,nil,nil,0}
      execRoutine(sender)
  end

  writeFloat(addrEntity+xOffsZ,zVal)
  writeFloat(addrEntity,tonumber(xCoord.Caption))
  writeFloat(addrEntity+xOffsY,tonumber(yCoord.Caption))

  if execRoutine ~= nil then
      aTeleportInfo = {fHeight,106,nil,nil,1}
      execRoutine(sender)
  end

  local bFreeRoam = readBytes(getAddressSafe("bFreeRoam"))
  if (bFreeRoam == 1) then
      local addrX = getAddress("Xval")
      local addrY = getAddress("Yval")
      local addrZ = getAddress("Zval")
      writeFloat(addrX,tonumber(xCoord.Caption))
      writeFloat(addrY,tonumber(yCoord.Caption))
      writeFloat(addrZ,zVal)

      -- see Kena for example (moveMode)...
      if execRoutine ~= nil then
         execRoutine(sender)
      end
  end

  f.PlayerX.Caption = xCoord.Caption
  f.PlayerY.Caption = yCoord.Caption
  f.PlayerZ.Caption = zCoord.Caption
end

function setGodmode(sender,nFocus)
    local f = sender
    if (f.Name == 'GodMode') then f = sender.Parent.Parent end
    if not (f.pCoord.Visible) or aTeleportInfo == nil then return end
    --if (f == nil) then return end
    local nFocus = nFocus or 0
    local cbGodmode = f.GodMode
    local al = getAddressList()
    local mr = al.getMemoryRecordByID(aTeleportInfo[2])
    if (nFocus == 0) then mr.Active = cbGodmode.Checked else cbGodmode.Checked = mr.Active end
end

function copyClipboard(sender)
  --print(sender.Parent.Name)
  local f = sender.Parent
  --local f = IconList
  local strList = createStringlist()
  strList.Text = f.IconTitle.Caption .. "\n\n" .. f.IconHead.Caption
  strList.Text = strList.Text .. f.ListBox.Items.Text
  writeToClipboard(strList.Text)
end

function openStructure(sender)
    if (strStruct == nil) then strStruct = '' end
    --print('['..addrStruct..']' .. strStruct)
    if (addrStruct == '' or addrStruct == nil) then return end

    -- for non-conform formlists/structs - eg: Styx 2/COD AW...
    if execStruct ~= nil then
        local result = execStruct(sender)
        if not (result) then return end
    end

    local nCount = getStructureCount()
    --local i
    for i=nCount-1,0,-1 do
        local oStruct = getStructure(i)
        if (oStruct.Name == aStructGui[2]) then oStruct.destroy(); break end
    end
    local oStruct = createStructure(aStructGui[2])
    -- 1=Name ~ 2=offset ~ 3=Vartype ~ 4=highlightColor ~ 5 = showAsHex | vtPointer_array
    -- 5 = child ~ must be array within array = { {rec1},{rec2},... }
    --print(string.format('%s',addrStruct))
    for i=1,#aStructInfo do
        local addrPtr = tonumber(addrStruct,16) + aStructInfo[i][2]
        local vType = aStructInfo[i][3]
        if ( vType ~= vtPointer or (vType == vtPointer and readPointer(addrPtr) ~= 0) ) then
            local e = oStruct.addElement()
            e.Name = aStructInfo[i][1]
            e.Offset = aStructInfo[i][2]
            e.Vartype = aStructInfo[i][3]
            if ( e.Vartype == vtPointer ) then
                --print(string.format('%X %X %d',tonumber(addrStruct,16)+e.Offset,e.Offset,e.Vartype))
                local oStruct = createStructure('subStruct')
                for j=1,#aStructInfo[i][5] do
                    local eSub = oStruct.addElement()
                    local aElem = aStructInfo[i][5][j]
                    eSub.Name = aElem[1]
                    eSub.Offset = aElem[2]
                    eSub.Vartype = aElem[3]
                    if (aElem[4]) then eSub.BackgroundColor = 0xEDEEF6 end
                end
                e.ChildStruct = oStruct
            end
            if (aStructInfo[i][4]) then e.BackgroundColor = 0xEDEEF6 end
            -- cheatengine Generate Memory Records From Structure
            if (aStructInfo[i][5]) then e.DisplayMethod = 'dtHexadecimal' end
        end
    end

    for i,v in ipairs(enumStructureForms()) do
        if ( v.Caption == aStructGui[1]) then v.Close() end
    end

    oStruct.addToGlobalStructureList()
    oForm = createStructureForm('0x' .. addrStruct, strStruct, oStruct.Name)
    -- 1=windowTitle ~ 2=structName ~ 3+4=windowWidth+Height ~ 5=showMenu ~ 6+7=columnWidth
    oForm.Caption = aStructGui[1]
    oForm.Width = aStructGui[3]
    oForm.Height = aStructGui[4]
    oForm.Menu = aStructGui[5]

    oForm.HeaderControl1.Sections[0].Text = '&lt;Offset&gt;'
    oForm.HeaderControl1.Sections[0].Width = aStructGui[6]
    oForm.HeaderControl1.Sections[1].Width = aStructGui[7]
    oForm.miExpandAll.doClick()

end

function removeRecycleBin(sender)
  local f = sender
  if (f.Name == 'RecycleBin') then f = sender.Parent end
  if (f.ListBox.Items.Count &lt; 1) then return end

  if execRoutine ~= nil then
      execRoutine(sender)
      return
  end
end

{$asm}
// disables script automatically by CE...
test al,al


[DISABLE]

</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>1</ID>
                  <Description>"Scripts to run per Timer interval"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   :
  Version:
  Date   : 2020-11-02
  Author :

  Add any scripts/functions/routines here that need to be run on a regular interval
  (current interval uses 'Timer's Interval')
}

[ENABLE]
{$lua}
  -- pcall ensures that no errors are reported prior to loading/enabling scripts in addresslist...
  --if not pcall(function() myFunction() end) then return end


-- author: #Sunbeam @Fearless Revolution.
-- (google: "Bypass integrity Unity fearlessRev Sunbeam")
--

function KillAntiDebug(oForm)
local f = oForm or nil

-- see main script... (aobscanmodules)
-- local addrAntiDebugOffs = getAddress("GameProtect") - getAddress("GameProcess")

--print(string.format('%X',addrAntiDebugOffs))
local addrKillAntiDebug = getAddress("bKillAntiDebug")
local bKillAntiDebug = readBytes(addrKillAntiDebug)

if bKillAntiDebug == 9 then return end

local addrAntiDebug = getAddress("[GameProtect]")

-- create a stringlist class object to hold future thread ids as strings
local tl = createStringlist()

-- fill the stringlist object with the threadlist of the currently opened process
getThreadList( tl )

-- before going into the loop, time for some declarations
-- we will make use of several APIs, hence CE needs to know their addresses; so..
local OpenThread = getAddressSafe( "OpenThread" )
local NtQueryInformationThread = getAddressSafe( "NtQueryInformationThread" )
local TerminateThread = getAddressSafe( "TerminateThread" )
local CloseHandle = getAddressSafe( "CloseHandle" )
-- note that I'm not checking any above in the next part of the code for NULLs
-- I really hope you're doing this after you've opened up ACU.exe in CE

-- do a quick search for "#define THREAD_ALL_ACCESS" on google and you will find what its value is
-- e.g.: https://bbs.pediy.com/thread-89713.htm
local THREAD_ALL_ACCESS = 0x001F03FF
-- we're going to use this with OpenThread

-- do a quick search for "#define ThreadQuerySetWin32StartAddress" on google and you will find what its value is
-- e.g.: https://stackoverflow.com/questions/24728979/ntqueryinformationthread-sometimes-fails-no-error-code
local ThreadQuerySetWin32StartAddress = 0x9
-- we're going to use this with NtQueryInformationThread

-- we'll use this in the loop to store the text-to-number converted thread id
local thread_id
-- we'll use this in the loop to store the handle to the thread
local thread_handle
-- we'll use this in the loop to store our NtQueryInformationThread result, the thread's Entry address
local dwStartAddress = allocateMemory( 0x1000 )
-- we'll use this to check NtQueryInformationThread's result
local nt_status

-- we'll need this in the loop, to check if the thread's Entry address matches the one we know
local module_base = getAddressSafe( process )
-- ACU.exe+275DE50 - E9 E5F11803           - jmp ACU.exe+58ED03A
local func_addr = addrAntiDebug
-- local func_addr = module_base + addrAntiDebugOffs
-- ACU = 0x275DE50  ~ ACS = 0x22F2CB0
-- can/will be different per game EXE...!
-- yes, the above will be most likely different in any other executable; replace it with the one you'd find based on my video tutorial

-- now we want to loop all list items, from first till last and..
f.IconTitle.Caption = 'Processing ' ..  tl.Count .. ' threads...'
--f.ListBox.Items.beginUpdate()
for i = 0, tl.Count-1 do
    local sName = string.format('[%2d ~ %2d]: ThreadID = %s',i+1,tl.Count,tl[i])
    synchronize(function()
        f.ListBox.Items.Add(sName)
        f.ListBox.ItemIndex = i
    end)
    -- print(sName)

  -- ..open each thread with THREAD_ALL_ACCESS parameter
  -- each string in the list needs to be converted to a number before being used
  thread_id = tonumber( tl[i], 16 ) -- no idea if you'd get ids past 0xFFFF; but just in case
  -- ..then we want to obtain a handle to the thread via OpenThread, using the id with THREAD_ALL_ACCESS privileges
  thread_handle = executeCodeEx( 0, nil, OpenThread, THREAD_ALL_ACCESS, 0, thread_id )
  -- according to this post on stackoverflow: https://stackoverflow.com/questions/3528111/how-to-find-the-entry-point-of-a-specific-thread-in-windows
  -- we can get the Entry of a thread using NtQueryInformationThread with ThreadQuerySetWin32StartAddress parameter; so..
  -- the API proto taken from some C++ code is: NTSTATUS ntStatus = NtQueryInformationThread(hThread, ThreadQuerySetWin32StartAddress, &amp;dwStartAddress, sizeof(DWORD), NULL);
  -- we're on x64, so we need QWORD instead of DWORD, meaning 8 bytes instead of 4; so sizeof(QWORD) == 0x8
  -- then we need a dwStartAddress; &amp; indicates this is where the information will be returned by the API, thus a buffer; that's why we allocated it up top
  -- time to run NtQueryInformationThread
  nt_status = executeCodeEx( 0, nil, NtQueryInformationThread, thread_handle, ThreadQuerySetWin32StartAddress, dwStartAddress, 0x8, 0 )
  -- the result should be NT_SUCCESS == 0x0; we want to skip any other statuses
  if nt_status == 0x0 then
    -- now we want to check if the thread Entry address is the one we're looking for, the one we KNOW
    if readQword( dwStartAddress ) == func_addr then
      -- if it's our address, then..
      -- ..terminate the thread based on thread_handle obtained in the loop from thread_id
      local t = executeCodeEx( 0, nil, TerminateThread, thread_handle, 0 )
      -- and close the current open handle before exiting 'for' loop
      executeCodeEx( 0, nil, CloseHandle, thread_handle )
      --showMessage( string.format( "VMProtect Integrity Check thread with id: 0x%X killed.", thread_id ) )
      sName = string.format("*** VMProtect Integrity Check thread with id: 0x%X killed. *** \n", thread_id)
      synchronize(function()
          f.ListBox.Items.Add('\n')
          f.ListBox.Items.Add(sName)
      end)
      --print(sName)
      --- ensures routine is run only once...
      writeBytes(addrKillAntiDebug,0x9)
      break
    end
  end
  -- then close the current open handle
  executeCodeEx( 0, nil, CloseHandle, thread_handle )
end

  local addrGame = getAddress(myGame)
  local nRange = getModuleSize(process)
  synchronize(function()
      f.ListBox.Items.Add('\n')
      f.ListBox.Items.Add('=&gt; You can close this window now...')
      f.ListBox.Items.Add('\n')
      f.ListBox.Items.Add(string.format(' &gt; GameEXE: %X + %d (%2.1f GB)',addrGame,nRange,nRange/2147483648))
  end)
--f.ListBox.Items.endUpdate()

-- clean-up the allocation
deAlloc( dwStartAddress )
-- end of KillAntiDebug()
end


function handleDeath()
 -- in dev ~ find struct similar to WorldTransitionManager ~ save/load/etc flag
end

-- see Time Delay...
function ForceTime()
  local addrTime = getAddress('[pTimeOfDay]')
  local bForce = readBytes(getAddress('bTimeForceDelay'))
  local fTimeDelay = readFloat(getAddress('fTimeDelay'))
  if bForce == 1 then
     --local fTimeFixed = readFloat(addrTime+0x10)
     local nStatus = readInteger(addrTime+0x4)
     --print(string.format('%9.2f - %d',fTimeFixed,nStatus))
     --if (fTimeFixed ~= 24 and nStatusthen ~= 0) then
     if (nStatus ~= 0) then
        --writeFloat(addrTime+0x10,24)
        writeInteger(addrTime+0x4,0)
     end
  end
end

ForceTime()

-- free roam health handling...
-- freeroom does not seem to update health... ?!
local bRoamEnd = readBytes(getAddress("bFreeRoam"))
if (bRoamEnd == 2) then
    local addrHealth = getAddress("[pHealth]")
    -- mght need a 2nd loop...
    if (readSmallInteger(addrHealth+0xE0) ~= 0) then
        local nId = readBytes(getAddress('bUseGodmode'))
        if nId == 0 then
            local mr = readInteger(getAddress("nGodId"))
            mr = getAddressList().getMemoryRecordByID(mr)
            mr.Active = false
        end
        writeBytes(getAddress('bFreeRoam'),0)
    end
    writeSmallInteger(addrHealth+0xE0,readSmallInteger(addrHealth+0xE4))
end


{$asm}
test al,al

[DISABLE]


</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>26073</ID>
                  <Description>"Data Container"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   :
  Version: 
  Date   : 2020-11-02
  Author :

  Initializes any variables needed within the table...
  (done for performance reasons)
}

[ENABLE]
{$lua}


-- used in Gear lists...
-- missing items taken from #translu's Unlocker table...
function getChallengeDescr(nID)
  local aDescrCh = {
[0x4243DC8A85] = {"(54 Bore) 1856 Revolver"},
[0x39F8932242] = {".38 Double Action"},
[0x736A1E44AC] = {"A Velvet Glove (J)"},
[0x4316828F26] = {"Adept Belt"},
[0x41495D0829] = {"Adept Cane-Sword"},
[0x41495D06FC] = {"Adept Kukri"},
[0x431682906D] = {"Aegis Cloak"},
[0x433C538191] = {"Ancient Kukri"},
[0x433C5382AF] = {"Angel's Knuckles"},
[0x433C5381EE] = {"Arbaaz Mir's Cane-Sword"},
[0x39F8931F43] = {"Assassin Gauntlet"},
[0x2E39C74A11] = {"Assassin Kukri"},
[0x41304A8662] = {"Baron Jordane's Finery"},
[0x4316828F2B] = {"Beer Collector Belt"},
[0x2393ECA580] = {"Beige"},
[0x6D81C9108C] = {"Beige (J)"},
[0x2393ECA57C] = {"Beige And Blue"},
[0x6D81C91090] = {"Beige And Blue (J)"},
[0x784B8822EA] = {"Belt Of Good And Evil"},
[0x2393ECA598] = {"Black"},
[0x6D81C9106C] = {"Black (J)"},
[0x4316828F27] = {"Black Death Belt"},
[0x431682906C] = {"Black Jack Cloak"},
[0x3F1079D8BA] = {"Black Leather Gauntlet"},
[0x41304A8664] = {"Blackguard's Suit"},
[0x784B882447] = {"Bloofer Lady Outfit"},
[0x41495D06FA] = {"Bold Eagle Kukri"},
[0x6D81C90FAB] = {"Bordeaux (J)"},
[0x5D6255A51A] = {"Bullseye Revolver"},
[0x433C53818D] = {"Ceremonial Kukri"},
[0x433C53820E] = {"Charles Dickens' Cane-Sword"},
[0x784B88230D] = {"Chronographic Piercer"},
[0x431682907A] = {"Cloak Of The People"},
[0x431682906E] = {"Cloak Of Victory"},
[0x784B8822EE] = {"Cloaking Cloak"},
[0x433C5381EA] = {"Copper Hammer Cane-Sword"},
[0x41495D0903] = {"Copper Love"},
[0x4316829072] = {"Country Cloak"},
[0x2393ECA590] = {"Crimson"},
[0x6D81C91074] = {"Crimson (J)"},
[0x4316829069] = {"Crimson Wing Cloak"},
[0x4316828F25] = {"Crossroad Belt"},
[0x41495D0908] = {"Crow's Strength"},
[0x433C5382C3] = {"Darbe's Bear Paw"},
[0x4316828F23] = {"Dark Leather Belt"},
[0x433C5382BB] = {"Death Knuckles"},
[0x41304A86BF] = {"Defender's Garb"},
[0x5D6255A512] = {"Demonic Revolver"},
[0x4243DC8A1E] = {"Derringer Pistol"},
[0x433C5382AB] = {"Dirty Knuckles"},
[0x433C53822D] = {"Dove Cane-Sword"},
[0x784B8822C7] = {"Dr. Daniel’S Garments"},
[0x784B882443] = {"Dr. Daniel’S Garments"},
[0x4316828F20] = {"Eagle Dive Belt"},
[0x4316829074] = {"Eagle Dive Cape"},
[0x4316828F28] = {"Eagle Splendor Belt"},
[0x433C5382BF] = {"Eagle's Splendor Knuckles"},
[0x433C538195] = {"Eagle's Splendor Kukri"},
[0x41304A86BA] = {"Edward"},
[0x39F8931F1E] = {"Elise"},
[0x431682906F] = {"Emerald Isle Cape"},
[0x41495D0905] = {"Engraved Knuckles"},
[0x41304A8661] = {"Ezio"},
[0x6601C6C665] = {"Fire Spitter (J)"},
[0x784B8822E6] = {"Fisticuffing Belt"},
[0x433C538229] = {"Flame Dragon Cane-Sword"},
[0x4316829070] = {"Flame Silk Cloak"},
[0x2393ECA588] = {"Forest Green"},
[0x6D81C91084] = {"Forest Green (J)"},
[0x6222B65E64] = {"From Kali With Love (J)"},
[0x2393ECA5A0] = {"Fuchsia"},
[0x6D81C91064] = {"Fuchsia (J)"},
[0x41495D0828] = {"Goddess Cane-Sword"},
[0x2393ECA58C] = {"Gold"},
[0x6D81C91080] = {"Gold (J)"},
[0x433C5381A1] = {"Gold Blessing Kukri"},
[0x433C538189] = {"Golden Kukri"},
[0x41495D0826] = {"Golden Lion Cane-Sword"},
[0x70CE3597E5] = {"Golden Palm Tree (J)"},
[0x4316829079] = {"Goldred Cloak"},
[0x41495D0906] = {"Great Old One's Caress"},
[0x2393ECA5A4] = {"Green"},
[0x6D81C9107C] = {"Green (J)"},
[0x4316828F1D] = {"Greenwood Belt"},
[0x433C5381AD] = {"Guard Kukri"},
[0x41304A8667] = {"Gunslinger Coat"},
[0x3F1079D8B7] = {"Hardened Leather Gauntlet"},
[0x433C53819D] = {"Henry's Kukri"},
[0x431682907D] = {"Hunter's Mantle"},
[0x41304A86C2] = {"Huntsman's Outfit"},
[0x784B882385] = {"Impaler Cane-Sword"},
[0x6D81C931A6] = {"Indian Brown (J)"},
[0x6D81C9319E] = {"Indian Dark (J)"},
[0x6D81C9316E] = {"Indian Emerald (J)"},
[0x433C539A01] = {"Industrial Gauntlet"},
[0x4316828F1C] = {"Initiate Belt"},
[0x41495D090A] = {"Initiate Knuckles"},
[0x41495D082B] = {"Initiate's Cane-Sword"},
[0x59343C806D] = {"Insidious Pistol (J)"},
[0x4316828F7A] = {"Iron Belt"},
[0x39F8931F42] = {"Iron Death Gauntlet"},
[0x433C5381A9] = {"Iron Kukri"},
[0x41495D0909] = {"Iron Manacles"},
[0x4316828F29] = {"Iron Scale Belt"},
[0x41495D0824] = {"Ivory And Jade Cane-Sword"},
[0x41495D06FD] = {"Ivory Kukri"},
[0x41495D0825] = {"Jade Dragon Cane-Sword"},
[0x39F8931F4E] = {"Jade Kukri"},
[0x41495D0904] = {"Jaw Tenderizer"},
[0x693C5511DB] = {"Jaw Tenderizer (J)"},
[0x431682906A] = {"Killer's Lace Cloak"},
[0x72DD1CAA0D] = {"Kiss The Hand (J)"},
[0x59343C8029] = {"Knuckle Sandwich (J)"},
[0x4316829078] = {"Lady Cyrielle's Shawl"},
[0x41304A86BD] = {"Lady Melyne's Gown"},
[0x59343C8099] = {"Lady Owers Gauntlet (J)"},
[0x431682907B] = {"Lady Vignola's Cloak"},
[0x4243DC8A89] = {"Lancaster 4-Barrels"},
[0x39F8931F3E] = {"Leather Belt"},
[0x3F1079D8B8] = {"Leather Gauntlet"},
[0x4316828F22] = {"Legendary Assassin Belt"},
[0x4316829077] = {"Legendary Assassin Cape"},
[0x1DAAEAF3D9] = {"Legendary Assassin Gauntlet"},
[0x41495D075A] = {"Legendary Assassin Kukri"},
[0x433C5381FE] = {"Light And Dark Cane-Sword"},
[0x4316829071] = {"Light And Dark Cloak"},
[0x433C5382B3] = {"Lion Claws"},
[0x433C5382B7] = {"Lord Jonathan's Retribution"},
[0x433C53820A] = {"Lord Pearson's Cane-Sword"},
[0x39F893223E] = {"M1877 'Lightning'"},
[0x4243DC8A8D] = {"M1877 'Thunderer'"},
[0x41304A8665] = {"Master Assassin"},
[0x41304A86BC] = {"Master Assassin"},
[0x4316828F2A] = {"Master Assassin's Belt"},
[0x41495D0902] = {"Master Assassin's Knuckles"},
[0x433C538199] = {"Master Assassin's Kukri"},
[0x433C5381A5] = {"Master Ruby Kukri"},
[0x41304A8663] = {"Maximum Dracula"},
[0x433C538212] = {"Mayan Cane-Sword"},
[0x4316828F2C] = {"Metal Web Belt"},
[0x2393ECA59C] = {"Midnight Blue"},
[0x6D81C91068] = {"Midnight Blue (J)"},
[0x41304A86C0] = {"Military Suit"},
[0x3F1079D8B9] = {"Mirage Gauntlet"},
[0x4243DC8A91] = {"Model 1 Revolver"},
[0x4243DC8A9D] = {"Model 3 Revolver"},
[0x598AE90003] = {"Model 3 Revolver (J)"},
[0x784B882311] = {"Nautilus Gauntlet"},
[0x433C5381FA] = {"Night Terror Cane-Sword"},
[0x39F8931F22] = {"Nighthawk Outfit"},
[0x41304A86BB] = {"Nightshade Cloak"},
[0x433C5382BF] = {"Eagle's Splendor"},
[0x41495D075A] = {"Legendary Assassin"},
[0x433C5381F6] = {"World's Greatest"},
[0x1DAAEAF3D9] = {"Legendary Assassin"},
[0x4243DC8A99] = {"The Mars"},
[0x4316828F22] = {"Legendary Assassin"},
[0x4316828F2B] = {"Beer Collector"},
[0x41304A8663] = {"Maximum Dracula"},
[0x41304A8662] = {"Baron Jordane's Finery"},
[0x431682906D] = {"Aegis Cloak"},
[0x41304A86C0] = {"Military Suit"},
[0x41304A86BE] = {"The Aegis"},
[0x41304A86BB] = {"Nightshade Cloak"},
[0x2393ECA560] = {"No Color"},
[0x4316828F79] = {"Noble Assassin Belt"},
[0x41495D082A] = {"Noble Cane-Sword"},
[0x41495D075C] = {"Obsidian Kukri"},
[0x433C538202] = {"Obsidian Lion Cane-Sword"},
[0x433C5381F2] = {"Ocean Cane-Sword"},
[0x4316829075] = {"Orange Silk Cloak"},
[0x431682906B] = {"Out Of The Blue Cloak"},
[0x41304A8666] = {"Outdoorsman Outfit"},
[0x431682907C] = {"Patchwork Cloak"},
[0x433C5382A3] = {"Pirate Knuckles"},
[0x4243DC8A48] = {"Pocket Pistol"},
[0x433C538185] = {"Ram's Kukri"},
[0x4316828F1F] = {"Reaper Belt"},
[0x431682907F] = {"Red Cloak"},
[0x6D81C931A2] = {"Red, White And Blue (J)"},
[0x433C539A09] = {"Redback Gauntlet"},
[0x3F1079D8BB] = {"Reinforced Gauntlet"},
[0x4316828F1B] = {"Rough And Tumble Belt"},
[0x4316829076] = {"Royal Cloak"},
[0x433C539A05] = {"Royal Gauntlet"},
[0x41495D06FB] = {"Ruby Kukri"},
[0x433C538206] = {"Runic Mayan Cane-Sword"},
[0x4316828F1E] = {"Sanguine Belt"},
[0x4316828F24] = {"Sassy Assassin Belt"},
[0x6F4B31E555] = {"Seam Buster (J)"},
[0x4243DC8A95] = {"Self-Loading Pistol Model 1868"},
[0x610C2A62E6] = {"Self-Loading Pistol Model 1868 (J)"},
[0x41495D075B] = {"Serrated Death"},
[0x39F8931E4E] = {"Simply Evie"},
[0x41304A8668] = {"Simply Jacob"},
[0x2E39C74A0D] = {"Single Action Army"},
[0x41495D0827] = {"Sir Lemay's Cane"},
[0x70CE35B42E] = {"Skull Kiss (J)"},
[0x433C5382A7] = {"Slynky's Fist"},
[0x4316828F21] = {"Spring-Heeled Jack Belt"},
[0x5D6255A516] = {"Stealth Revolver"},
[0x2393ECA594] = {"Steel Gray"},
[0x6D81C91070] = {"Steel Gray (J)"},
[0x41495D0907] = {"Steel Knuckles"},
[0x4316829073] = {"Stormy Night Cloak"},
[0x4316828F7B] = {"Suave Belt"},
[0x41304A86C1] = {"Suave Outfit"},
[0x2393ECA584] = {"Taupe"},
[0x6D81C91088] = {"Taupe (J)"},
[0x2393ECA55C] = {"Teal"},
[0x59343C80C5] = {"Templar Shoot-Out (J)"},
[0x41304A86BE] = {"The Aegis"},
[0x70CE359A0E] = {"The Censor (J)"},
[0x3F1079D8BE] = {"The Chimera"},
[0x784B8822F2] = {"The Count's Cloak"},
[0x784B8822CB] = {"The Creature's Rags"},
[0x3F1079D8C0] = {"The Devil's Handshake"},
[0x598AE91DBE] = {"The Devil's Handshake (J)"},
[0x4243DC8A99] = {"The Mars"},
[0x610C2A6473] = {"The Mars (J)"},
[0x784B882347] = {"The Rend Asunder"},
[0x59343C80DD] = {"The Ripper's Terror (J)"},
[0x59343C8041] = {"The Yard Glove (J)"},
[0x4316828F1A] = {"Thief Belt"},
[0x431682907E] = {"Thrifty Cloak"},
[0x2393ECA554] = {"Ubisoft Blue"},
[0x2393ECA412] = {"Violet"},
[0x6D81C90FA7] = {"Violet (J)"},
[0x784B88238D] = {"Vorpal Kukri"},
[0x784B882366] = {"Wallop Enhancer"},
[0x2393ECA558] = {"Wine"},
[0x6D81C91078] = {"Wine (J)"},
[0x433C5381F6] = {"World's Greatest Cane-Sword"},

[0x4741C94574] = {"Schematic Legendary Assassin Cape"},
[0x4741C94570] = {"Schematic Reinforced Gauntlet"},
[0x4741C9456C] = {"Schematic Black Leather Gauntlet"},
[0x436BD7E91A] = {"Schematic Mirage Gauntlet"},
[0x3F1079D8BC] = {"Schematic Iron Death Gauntlet"},
[0x39F8931F44] = {"Schematic Assassin Gauntlet"},
[0x3F1079D8BF] = {"Schematic The Devil's Handshake"},
[0x3F1079D8BD] = {"Schemamtic The Chimera"},
[0x1DAAEAFD46] = {"Schemamtic World's Greatest Cane-Sword"},
[0x1DAAEAFD48] = {"Schemamtic World's Greatest Cane-Sword"},
[0x1DAAEAFD49] = {"Schemamtic Aegis Cloak"},
[0x1DAAEAFD45] = {"Schemamtic Legendary Assassin Gauntlet"},
[0x4741C95FF6] = {"Schemamtic Legendary Assassin Kukri"},
[0x4741C9607C] = {"Schemamtic Legendary Assassin Belt"},
[0x4741C960D0] = {"Schemamtic Nightshade Cloak"},
[0x4741C960D4] = {"Schemamtic Maximum Dracula"},
[0x4741C960CC] = {"Schemamtic Baron Jordan's Finery"},
[0x44F01A36D0] = {"Schematic The Mars"},

[0x4741C94634] = {"Schemamtic Voltaic Bomb Upgrade I"},
[0x1DAAEAFD3F] = {"Schemamtic Large Bomb Pouch"},
[0x1DAAEAFD42] = {"Schemamtic Large Dart Pouch"},
[0x1DAAEAFD33] = {"Schemamtic Large Knife Pouch"},
[0x1DAAEAFD41] = {"Schemamtic Hallucinogenic Dart Upgrade II (***)"},
-- *** incl Medium Dart Pouch Upgrade ?
[0x1DAAEAFD32] = {"Schemamtic Large Bullet Pouch"},
[0x1DAAEAFD3E] = {"Schemamtic Smoke Bomb Upgrade II (*)"},
-- * incl Voltaic Bomb Upgrade II ?
[0x1DAAEAFD34] = {"Schemamtic Smoke Bomb Upgrade II (**)"},
-- ** if prev schema does not seem to work...
[0x1DAAEAFD43] = {"Schemamtic Throwing Knife Upgrade III"},
[0x3EA6F6C61D] = {"Schemamtic Medicine Efficacy II"},
[0x6E058B8546] = {"Schemamtic Hallucinogenic Dart Upgrade I"},

--Perks
[0x562CB232E1] = {"DOUBLE AIR ASSASSINATE"},
[0x562CB2331F] = {"WANTON DESTRUCTION"},
[0x562CB23400] = {"DOUBLE KILL"},
[0x562CB23402] = {"TRIPLE KILL"},
[0x562CB23404] = {"QUADRA KILL"},
[0x562CB23406] = {"COMBAT MASTERY"},
[0x562CB23408] = {"ABSOLUTELY STUNNING"},
[0x562CB2340C] = {"NO TOUCHBACKS"},
[0x562CB2340E] = {"HEADSHOT"},
[0x562CB23410] = {"LEDGE KILL"},
[0x562CB23412] = {"NEAR DEATH RECOVERY"},
[0x562CB23414] = {"MULTI-COUNTER KILL"},
[0x562CB23416] = {"FANCY MOVES"},
[0x562CB23418] = {"COUNTERSHOT"},
[0x562CB2341A] = {"BRACE FOR IMPACT"},
[0x562CB2341E] = {"ROAD RAGE"},
[0x562CB23434] = {"LONDON DRIFT"},
[0x562CB23436] = {"GONE LAWING"},
[0x562CB23438] = {"RIDING SHOTGUN"},
[0x562CB2343A] = {"DEATH BY ROOK"},
[0x562CB2343C] = {"COVER ASSASSINATE"},
[0x562CB23466] = {"SHOOT THE MESSENGER"},
[0x562CB23468] = {"ASSASSINATION"},
[0x562CB2346A] = {"ELECTRIFYING"},
[0x562CB2346C] = {"VANISH IN SMOKE"},
[0x562CB2346E] = {"KNIFE KILL"},
[0x562CB23470] = {"ZIPLINE ASSASSIN"},
[0x562CB23472] = {"VANISH"},
[0x5E44A067BE] = {"FLAWLESS FIGHTER"},

[0xAABBCCDDEE] = {"xxx"}

 }
  return aDescrCh[nID][1]
end


{$asm}
test al,al

[DISABLE]
{$lua}


</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>pBhvAssassin</Name>
      <Address>9B1D0020</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pEntity</Name>
      <Address>9B1D0010</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pHealth</Name>
      <Address>9B1D0030</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pInventory</Name>
      <Address>9B1D0040</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pSharedData</Name>
      <Address>052B0040</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pNotoriety</Name>
      <Address>052B0050</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bGodmode</Name>
      <Address>9B1D0060</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bInvisible</Name>
      <Address>9B1D0070</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bFullBreath</Name>
      <Address>052B0080</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>nCrash1</Name>
      <Address>9B1D0110</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>nCrash2</Name>
      <Address>9B1D0120</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>nCrash3</Name>
      <Address>9B1D0130</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>nCrash4</Name>
      <Address>9B1D0140</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>nCrash5</Name>
      <Address>052B00D0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pStructCrdBase</Name>
      <Address>9B1D0150</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pStructCrdOffset</Name>
      <Address>9B1D0160</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pCheckTools</Name>
      <Address>052B0100</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pCheckIcons</Name>
      <Address>052B0110</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pCheckViewP</Name>
      <Address>052B0120</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pAccomplishm</Name>
      <Address>9B1D0250</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pAccomplVFT</Name>
      <Address>9B1D0260</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pNavalShipPlayer</Name>
      <Address>203C0150</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bInvisibleShip</Name>
      <Address>203C0160</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bShowHideLua</Name>
      <Address>05280150</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pFreeRoam</Name>
      <Address>052B0150</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>AddrListID</Name>
      <Address>052B0160</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>OrigCoord</Name>
      <Address>9B1D02F0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>XYstepVal</Name>
      <Address>9B1D0300</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ZstepVal</Name>
      <Address>9B1D0310</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ZstepdropHeight</Name>
      <Address>9B1D0320</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Xval</Name>
      <Address>9B1D0330</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Yval</Name>
      <Address>9B1D0340</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Zval</Name>
      <Address>9B1D0350</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bInit</Name>
      <Address>052B01E0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bInit2</Name>
      <Address>052B01F0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bFreeRoam</Name>
      <Address>9B1D0360</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>FOVCam</Name>
      <Address>9D3903A0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pMapWayp</Name>
      <Address>9B1D02C0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>nDropHeight</Name>
      <Address>9B1D02D0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>nChoice</Name>
      <Address>05280160</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pDayTimeMgr</Name>
      <Address>9D390400</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pDTime</Name>
      <Address>05290160</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pMissionTimer2</Name>
      <Address>9A8E0480</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>IntTimerDiffer2</Name>
      <Address>9A8E0490</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bMissionTimer2</Name>
      <Address>9A8E04A0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pMissionTimer</Name>
      <Address>9A8E04B0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>IntTimerDiffer</Name>
      <Address>9A8E04C0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bMissionTimer</Name>
      <Address>9A8E04D0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pAddrPerk</Name>
      <Address>1EFD0240</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pPerkBChoice</Name>
      <Address>9D390430</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pCameraMgr</Name>
      <Address>9B1D0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pInventCheck</Name>
      <Address>9B1D0050</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pEcoSet</Name>
      <Address>9B1D0080</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>nFallId</Name>
      <Address>9B1D0090</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>nGodId</Name>
      <Address>9B1D00A0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bUseGodmode</Name>
      <Address>9B1D00B0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pUIMinimapMgr</Name>
      <Address>9B1D00C0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pUIMapCheck1</Name>
      <Address>9B1D00D0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pLevelUp</Name>
      <Address>9B1D00E0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pFloat</Name>
      <Address>9B1D00F0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pSpeedSystem</Name>
      <Address>9B1D0100</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>tInventory</Name>
      <Address>9B1D0170</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pTimeOfDay</Name>
      <Address>9B1D0240</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bGearChoice</Name>
      <Address>9B1D0270</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bInverseXY</Name>
      <Address>9B1D02A0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pProgression</Name>
      <Address>9B1D02B0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bDropHigh</Name>
      <Address>9B1D02E0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pCamera</Name>
      <Address>9B1D0370</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bCoordSave</Name>
      <Address>9B1D0380</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>nFrameSpeed</Name>
      <Address>9B1D0390</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bCoordRestore</Name>
      <Address>9B1D03A0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pIconList</Name>
      <Address>9D3903C0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pBipedComp</Name>
      <Address>9D3903D0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pIconBChoice</Name>
      <Address>9D3903E0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pIconLChoice</Name>
      <Address>9D3903F0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fTimeDelay</Name>
      <Address>9D390410</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bTimeForceDelay</Name>
      <Address>9D390420</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pFreeCam</Name>
      <Address>9D390390</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fSpeed</Name>
      <Address>006E03A0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pChronoTimer</Name>
      <Address>9A8E0430</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>IntChronoDiffer</Name>
      <Address>9A8E0440</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>IntChronoSecs</Name>
      <Address>9A8E0450</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bChronoTimer</Name>
      <Address>9A8E0460</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>intDiv</Name>
      <Address>9A8E0470</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pUniverse</Name>
      <Address>24C0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pProgressMgr</Name>
      <Address>2590000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pPerk</Name>
      <Address>1EC90000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fSpeed1</Name>
      <Address>02370000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pRaceCarriage</Name>
      <Address>9ACD0390</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pCarriageEntity</Name>
      <Address>9B1D03B0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pBhvCarriage</Name>
      <Address>9B1D03C0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>nCarHealthMax</Name>
      <Address>9B1D0280</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bCarHitKill</Name>
      <Address>9B1D0290</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bKillAntiDebug</Name>
      <Address>170FC0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>GameProtect</Name>
      <Address>170FD0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pGameProtect1</Name>
      <Address>170FE0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pGameProtect2</Name>
      <Address>170FF0000</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <LuaScript>-- You must accept to execute
-- the script !
-- If not, the CE table
-- will return errors...


-- will auto-attach the game; even when table is loaded first...
-- place this at start/common part of lua script
-- will run ONLY once when CE table is loaded
-- when changing process, you must reload table or function !
--local myGame = "&lt;game&gt;.exe"
--local aalist=getAutoAttachList()
--stringlist_add(aalist,myGame)


-- *** still ToDo: ***
-- 'modal window' kicks in after X secs: stop checkTimer and report "game not found"


-- general settings:
local al = getAddressList()
local mForm = getMainForm()

-- will auto-attach the game; even when table is loaded first...
myGameID = 14867
myGame = al.getMemoryRecordByID(myGameID).Description
local myPathID = 14881
myPath = al.getMemoryRecordByID(myPathID).Description
local sGameParams = al.getMemoryRecordByID(14894).Description
-- ID main script ~ disabled upon re-attaching...
local getMrByID = al.getMemoryRecordByID
local mrMainScript = getMrByID(1993)

-- add 'Window Mode' to the [Tools] menu... ACBF only (for now)...
bWindowMode = tonumber(al.getMemoryRecordByID(14902).Description)
local bSysMenu = tonumber(al.getMemoryRecordByID(14900).Description)
-- verify regularly if correct process has been opened... - see WinTitle...
local bCorrectProc = al.getMemoryRecordByID(14836).Description
local sCheckProc = al.getMemoryRecordByID(14860).Description
local nCheckMemRange = al.getMemoryRecordByID(14861).Description
nCheckMemRange = tonumber(nCheckMemRange,16)
local sProtFlags = al.getMemoryRecordByID(14897).Description
local nChkTimer = tonumber(al.getMemoryRecordByID(14866).Description)
-- set to '0' if you want default CE GUI...
local bDefaultCompactGui = tonumber(al.getMemoryRecordByID(14831).Description)
if (bDefaultCompactGui ~= 0 and bDefaultCompactGui ~= 0) then bDefaultCompactGui = 0 end
-- set minimum size CE form...
mForm.Constraints.MinWidth = 510
mForm.Constraints.MinHeight = 300
-- add some color... ~ +compatible v6.7...  ~ default background color ~ 0xF6EEED
-- .List &amp; .Header not supported in prev.7x...
-- also converting color 'endianness'...
local hColor = al.getMemoryRecordByID(14833).Description
local sTmp = ""
for i = #hColor, 0, -2 do sTmp = sTmp .. string.sub(hColor,10,i) end
hColor = '0x' .. sTmp
local function setListColor(sColor)
    al.Control[0].BackgroundColor = sColor
    al.Control[0].Color = sColor
    al.Control[0].BackgroundColor = sColor
    al.Control[0].Color = sColor
end
setListColor(hColor)
-- define your default browser...
--local mr = al.getMemoryRecordByID(14654)
sBrowserID = 14830
sBrowser = al.getMemoryRecordByID(sBrowserID).Description .. '.exe'
sBrowserStringID = 14858
sBrowserString = al.getMemoryRecordByID(sBrowserStringID).Description
sSearch = " ? " .. sBrowserString .. [[ &gt;nul 2&gt;nul]]
-- Show/Hide Error &amp; Settings sections ~ see cycleConfig()...
local mrConfig = al.getMemoryRecordByID(1419)
-- prompt to save any changes in table, or simply ignore and quit instantly...
-- 'Ship Battle' script unintentionally changes table, causing a 'save'-prompt upon quiting...
-- google "memrec.DontSave still triggers Save changes"
local bPromptToSave = al.getMemoryRecordByID(14854).Description
-- sets 'editedsincelastsave' property accordingly...
-- note: setting to 'false' will stop CE from closing ?!
local function NoSaveChanges(bSaveOff)
  getMainForm().OnCloseQuery=function()
      --messageDialog('Throw away all your unsaved changes?', mtConfirmation,  mbYes, mbYesToAll)
      return bSaveOff end
end
if bPromptToSave == "0" then NoSaveChanges(true) end
-- hide most lua window elements...
-- keep menu copy ~ see settings DevTools...
if (luaMenu == nil) then luaMenu = getLuaEngine().Menu end
bHideLua = al.getMemoryRecordByID(14856).Description
if bHideLua == "1" then
   local luaForm = getLuaEngine()
   luaForm.Panel1.Visible = false
   luaForm.Splitter1.Visible = false
   luaForm.Menu = nil
end
-- Scripts to run per Timer interval
local mrScriptToRun = al.getMemoryRecordByID(1)
-- Pathname save location (eg: Dissect Code)
local pathSaveFiles = al.getMemoryRecordByID(14033).Description
local bDissectProc = al.getMemoryRecordByID(14034).Description
-- Dissect Structure: Game_engine, followed by respective offsets in chain path...
structParams = al.getMemoryRecordByID(14066).Description
nNameLookupID = 0
-- Pathname report export location...
sPathExport = getAddressList().getMemoryRecordByID(14424).Description


-- Initialize Special Scripts ~ Maintenance scripts ...
local mr = al.getMemoryRecordByID(26072)
mr.Active = true

-- redirect all prints for export to file...
-- makes use of global 'fContent' variable...!
default_print = print
function redirectPrint(bRedirect)
     if ( bRedirect == 1) then
        print = function(str)
              fContent = fContent .. str .. '\n'
        end
     else
        print = default_print
     end
end

-- functions for [Tools] submnenu...
-- **********************************
-- adds a Compact GUI...
-- google: "cheat engine CE compact mode" &amp; "Add menuItem for Main CE Form (hide/show some control)"
local sCompactMark = ' ✓'
sWindowMark = ''
sGetnameMark = ''
local sConfigMark = ''
local sMenuItem1 = 'Compact View'
local sMenuItem2 = 'Window Mode'
local sMenuItem3 = 'Errors &amp;&amp; Settings...'
local sMenuItem4 = 'Select &amp;&amp; Launch Your Game...'
local sMenuItem5 = 'Show Table Name...'
local sMenuItem6 = 'Disable All Cheats [Ctrl+F11/F12]'

local sMenuItem21 = 'Open Memory View'
local sMenuItem22 = 'Open Dissect Structure'
local sMenuItem23 = 'Open Lua Engine'
local sMenuItem24 = 'Show CE Debug Info'
local sMenuItem25 = 'Dissect Code...'
local sMenuItem26 = 'Load Dissect Code'
local sMenuItem27 = 'Save Dissect Code'
local sMenuItem28 = 'Build Dissect Code'
local sMenuItem29 = 'Clear Dissect Code'
sMenuItem30 = 'getName...'
local sMenuItem31 = 'Switch Lua Engine GUI'

local sMenuItem41 = "Delete All 'Unnamed' Structures..."
local sMenuItem42 = "Delete Structures Selectively..."
local sMenuItem43 = "Add Address By Reference"
local sMenuItem44 = "CLean Up Structures..."
local sMenuItem45 = "Switch Lua Engine Gui"

local function cycleFullCompact()
   local state = not(compactmenuitem.Caption == sMenuItem1)
   compactmenuitem.Caption = state and sMenuItem1 or (sMenuItem1 .. sCompactMark)

   mForm.Splitter1.Visible = state
   --getMainForm().Panel1.Visible    = state
   --mForm.Panel2.Visible    = state
   --getMainForm().Panel3.Visible    = state
   mForm.Panel4.Visible    = state
   mForm.Panel5.Visible    = state
   --getMainForm().Panel6.Visible    = state
   --getMainForm().Panel7.Visible    = state           -- seems to cause "incorrect gui"
   --local MPanel90 = createPanel(getMainForm().Panel7)
   --MPanel90.Anchors = '[akTop]'
   --getMainForm().Panel8.Visible    = state
   --getMainForm().Panel9.Visible    = state
   --getMainForm().Panel10.Visible   = state
   --getMainForm().Panel14.Visible   = state

   -- incorrect color gives black background...!
   if state then setListColor('0xFFFFFF') else setListColor(hColor) end
end

local bConfig = 1
local function cycleConfig()
    -- show/hide Errors &amp; Settings subsections...
    local ceVersion = tonumber(string.match(getCEVersion(), '^.-.'))
    if (bConfig == 1) then
        bConfig = 0
        sConfigMark = ''
        if (ceVersion &lt; 7) then
            mrConfig.Options = '[moHideChildren,moDeactivateChildrenAsWell]'
        else
            mrConfig.Options = '[moAlwaysHideChildren,moDeactivateChildrenAsWell]'
        end
        mrConfig.Active = false
    else
        bConfig = 1
        sConfigMark = ' ✓'
        mrConfig.Options = '[moDeactivateChildrenAsWell]'
        mrConfig.Active = true
    end
    Configmenuitem.Caption = sMenuItem3 .. sConfigMark
end

local function OpenFileDialog(sender)
    local fdialog = createOpenDialog(self)
    fdialog.Filename = myPath:match("(.*[/\\])")
    --fdialog.File = myGame:match("\\([^\\]+)$")
    fdialog.Filter = 'Executable files|*.exe'
    --fdialog.Options = "[ofNoLongNames,ofNoDereferenceLinks]"
    --fdialog.InitalDir = os.getenv('USERPROFILE')
    fdialog.Execute()
    local sEXE = fdialog.FileName:match("\\([^\\]+)$")
    if (sEXE ~= "" and sEXE ~= nil) then
       myGame = sEXE
       local sPath = fdialog.FileName:match("(.*[/\\])")
       local cmd = "start \"\" /d \"" .. sPath .. "\" \"" .. sEXE .. "\" " .. sGameParams
       --print(cmd)
       os.execute(cmd)
       --shellExecute(cmd)
       al.getMemoryRecordByID(myPathID).Description = sPath
       if ( bCorrectProc == '9' ) then
          local nCount = 1
          -- needed to attach process to CE...
          openProcess(myGame)
          while process ~= myGame do
              openProcess(myGame)
              sleep(1000)
              nCount = nCount + 1
              if (nCount &gt; 10) then
                  local sMessage = [[
                        CE can not seem to attach the program ?!
                        Use [File ~ Open Process] instead...]]
                  showMessage(sMessage)
                  break
              end
          end
          --print(string.format('%s ~ %s',tostring(enumModules()[1].Name),tostring(enumModules()[1].Address)))
          openProcess(myGame)
       end
    end
    --print(myGame)
end

myTablename = ''
local function ShowTableName()
    local sTablename = getTable()
    local sText = 'Table name &amp; location: \n'
    sText = sText .. '[' .. sTablename .. ']'
    local nType = mtInformation
    local nButton = mbOK
    messageDialog(sText, nType, nButton)
end

function getTable()
       local sOpen = mForm.OpenDialog1.FileName
       local sSave = mForm.SaveDialog1.FileName
       local s1 = sSave or sOpen -- or 'undefined'
       --print(s1 .. ' ~ ' .. myGame)
       -- gets processname now and then...
       if (s1:match("\\([^\\]+)$") == myGame:match("\\([^\\]+)$")) then s1 = myTablename end
       --local s2 = s1:match("(.*[/\\])") or s1 ~ pathname
       --local s1 = s1:match("\\([^\\]+)$") or s1 ~ filename
       myTablename = s1
       return myTablename
end

function DisableMainScript(bAll)
  if ( bDisableRun == 1 ) then return end
  --local bAll = bAll or true
  for i=0,al.Count-1 do
      if (bAll) then
          al[i].Active = false
      else
          if (al[i].Type &lt; 10) then al[i].Active = false end
      end
  end
end

local function OpenMemViewer()
    getMainForm().btnMemoryView.doClick()
end


function SplitStr(s, delimiter)
    result = {};
    for match in (s..delimiter):gmatch("(.-)"..delimiter) do
        table.insert(result, match);
    end
    return result;
end

-- functions for [Design] submnenu...
-- **********************************

-- add Design menu to Structure form...
local function OpenDissectStruct()
   --getMemoryViewForm().miDissectData2.doClick()
   --getMemoryViewForm().miOpenInDissectData.doClick()
   local form = createStructureForm()
   --local form = enumStructureForms()[1]
   local mmenu = form.Menu

   local mmenu_items = menu_getItems(mmenu)

   -- Design submenu...
   local mi1 = createMenuItem(mmenu)
   mi1.Caption = '[Design]'

   local DelUnnamedmenuitem = createMenuItem(mmenu)
   DelUnnamedmenuitem.Caption = sMenuItem41
   DelUnnamedmenuitem.OnClick = DissectStructRemove
   mi1.add(DelUnnamedmenuitem)

   local DissectStructRemoveSelectmenuitem = createMenuItem(mmenu)
   DissectStructRemoveSelectmenuitem.Caption = sMenuItem42
   DissectStructRemoveSelectmenuitem.OnClick = DissectStructRemoveSelect
   mi1.add(DissectStructRemoveSelectmenuitem)

   local Sepmenuitem = createMenuItem(mmenu)
   Sepmenuitem.Caption = '-'
   mi1.add(Sepmenuitem)

   local AddAddressRefmenuitem = createMenuItem(mmenu)
   AddAddressRefmenuitem.Caption = sMenuItem43
   AddAddressRefmenuitem.OnClick = AddAddressByRef
   mi1.add(AddAddressRefmenuitem)

   local CleanupStructmenuitem = createMenuItem(mmenu)
   CleanupStructmenuitem.Caption = sMenuItem44
   CleanupStructmenuitem.OnClick = CleanupStruct
   mi1.add(CleanupStructmenuitem)

   local Sep2menuitem = createMenuItem(mmenu)
   Sep2menuitem.Caption = '-'
   mi1.add(Sep2menuitem)

   local SwitchLuaGuimenuitem = createMenuItem(mmenu)
   SwitchLuaGuimenuitem.Caption = sMenuItem45
   SwitchLuaGuimenuitem.OnClick = SwitchLuaGui
   mi1.add(SwitchLuaGuimenuitem)

   mmenu_items.add(mi1)
   --form.show()
end

function DissectStructRemove()
  local nCount = getStructureCount()

  local sText = 'Do you want to delete all Unnamed structures now...? \n' ..
                'Note: [All] = Delete ALL structures !'
  local nResult = messageDialog(sText, mtInformation, mbYes, mbAll, mbCancel)
  if not (nResult == 6 or nResult == 8) then return end

  -- LIFO deletion...
  for i=nCount-1,0,-1 do
    --local sName = nil
    local oStruct = getStructure(i)
    local sName = string.match(oStruct.name, "unnamed")
    if (nResult == 8) then sName = oStruct.name end
    if (sName ~= nil) then oStruct.removeFromGlobalStructureList() end
  end
end

function CleanupStruct()
    local nResult = 0

    local nIdx = 0
    local aStructInfo = {}
    local aStructList = {}
    local aStructElem = {}
    function Split(s, sep)
        local sep = sep or '%.'
        local nPosSep = string.find(s,sep)
        if (nPosSep == nil) then return end           -- when explicit offsets are used...
        local sStr1 = string.sub(s,1,nPosSep-1)
        local sStr2 = string.sub(s,nPosSep+1)
        aStructInfo[sStr1] = nIdx
        aStructInfo[sStr2] = nIdx +1
        aStructList[sStr1] = nIdx

        local nOffset = 0
        local nCount = getStructureCount()
        for i=0,nCount-1 do
            local oStruct = getStructure(i)
            if (oStruct.Name  == sStr1) then
                local nElem = oStruct.Count
                for j=0,nElem-1 do
                    local oElem = oStruct.Element[j]
                    if (oElem.Name == sStr2) then nOffset = oElem.Offset; break end
                end
            end
        end

        aStructElem[sStr1..'~'..sStr2..'~'..nOffset] = nIdx
    end

    function StructElemRemove()
        local sText = 'Do you want to remove obsolete elements from all structures now...? \n\n'..
                      'Tip: Remove "Unnamed/Obsolete" structures first !'
        nResult = messageDialog(sText, mtInformation, mbYes, mbCancel)
        if not (nResult == 6 ) then return end

        -- clears Lua Engine window
        luaForm = getLuaEngine()
        luaForm.MenuItem5.doClick()

        print('\n\n')
        print('Recreating "Structure.Elements" objects... Please, be patient... \n')

        local nCount = getStructureCount()
        -- perhaps: better to delete structs first and then add struct.elements...?!
        for i=nCount-1,0,-1 do
            local oStruct = getStructure(i)
            local sName = string.match(oStruct.name, "unnamed")
            if (sName == nil) then
                oStruct.destroy()
            end
        end

        local sPrevStruct = ''
        local oCurStruct = nil
        for k,v in ipairs(aStructElem) do
            local aString = SplitStr(v, '~')
            local sCurStruct = aString[1]

            print('=&gt; ['.. k .. ']: ' .. aString[1] .. ' + ' .. aString[2] .. ' + ' .. string.format('%X',tonumber(aString[3])))
            if (sCurStruct ~= sPrevStruct) then
                oCurStruct = createStructure(aString[1])
                oCurStruct.addToGlobalStructureList()
            end
            local oElem = oCurStruct.addElement()
            oElem.Name = aString[2]
            oElem.Offset = tonumber(aString[3])
            oElem.Vartype = 3
            sPrevStruct = aString[1]
        end
    end

    -- *********************************
    -- *** looping through memrecords...
    local al = getAddressList()
    local nCount = al.Count
    local sSep = '%.'

    for i=0,nCount-1 do
        local mr = al.getMemoryRecord(i)
        local addrVal = tostring(tonumber(mr.Address) or -99)
        if (addrVal == "-99") then addrVal = string.sub(mr.Address,1,1) end
        local sDescr = string.match(mr.Description,"pointerscan")

        if ( (mr.Type &lt; 10 and mr.OffsetCount &gt; 0 and sDescr == nil) or addrVal == "+") then
            --print(string.format('[%03d/%03d~%03d]: %s =&gt; %02d - %03d |  %s ~&gt; %s {%s}',
             --                    i, mr.ID, mr.Index, mr.Description, mr.Type, mr.OffsetCount, mr.Address, addrVal, sDescr))

            if (string.sub(mr.Address,1,1) == "+") then
                Split(string.sub(mr.Address,2),sSep)
            end
            for j=0,mr.OffsetCount-1 do
                local sOffset = tonumber(mr.OffsetText[j],16)
                if (sOffset == nil) then
                    Split(mr.OffsetText[j],sSep)
                end
            end
        end
    end

    local aTmp = {}
    for n in pairs(aStructElem) do table.insert(aTmp, n) end
    table.sort(aTmp)
    aStructElem = aTmp

--[[
    for i,n in ipairs(aStructElem) do
        print(i .. ' - ' .. n .. ' [' .. aStructElem[i] .. ']')
    end


  local nCount = getStructureCount()
  local sName = ''
  for i=0,nCount-1 do
      local oStruct = getStructure(i)
      sName = oStruct.name
      print(tostring(sName))
  end

for k,v in pairs(aStructInfo) do
    print(k)
end
print('\n')
for k,v in pairs(aStructList) do
    print(k)
end
]]--

    StructElemRemove()

    if (nResult == 6 ) then
        print('\n =&gt; Verify your structures and then [Save As] your table under new name...')
        print('\n =&gt; Just close window when no longer needed...')
    end
end

-- ***
-- source info: google "cheat engine a way to create a checkbox list?"
function DissectStructRemoveSelect()
    function createScrollBox(Parent)
        local scrbox = createComponentClass('TScrollBox', Parent)
        scrbox.Parent = Parent
        return scrbox
    end

    local function addImgButton(oPanel)
        local btn1 = createButton(oPanel)
        btn1.Width = 120
        btn1.Height = 20
        btn1.Top = oPanel.Height - btn1.Height - 10
        btn1.Left = 10
        btn1.Caption = 'Delete selected...'
        btn1.onClick = bg_Toggle
        btn1.ShowHint = true
        btn1.Hint = " Click here to initiate deletion... "
    end

    function bg_Toggle(sender)
        local sText = 'Do you want to delete these selected structures now...?'
        local nResult = messageDialog(sText, mtInformation, mbYes, mbCancel)
        if not (nResult == 6 ) then return end

        local nCount = getStructureCount()
        local i
        for i=nCount-1,0,-1 do
            --print(_G['cbx'..i].State)
            local oStruct = getStructure(i)
            if (_G['cbx'..i].State == 1) then
                oStruct.destroy()
            end
        end
        f.close()
    end

    function buildListbox()
        local nCount = getStructureCount()
        if (nCount == 0) then return end

        f = createForm()
        f.Top = 200
        f.Left = 200
        f.Width = 350
        f.Height = 350
        f.Caption = "Deleting structures..."

        local oPanel = createPanel(f)
        oPanel.width,oPanel.top,oPanel.left = 320,10,10
        oPanel.Height = 300

        addImgButton(f)

        a = createScrollBox(oPanel)
        a.Top = 0
        a.Left = 10
        a.Width = 300
        a.Height = 290
        a.Color = '0x00DFF7FF'
        a.ScrollWidth = 10
        a.VertScrollBar.Increment = 200
        a.VertScrollBar.Page = 300
        --a.VertScrollBar.Smooth = true
        local nRange = nCount * 15            -- still gives good results with "full" structure list...
        a.VertScrollBar.Range = nRange

        local ctop=a.Top
        local i
        for i=0,nCount-1 do
            local oStruct = getStructure(i)
            sName = oStruct.name
            local cbxname='cbx'..i
            --print(cbxname .. ' : ' .. sName)
            local cbx=createCheckBox(a)
            _G[cbxname]=cbx
            cbx.Left = 10
            cbx.Top = ctop
            ctop=ctop+20
            cbx.caption = sName
        end
    end

    buildListbox()
end

-- ***
-- source info: google "cheat engine Change description/value of a node in structure dissect"
function AddAddressByRef()
    local bCreateStruct = true
    local bReplaceBracket = '_'
    local bReplaceSpace = false

    local structForm = enumStructureForms()[1]
    if (structForm == nil) then return end

    -- gives base/startaddress of chain_Structs...
    local sBaseAddr = structForm.Column[0].AddressText
    local sBaseAddr2 = sBaseAddr:match("%[(.-)%]")
    if (sBaseAddr2 ~= nil) then sBaseAddr = sBaseAddr2 end
    --print(string.format("A) %X - %s",structForm.Column[0].Address, sBaseAddr))

    local aStructList = {}
    local nCount = getStructureCount()
    local sName = ''

    for i=0,nCount-1 do
        local oStruct = getStructure(i)
        sName = oStruct.name
        if (sName ~= nil) then aStructList[sName] = i end
        --print('{' .. i .. '}: ' .. tostring(sName))
    end

--[[
for k,v in pairs(aStructList) do
    print(k .. ' ~ ' .. v)
end
]]--

    local entry = structForm.tvStructureView.Selected
    local struct = integerToUserData(entry.Parent.Data)
    local structelement = struct.Element[entry.Index]

    local offsetlist={}
    nCount = 0
    while entry.Parent do
        local sStruct = structelement.Name
        -- replacing [] and 'spaces'...
        local sStruct1 = string.gsub(sStruct,'[%[%]]',bReplaceBracket)
        if (sStruct ~= sStruct1) then
            if (bReplaceBracket ~= '') then
                if (bReplaceSpace) then sStruct = string.gsub(sStruct,'%s',bReplaceBracket) end
                sStruct = string.gsub(sStruct,'[%[%]]',bReplaceBracket)
            else
                sStruct = ''
            end
        end
        local bUseOffset = 0
        --print(string.format('[%X] = %s',structelement.Offset, sStruct))
        table.insert(offsetlist,1,{structelement.Offset, sStruct, structelement.Vartype, bUseOffset})
        entry = entry.Parent
        if entry.Parent then
            struct = integerToUserData(entry.Parent.Data)
            structelement = struct.Element[entry.Index]
        end
    nCount = nCount + 1
    end
    -- add mainstruct name...
    table.insert(offsetlist,1,{0,struct.Name,0,0})

    -- create memrecord...
    local al = getAddressList()
    local mr = al.createMemoryRecord()
    local sDescript = offsetlist[#offsetlist][2]
    if (sDescript == '') then sDescript = '_no_Name_Descriptive' end
    mr.Description = sDescript
    mr.Address = sBaseAddr
    mr.Type = offsetlist[#offsetlist][3]
    mr.OffsetCount = #offsetlist-1

    for i=2,#offsetlist do
        local sCurStruct = offsetlist[i-1][2]
        if (bCreateStruct and sCurStruct ~= '') then
            local oStruct = getStructure(aStructList[sCurStruct])
            if (aStructList[sCurStruct] == nil) then
                oStruct = createStructure(sCurStruct)
                oStruct.addToGlobalStructureList()
            end
            local oElem = oStruct.getElementByOffset(offsetlist[i][1])
            if (oElem == nil) then oElem = oStruct.addElement() end
            oElem.Offset = offsetlist[i][1]
            oElem.Name = offsetlist[i][2]
        end
        local sAddr1 = offsetlist[i-1][2]
        local sAddr2 = offsetlist[i][2]
        sAddress =  sAddr1 .. '.' .. sAddr2
        if (sAddr1 == '' or sAddr2 == '') then mr.Offset[#offsetlist-i] = offsetlist[i][1]
        else mr.OffsetText[#offsetlist-i] = sAddress end

        --print(string.format('%X ~ %s =&gt; Type: %d |  bUseOffset: %d',offsetlist[i][1], sAddress, offsetlist[i][3], offsetlist[i][4]))
    end
end

local function OpenLuaEngine()
    form = getLuaEngine()                            -- get Lua Engine form
    form.MenuItem5.doClick()                         -- clear its window (using menu_item)
    getMemoryViewForm().miLuaEngine.doClick()
    form.Panel1.Visible = true
    form.Splitter1.Visible = true
    form.Menu = luaMenu
end

function SwitchLuaGui()
    if (bHideLua == 0) then bHideLua = 1 else bHideLua = 0 end

    form = getLuaEngine()
    form.MenuItem5.doClick()                         -- clearing lua window
    getMemoryViewForm().miLuaEngine.doClick()        -- opening lua window

    if (luaMenu == nil) then luaMenu = form.Menu end

    if (bHideLua == 0) then
       form.Panel1.Visible = true
       form.Splitter1.Visible = true
       form.Menu = luaMenu

       form.Font.Name = 'default'
       form.Font.Size = 10

       --form.Panel2.Visible = false
       --form.Panel3.Visible = false
    else
        form.Panel1.Visible = false
        form.Splitter1.Visible = false
        form.Menu = nil
    end
end

-- END functions for [Design] submnenu...
-- **************************************

local function CheckCEinfo()
    local myCEset = getSettings()                     -- or getSettings('')
    local nDebugger1 = myCEset.Value['Use VEH Debugger']
    local nDebugger2 = myCEset.Value['Use Windows Debugger']
    local nDebugger3 = myCEset.Value['Use Kernel Debugger']
    local sDebugger = 'VEH'
    if ( nDebugger2 == '1') then sDebugger = 'Windows' end
    if ( nDebugger3 == '1') then sDebugger = 'Kernel' end

    local nBP1 = myCEset.Value['Hardware breakpoints']
    local nBP2 = myCEset.Value['Software breakpoints']
    local nBP3 = myCEset.Value['Exception breakpoints']
    local sBP = 'Hardware'
    if ( nBP2 == '1') then sBP = 'Software' end
    if ( nBP3 == '1') then sBP = 'Page Exceptions' end

    showMessage('Debugger   : ' .. sDebugger .. "\n\z" .. 'Breakpoints: ' .. sBP)
--[[
    print('Debugger   : ' .. sDebugger .. '\n')
    print('Breakpoints: ' .. sBP .. '\n')

    myCEset = getSettings('VersionCheck')
    print('VersionCheck:')
    print('Check On Launch: \t' .. myCEset.Value['CheckOnLaunch'])
    print('Check Interval: \t' .. myCEset.Value['CheckInterval'])
    ]]
end

function chkDirFile(sPath, bType)
    -- directory can NOT end with a '\'... !
    local sCheck = string.sub(sPath,-1)
    if (sCheck == '\\') then sPath = string.gsub(sPath,'\\$','') end
    --print(sPath)
    local attr = lfs.attributes(sPath)
    local sType = 'directory'
    if (bType == 1) then sType = 'file' end
    if attr then
       -- file/folder exists or get filesize...
       if (bType == 2) then
          if (attr.size &lt; 1000) then
             return '(file seems invalid as being too small... ?!) \n'
          else return '\n' end
       end
       if attr.mode == sType then
          return true
       else
          return false
       end
    end
    return false
end

function getPath(path, sMgs, sSection)
    local path = path
    if ( path == '&lt;game&gt;' ) then
       local bExist = chkDirFile(myPath,0)
       if bExist then path = myPath else path = 'undefined' end
    end
    if ( path == '&lt;table&gt;' ) then
       local sTablename = getTable():match("(.*[/\\])")
       local bExist = chkDirFile(sTablename,0)
       if bExist then path = sTablename else path = 'undefined' end
    end
    local bExist = chkDirFile(path,0)
    if not bExist then
       showMessage('Your \'' .. sMgs .. '\'  is incorrect ! \n' ..
                    '[' .. path .. '] \n\n' ..
                   'Check [' .. sSection .. '...] and correct accordingly...')
       path = 'undefined'
    end
    return path
end

local function DissectCode(sender)
    local path = getPath(pathSaveFiles,'Dissect Code location','Developer tools')
    if ( path == 'undefined' ) then return end

    -- for those rare occassions whereby myGame is not picked up...
    if ( bDissectProc == '0' ) then
       --if (process == nil or process == '') then return end
       --if (myGame == nil or myGame == '') then return end
       if not openProcess(myGame) then
          if not openProcess(process) then
             showMessage('You need to attach a game first... !')
             return
          else
              myGame = process
          end
       end
    else
        -- manually attaching process can give problems for certain games...
        if not openProcess(process) then
           showMessage('You need to attach a game first... !')
           return
        else
           myGame = process
        end
    end

    local sCheck = string.sub(path,-1)
    if (sCheck == '\\') then path = string.gsub(path,'\\$','') end
    path = string.format(path .. '\\' .. myGame:match("(.+)%..+") .. '.disCode')
    --print(path)

    local bExist = chkDirFile(path,1)
    local sFileExist = 'Following Dissect Code file already exists: \n'
    local sFileInvalid = '\n'
    if bExist then
        local bSize = chkDirFile(path,2)
        -- filesize in bytes...
        if not (bSize) then
           sFileInvalid = '(file seems invalid as being too small... ?!) \n'
        end
    end

    local menufn = sender.Caption
    if menufn == sMenuItem26 then
       if bExist then
          sFileInvalid = chkDirFile(path,2)
          if (not ( sFileInvalid == '\n') ) then
             local sText = sFileExist ..
                           '[' .. path .. '] \n' ..
                           sFileInvalid ..
                           '\n\n' ..
                           'Therefore this file will not be loaded...'
             showMessage(sText)
             return
          end
          local sText = sFileExist ..
                        '[' .. path .. '] \n\n\n' ..
                        'Do you want to load it now...? \n' ..
                        '&gt; loading will take about 10~30 secs \n' ..
                        '&gt; wait for it to finish...'
          local nResult = messageDialog(sText, mtInformation, mbYes, mbCancel)
          if not (nResult == 6 ) then return end
       else
           local sText = 'Following Dissect Code file could not be found:' ..
                         '\n' .. '[' .. path .. ']'
           showMessage(sText)
           return
       end

       local bOK = getDissectCode().loadFromFile(path)
       if (bOK) then
          sText = 'Dissect Code file loaded successfully...'
       else
          sText = 'Dissect Code file could not be loaded... ?!'
       end
       showMessage(sText)
    end

    if menufn == sMenuItem27 then
       if ( getDissectCode().getReferencedStrings() == nil ) then
          sText = 'No Dissect Code Analysis currently exits... \n' ..
                  'Either Load a Dissect Code file or Build one... !'
          showMessage(sText)
          return
       end
       if bExist then
          local sText = 'Are your sure you want to overwrite it now...?! \n' ..
                        '&gt; saving info will take about 10~30 secs \n' ..
                        '&gt; wait for it to finish...'
          sFileInvalid = chkDirFile(path,2)
          sText = sFileExist ..
                  '[' .. path .. '] \n' ..
                  sFileInvalid  .. '\n\n' ..
                  sText

          local nResult = messageDialog(sText, mtWarning, mbYes, mbCancel)
          if not (nResult == 6 ) then return end
       else
          sText = 'The Dissect Code file will be save as follows: \n' ..
                  '[' .. path .. '] \n\n\n' ..
                  'Do you want to save it now...? \n' ..
                  '&gt; saving info will take about 10~30 secs \n' ..
                  '&gt; wait for it to finish...'
          local nResult = messageDialog(sText, mtWarning, mbYes, mbCancel)
          if not (nResult == 6 ) then return end
       end

       local bOK = getDissectCode().saveToFile(path)
       -- verify if filesize makes sense...
       sFileInvalid = chkDirFile(path,2)
       if (not ( sFileInvalid == '\n') ) then
          local sText = 'Following Dissect Code file has been created: \n' ..
                        '[' .. path .. '] \n' ..
                        sFileInvalid .. '\n' ..
                        'Therefore you should try to resave and/or rebuild...'
          showMessage(sText)
          return
       end

       if (bOK) then
          sText = 'Dissect Code file saved successfully...'
       else
          sText = 'Dissect Code file could not be saved... ?!'
       end
       showMessage(sText)
    end

    if menufn == sMenuItem28 then
       local sText = 'The Dissect Code routine can run a very long time ! \n' ..
                     'Are you sure you want to start this process now ? \n' ..
                     '(close the analysis window when finished...) ?'
       if bExist then
          sFileInvalid = chkDirFile(path,2)
          sText = sFileExist ..
                  '[' .. path .. '] \n' ..
                  sFileInvalid .. '\n\n' ..
                  sText
       end
       local nResult = messageDialog(sText,mtWarning, mbYes, mbCancel)
       if not (nResult == 6 ) then return end

       -- also possible to call: miReferencedFunctions
       getMemoryViewForm().Dissectcode1.doClick()
    end

    if menufn == sMenuItem29 then
       local sText = 'Are you sure you want to clear the current Dissect Code Analysis ?'
       if bExist then
          sFileInvalid = chkDirFile(path,2)
          sText = sFileExist ..
                  '[' .. path .. '] \n' ..
                  sFileInvalid .. '\n\n' ..
                  sText
       end
       local nResult = messageDialog(sText,mtWarning, mbYes, mbCancel)
       if not (nResult == 6 ) then return end

       getDissectCode().clear()
    end
end



-- section [Design] submnenu (main)...
-- ****************************

-- adding submenus...
-- ******************
-- 1 = menuTitle ~2 = functionName
aMenuEngine = { {'getName Anvil','getAnvil'},{'getName UE3','getUE3'},{'getName UE4','getUE4'},{'getName UE4.1x','getUE41'} }
local function addMenuItem()
   local mmenu = mForm.Menu
   local mmenu_items = menu_getItems(mmenu)

   -- Design submenu...
   if (bSysMenu == 1) then
      local mi2 = createMenuItem(mmenu)
      mi2.Caption = '[Design]'

      local MemViewmenuitem = createMenuItem(mmenu)
      MemViewmenuitem.Caption = sMenuItem21
      MemViewmenuitem.OnClick = OpenMemViewer
      mi2.add(MemViewmenuitem)

      local DissectStructmenuitem = createMenuItem(mmenu)
      DissectStructmenuitem.Caption = sMenuItem22
      DissectStructmenuitem.OnClick = OpenDissectStruct
      mi2.add(DissectStructmenuitem)

      local LuaEnginemenuitem = createMenuItem(mmenu)
      LuaEnginemenuitem.Caption = sMenuItem23
      LuaEnginemenuitem.OnClick = OpenLuaEngine
      mi2.add(LuaEnginemenuitem)

      local Sepmenuitem = createMenuItem(mmenu)
      Sepmenuitem.Caption = '-'
      mi2.add(Sepmenuitem)

      local CheckDebugmenuitem = createMenuItem(mmenu)
      CheckDebugmenuitem.Caption = sMenuItem24
      CheckDebugmenuitem.OnClick = CheckCEinfo
      mi2.add(CheckDebugmenuitem)

      local Dissect_mi = createMenuItem(mmenu)
      Dissect_mi.Caption = sMenuItem25
      --DissectLoadmenuitem.OnClick = DissectCode
      mi2.add(Dissect_mi)

      local DissectLoadmenuitem = createMenuItem(mmenu)
      DissectLoadmenuitem.Caption = sMenuItem26
      DissectLoadmenuitem.OnClick = DissectCode
      Dissect_mi.add(DissectLoadmenuitem)

      local DissectSavemenuitem = createMenuItem(mmenu)
      DissectSavemenuitem.Caption = sMenuItem27
      DissectSavemenuitem.OnClick = DissectCode
      Dissect_mi.add(DissectSavemenuitem)

      local DissectBuildmenuitem = createMenuItem(mmenu)
      DissectBuildmenuitem.Caption = sMenuItem28
      DissectBuildmenuitem.OnClick = DissectCode
      Dissect_mi.add(DissectBuildmenuitem)

      local DissectClearmenuitem = createMenuItem(mmenu)
      DissectClearmenuitem.Caption = sMenuItem29
      DissectClearmenuitem.OnClick = DissectCode
      Dissect_mi.add(DissectClearmenuitem)

      -- show Anvil option...
      local gameOffsets = SplitStr(structParams, "~")
      local bStructEnabled = tonumber(string.format('%d',gameOffsets[1]))
      if aMenuEngine[bStructEnabled] then sMenuItem30 = aMenuEngine[bStructEnabled][1] end

      if (bStructEnabled ~= 99) then
         Getnamemenuitem = createMenuItem(mmenu)
         Getnamemenuitem.Caption = sMenuItem30 .. sGetnameMark
         Getnamemenuitem.OnClick = enableStructLookup
         mi2.add(Getnamemenuitem)
      end

      local Sep2menuitem = createMenuItem(mmenu)
      Sep2menuitem.Caption = '-'
      mi2.add(Sep2menuitem)

      SwitchLuamenuitem = createMenuItem(mmenu)
      SwitchLuamenuitem.Caption = sMenuItem31
      SwitchLuamenuitem.OnClick = SwitchLuaGui
      mi2.add(SwitchLuamenuitem)

      mmenu_items.add(mi2)
   end

   -- Tools submenu...
   local mi = createMenuItem(mmenu)
   mi.Caption = '[Tools]'

   compactmenuitem = createMenuItem(mmenu)
   compactmenuitem.Caption = sMenuItem1
   compactmenuitem.OnClick = cycleFullCompact
   mi.add(compactmenuitem)

   if (bWindowMode == 1) then
      WinModemenuitem = createMenuItem(mmenu)
      WinModemenuitem.Caption = sMenuItem2 .. sWindowMark
      WinModemenuitem.OnClick = cycleWinMode
      mi.add(WinModemenuitem)
   end

   OpenFilemenuitem = createMenuItem(mmenu)
   OpenFilemenuitem.Caption = sMenuItem4
   OpenFilemenuitem.OnClick = OpenFileDialog
   OpenFilemenuitem.Name = 'LaunchGame'
   mi.add(OpenFilemenuitem)

   local DisableCheatsmenuitem = createMenuItem(mmenu)
   DisableCheatsmenuitem.Caption = sMenuItem6
   DisableCheatsmenuitem.OnClick = DisableMainScript
   mi.add(DisableCheatsmenuitem)

   local Sepmenuitem = createMenuItem(mmenu)
   Sepmenuitem.Caption = '-'
   mi.add(Sepmenuitem)

   local ShowTablemenuitem = createMenuItem(mmenu)
   ShowTablemenuitem.Caption = sMenuItem5
   ShowTablemenuitem.OnClick = ShowTableName
   mi.add(ShowTablemenuitem)

   Configmenuitem = createMenuItem(mmenu)
   Configmenuitem.Caption = sMenuItem3 .. sConfigMark
   Configmenuitem.OnClick = cycleConfig
   mi.add(Configmenuitem)

   mmenu_items.add(mi)

   itemMenusalreadyexists = 'yes'
end


if not itemMenusalreadyexists then addMenuItem() end
if (bDefaultCompactGui == 1) then cycleFullCompact() end


-- adding image footer to gui...
-- google: "cheat engine Adding a background picture"
-- **************************************************
local sImgName = 'FearlessRev_Footer.png'

local function attachBackground(wc,tblFile)
   local p = createPicture()
   p.loadFromStream(findTableFile(tblFile).Stream)
   wc.OnPaint = function(sender)
     local c = sender.getCanvas()
     local bitmap = p.getBitmap()
     local width = wc.width
     -- centering image...
     width = (width /2) - (bitmap.Width /2) -- image width
     c.draw(width,0,bitmap)
   end
end


local function addImgFooter(oPanel,tblFile)
   if ImgFooter then return end
   --MPanelImg = createPanel(al)
   local p = createPicture()
   p.loadFromStream(findTableFile(tblFile).Stream)
   local bitmap = p.getBitmap()
   oPanel.width,oPanel.top,oPanel.left = 10,0,10
   -- get panel height based on img_height...
   oPanel.Height = bitmap.Height + 2
   oPanel.Align = alBottom
   oPanel.Caption = 'FearlessRevolution'
   ImgFooter = 'yes'
   -- additional settings...
   oPanel.Anchors = '[akBottom]'
   oPanel.Color = hColor                -- use same color as addresslist
   oPanel.setBevelOuter(0)              -- hide surrounding "border"border
end

-- google "cheat engine edit box has two properties that do not work"
local function addImgButton(oPanel)
   local btn1 = createButton(oPanel)
   btn1.Width = 35
   btn1.Height = 20
   btn1.Top = oPanel.Height - btn1.Height - 5
   btn1.Left = 5
   btn1.Caption = 'Info'
   btn1.onClick = bg_Toggle
   btn1.ShowHint = true
   btn1.Hint = " Click this button to open your browser, which will then show you this game\'s topic @ FRF... "
end

function bg_Toggle(sender)
    os.execute([[start "" ]] ..  sBrowser .. sSearch)
end

if not imgFooteralreadyexists then
   local MPanelImg = createPanel(al)
   addImgFooter(MPanelImg,sImgName)
   attachBackground(MPanelImg,sImgName)
   addImgButton(MPanelImg)

   cycleConfig()

   imgFooteralreadyexists = 'yes'
end

-- show info in Title bar...
-- *************************
function WinTitleTimer()
    local tmer2 = createTimer(mForm, false)
    tmer2.OnTimer = UpdateWinTitle
    tmer2.Interval = nChkTimer
    tmer2.Enabled = true
end

local sPID = 0
local bReset = 0
local bDisableRun = 0
function UpdateWinTitle()
    -- scripts to run w/ every time_interval...
    mrScriptToRun.Active = true
    -- ***
    local sGame = myGame
    local myPID = getProcessIDFromProcessName(myGame)
    if (myPID == sPID) then return end
    sPID = getProcessIDFromProcessName(myGame)
    if (sPID == nil) then sPID = 0 end
    --print(string.format('%s -- %s -- %s',myGame, tostring(sPID), process))
    if ( bCorrectProc == '0' or bCorrectProc == '1' or bCorrectProc == '2') then
       if ( openProcess(myGame) ) then
          -- x64 games can give "timely loading issues" here...
          if not pcall(function() getAddress(myGame) end) then sPID = 0; return end
          local startAddr = getAddress(myGame)
          local endAddr = nCheckMemRange
          if (endAddr &lt;= 0 ) then endAddr = getModuleSize(process) end
          endAddr = startAddr + endAddr
          local addrProc = getStaticAddr(sCheckProc,0,"",3,startAddr,endAddr,sProtFlags)
          if (addrProc == nil or addrProc == 0) then sPID = 0 else bReset = 1 end
          --print(tostring(sGame) .. ' + ' .. tostring(process))
       end
    end

    if (sPID == 0 or process == nil) then
       sGame = '&lt;no/incorrect Game process selected&gt;'
       -- in case of crashes, reset variable...
       myGame = al.getMemoryRecordByID(myGameID).Description
       if (bCorrectProc == '9') then myGame = '' end
       OpenFilemenuitem.Enabled = true
       bDisableRun = 0
    end
    --print("**" .. tostring(sPID) .. ' - ' .. tostring(process))
    mForm.Caption="Cheat Engine v" .. getCEVersion() .. "  ~  [" .. sGame .. "]"

    if (tmer2 ~= nil and sPID ~= 0 and bCorrectProc == '0') then
        tmer2.destroy()
        tmer2 = nil
    end

    -- "reset" table for pre-v7 CEs...
    if (bReset == 1) then
       -- using hotkey to disable script will disable scripts AND locked values...
       DisableMainScript(true)
       bReset = 0
       bDisableRun = 1
       OpenFilemenuitem.Enabled = false

       if (bWindowMode == 1) then addrD3D = 0; CheckWindowMode() end
    end

    if ( bCorrectProc == '2' and myPID ~= sPID) then CheckOnFilename() end
    --print("***" .. tostring(myStartAddr) .. " -*")
end

-- checks processlist for "similar" name...
function CheckOnFilename()
    -- remove extension...
    local sFilename = myGame:match("(.+)%..+")
    --print(myGame .. sFilename)
    if (sFilename == '' or sFilename == nil) then return end
    for pid,name in pairs(getProcessList()) do
        local bHit = string.find(name, sFilename)
        if ( bHit ~= nil ) then
           --print(string.format("%x - %s", pid,name))
           myGame = name
        end
    --print(string.format("%x - %s", pid,name))
    end
end

-- see Settings page for details...
WinTitleTimer()

-- ensures that myGame is updated when [File ~ Open Process]-ing...
function onOpenProcess(processId)
    myGame = getProcessList()[processId]
    --print(string.format('ProcessID: %d &amp; name: %s', processId,getProcessList()[processId] ))
    getTable()
end

-- google "cheat engine REQ: access to CT table name - [Solved] ~ @CEF - Cheat Engine section"
function onTableLoad(before)
   if ( before == false ) then
      getTable()
   end
end

-- collects [address] found in opcode...
-- see also 'getName' as alternative...!
function getStaticAddr(sAOB,nOffset,sBaseAddr,nEval,nStartMem,nEndMem,sFlags,bFoundList)
  nEval = nEval or 0
  nStartMem = nStartMem or 0
  nEndMem = nEndMem or 0x7fffffffffff
  sFlags = sFlags or "+X-C-W"
  bFoundList = bFoundList or 0
  --local scan1 = AOBScan(sAOB,"+X-C-W")
  --print("* " .. scan1[0])
  local scan = createMemScan(false)
  scan.setOnlyOneResult(true)
  if (bFoundList == 1) then  scan.setOnlyOneResult(false) end
  scan.firstScan(soExactValue,vtByteArray,rtRounded,sAOB,nil,nStartMem,nEndMem,sFlags,
                                      fsmNotAligned,nil,true,false,false,false)
  scan.waitTillDone()
  scan.getOnlyResult()

  local addrStruct = scan.Result
  local oFound = ''
  local oScanList = ''
  if (bFoundList == 1) then
      oFound = createFoundList(scan)
      oScanList = scan.FoundList
      oScanList.initialize()
      addrStruct = tonumber(oScanList[0],16)
      --print(string.format('%d ~ %s',oScanList.Count, oScanList[0]))
  end
  scan.destroy()

  --print(string.format('+* %X *+',addrStruct))
  if (nEval == 0 or nEval == 2) then
      addrStruct = addrStruct - nOffset
      --print(string.format('+ %X +',addrStruct))
      local sASM = disassemble(addrStruct)
      local sAddr = sASM:match("%[(.-)%]")
      if sAddr == nil then return end
      --print('x['..sAddr..']x')
      addrStruct = tonumber(sAddr,16)

     --print(string.format('- %X -',offsVal))
     --offsVal = string.format('%X',readInteger(offsVal,true))
     --print(offsVal)
     --addrStruct = tonumber(offsVal,16)
     --if ( bArch ) then addrStruct = scan.Result + tonumber(offsVal,16) - nOffset + 4 end
     --print(string.format('%X',addrStruct))

     if (nEval == 2) then
        addrStruct = readPointer(addrStruct)
     end
  end

  if (nEval == 3) then return addrStruct end
  local bArch = targetIs64Bit()
  local addrFound = getAddress(sBaseAddr)
  if ( bArch ) then writeQword(addrFound,addrStruct) else writeInteger(addrFound,addrStruct) end
  --print(string.format('* %X *',addrStruct))
end


-- see Settings ~ Maintenance scripts...
function Form_Actions(sender)
    runFormScripts(sender)
end
-- run script at least once...
local mr = al.getMemoryRecordByID(26071)
mr.Active = true
-- load global variables...
local mr = al.getMemoryRecordByID(26073)
mr.Active = true

</LuaScript>
</CheatTable>
